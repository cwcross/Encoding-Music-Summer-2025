[
  {
    "objectID": "Vaudeville/Vaudeville_structured.html",
    "href": "Vaudeville/Vaudeville_structured.html",
    "title": "Vaudeville: Generating Structured Data of Musical Moments",
    "section": "",
    "text": "In this notebook, we want to set up a framework to extract a list of Musical Moments from a given Vaudeville play. To do this, we:\n\nSet up a Pydantic Basemodel defining the aspects of a Musical Moment.\nSet up a Basemodel for a whole play (or scene) that we pass it, containing a list of Musical Moments.\nBind an LLM to this structured output\nSplit the play up into scenes, to have the LLM analyze one at a time\n\nWith too much content at once, it begins to yield lower accuracy results\n\nFeed each scene into the LLM, and group it back together into one object\nConvert and export the final object, containing an entire play, as a CSV file\n\n\n\n\nHere, we use gpt-4o as our model, because this is a fairly complex task.\n\n\nCode\nimport getpass\nimport os\n\nif not os.environ.get(\"OPENAI_API_KEY\"):\n  os.environ[\"OPENAI_API_KEY\"] = getpass.getpass(\"Enter API key for OpenAI: \")\n\nfrom langchain.chat_models import init_chat_model\n\nllm = init_chat_model(\"gpt-4o\", model_provider=\"openai\")\n\n\nThe “Description” field is what the LLM uses to find each variable within a scene. For each variable, we want to tell it what it is, and where to find it.\n\n\nCode\nfrom typing import Optional\nfrom pydantic import BaseModel, Field\n\n\n# Pydantic\nclass MusicalMoment(BaseModel):\n    \"\"\"Many of these musical moments reuse some preexisting (and often well-known)  melody or tune.  These are variously called \"melodie”, or “air”, and identified with a short title that refers in some way to an opera or collection of melodies from which it was drawn.  The titles might include the names of works, or other characters in those original works. In the context of the plays, these tunes become the vehicle for newly composed lyrics, which are normally rhymed, and which normally follow the poetic scansion and structure of the original lyrics.  Rhyme, versification and structure are thus of interest to us.\"\"\"\n\n    act: int = Field(description=\"The act number in which this musical moment takes place. Will be labeled at the top of the act or scene in which it takes place.\")\n    scene: int = Field(description=\"The scene number in which the musical moment takes place. Will be labeled at the top of the scene.\")\n    number: int = Field(description = \"The index of the musical moment in the scene. For example, if this is the first musical moment in the scene, this should be 1.\")\n    characters: list[str] = Field(description=\"the character or characters who are singing (or otherwise making music) within this specific musical moment,\")\n    dramatic_situation: str = Field(description=\"the dramatic situation (a love scene, a crowd scene) in which the musical moment is occurring\")\n    air_or_melodie: str = Field(description=\"The title of the 'air' or 'melodie' of which the musical moment is based. It will be labeled in the text as 'air' or 'melodie'.\")\n    poetic_text: str = Field(description=\"The text from the music number. Do not include stage directions, only the lyrics sung by the characters in this musical moment\")\n    rhyme_scheme: str = Field(description = \"The rhyme scheme for the poetic text in the musical moment. For example, sentences that end in 'tree' 'be' 'why' and 'high' would have a rhyme scheme of AABB.\")\n    poetic_form: str = Field(description=\"form of the poetic text, which might involve some refrain\")\n    end_of_line_accents: list[str] = Field(description = \"the end accent for each line (masculine or féminine)\")\n    syllable_count_per_line: list[int] = Field(description = \"the number of syllables per line. look out for contractions and colloquialisms.that might make the count of syllables less than obvious. Normally a word like ‘voilà’ would of course have 2 syllables. But the musical rhythm of a particular melodie might require that it be _sung_ as only one syllable, as would be the case if the text reads ‘v’la’. Similarly ‘mademoiselle’ would have 4 syllables in spoken French. But the musical context might make it sound like 5. Or a character speaking dialect might sing “Mam’zelle”, which would have only 2 (or perhaps 3) syllables.\")\n    irregularities: Optional[str] = Field(description=\"any irregularities within the musical number\")\n    stage_direction_or_cues: Optional[str] = Field(description=\"any stage directions, which tell a character what to do, but aren't a part of another character's dialogue. These are usually connected with a character’s name, and often are in some contrasting typography (italics, or in parentheses - though this may not be picked up by the filereader).  Sometimes these directions even happen in the midst of a song! In a related way there are sometimes ‘cues’ for music, or performance (as when there is an offstage sound effect, or someone is humming) Most times the stage directions appear just before or after the song text. But sometimes they appear in the midst of the texts. The directions should be reported here and not in the transcription of the poem.\")\n    reprise: Optional[str] = Field(description=\"there are sometimes directions that indicate the ‘reprise’ of some earlier number or chorus.\")\n    \n\n\nstructured_llm = llm.with_structured_output(MusicalMoment)\n\n# structured_llm.invoke(\"Create a musical moment\")\n\n\nBelow is the datatype it will return for each scene/play - a list of Musical Moments.\n\n\nCode\nclass VaudevillePlay(BaseModel):\n    musicalMoments: list[MusicalMoment] = Field(description=\"\"\"A list of musical moments in a Vaudeville play, as MusicalMoment objects. Many of these musical moments reuse some preexisting (and often well-known)  melody or tune.  These are variously called \"melodie”, or “air”, and identified with a short title that refers in some way to an opera or collection of melodies from which it was drawn.  The titles might include the names of works, or other characters in those original works. In the context of the plays, these tunes become the vehicle for newly composed lyrics, which are normally rhymed, and which normally follow the poetic scansion and structure of the original lyrics.  Rhyme, versification and structure are thus of interest to us.\"\"\")\n    \n\nstructured_llm = llm.with_structured_output(VaudevillePlay)\n\n\nHere, we define the system prompt. We include a sentence about file readers missing spaces and breaking lines, so that the LLM knows to look out for it. We have found that the LLM is highly effective in correcting these inaccuracies if we mention them.\n\n\nCode\nsystem_prompt = \"\"\"\nYou are a literary analyst specializing in French Vaudeville plays from the 19th century. \nYour goal is to identify each musical moment in the text, and for each, extract detailed structured information, \nincluding act, scene, characters, dramatic situation, air or melodie, poetic text, rhyme scheme, poetic form, end-of-line accents, syllable count, and any irregularities. \nSome parts of the text were slightly misinterpreted by the file reader (e.g., missing spaces or strange line breaks).\n\"\"\"\nhuman_prompt = \"\"\"\nGiven the following chunk of the play, analyze and return the musical moments as a structured VaudevillePlay object.\n\"\"\"\n\n\n\n\n\nHere, we simply feed it a scene to see what it pulls out. The code is commented out to ensure it isn’t accidentally run again.\n\n\nCode\n# moments = structured_llm.invoke(r\"\"\"Analyze the musical moment within the chunk of this Vaudeville play. Some parts of the text were slightly misinterpreted by the filereader, especially missing spaces. Here is the text from the play:\n                      \n#                       ACTE I, SCÈNE VI. 11\n# DERBIGNY.\n# Elle n'est pasassezmontante, puisqu'il fautvousdirelemot.\n# (Pendantcequi suit, Paulinevaaufondetmetsonchapeau.)\n# PAMELA.\n# Onlesporte comme ça... voyez, moi?... ça avantage. (Elle\n# ouvresonchâle.)\n# DERBIGNY,sévèrement.\n# C'estimmodeste, mademoiselle...Jevouspried'y ajouterquel\n# quesmillimètres...\n# PAMELA.\n# Commevousvoudrez; chacun son goût... maisvousavez tort.\n# DERBIGNY, sévèrement.\n# Mademoiselle...jevous prie d'y ajouter quelquesmillimètres!\n# PAMELA.\n# Nevousfâchez pas... je la ferai montante jusqu'au boutdu\n# nez... qu'est-cequeçamefait?\n# AIR:Desommeillerencor, machère.\n# Dubongoût,jen'suispasl'enn'mie,\n# Maisçam'estbien égal,mafoi!\n# Ens'env'loppantcommeun' momie,\n# Mam'zelleyperdraplusquemoi;\n# J'respectevosscrupul'sbarbares,\n# Maisjetiensàmesopinions;\n# Etjedéteste lesavares\n# Quicachentleursnapoléons.\n# (Elleremonte.)\n# DERBIGNY.\n# Eh bien! etPauline?...tuneluisouhaitespaslebonjour?\n# ISIDORE.\n# Si, monpapa...\n# PAULINE, quiaredescendu lascène, etd'un tonrailleur.\n# Oh! moi, j'ail'habitude d'ètreoubliée d'Isidore... Il metraite\n# enamie...Je necomptepas.\n# ISIDORE, allantàPauline.\n# Bonjour,Pauline...* (RegardantPaméla.)Elleestencoremieux\n# deprès.\n# PAMELA, àpart.\n# Qu'est-cequ'iladonc àmeregarder, ce petit?(Haut.)Etcette\n# robe, mademoiselle?\n# PAULINE\n# Là, dansma chambre.\n# FAMELA.\n# Ça sera fait endeuxtemps...J'ai aissé del'étoffe endedans.\n# (Eileentredanslachambrededroitetroisièmeplan.)\n# *Derbigny,Pauline,Isidore;Pamélaausecond plan.\n# 12 UN DOCTEUR EN HERBE.\n# ISIDORE, àpart, désolé.\n# Oh!...elles'enva!...*\n# DERBIGNY.\n# Ah!ça, avantderetourneràBriare, nous avons quelques em-\n# plettesàfaire,offretonbras à Pauline. (Bas, enpassantderrière\n# lui.)Tuferastapaixenroute*.\n# ISIDORE,embarrassé.\n# Monpapa... c'estque...\n# DERBIGNY.\n# Quoiencore?\n# ISIDORE.\n# C'estdemainl'examen.\n# DERBIGNY.\n# Nem'as-tupasditqueta compositionestfaite?\n# ISIDORE.\n# Oui, papa, oui... maison croitêtreprêt, et puis... il arrive...\n# vouscomprenez...\n# DERBIGNY.\n# Pastrop!\n# PAULINE,riant.\n# MonDieu, Isidore, que vous avezl'airdrôle!.. Dites donctout\n# desuitequevousavezbesoinderevoirvotretravail….. noussorti-\n# ronsbiensans vous...Onnevous envoudrapas...\n# ISIDORE.\n# Oh! merci, mademoisellePauline!\n# PAULINE.\n# Iln'y apasdequoi, allez!\n# DERBIGNY.\n# Queneledisais-tu?...le devoir avanttout. (Ildonnelebrasà\n# Pauline.)\n# ELBMESNE.\n# AIR: DeLuciede Lamermoor***.\n# Allons,courageetpersévère;\n# Soisbienattentif, etdemain,\n# Avecsuccès, oui,je l'espère,\n# Tupasserastonexamen.\n# ISIDORE.\n# Jetrembleetjemedésespère,\n# Quandjesongequec'est demain\n# Que,devantunjugesévère,\n# Jedoispassermonexamen.\n# PAULINE.\n# Jevoisce quiledésespère,\n# Quandjesongequec'estdemain\n# Que,devantunjugesévère,\n# Ildoitpassersonexamen.\n# *Pauline, Derbigny, Isidore.\n# **Pauline, Isidore, Derbigny.\n# ***Pauline,Derbigny,Isidore,\n#                       \"\"\")\n\n\n\n\nCode\nfor musicalMoment in moments.musicalMoments:\n    for attribute in musicalMoment:\n        print(attribute)\n    print(\"\\n\")\n\n\n('act', 1)\n('scene', 6)\n('characters', ['Pamela', 'Derbigny'])\n('dramatic_situation', 'Derbigny is reprimanding Pamela for her immodest dressing style while she defends her fashion choice.')\n('air_or_melodie', 'De sommeiller encor, ma chère')\n('poetic_text', \"Dubon goût, je n'suis pas l'enn'mie, Mais çam'est bien égal, ma foi! En s'env'loppant comme un' momie, Mam'zelle yperdr'a plusque moi; J'respecte vos scrupul's barbares, Mais je tiens à mes opinions; Et je déteste les avares Qui cachent leurs napoléons.\")\n('rhyme_scheme', 'ABABCDCD')\n('poetic_form', 'Verse with alternating rhymes, addressing the situation at hand.')\n('end_of_line_accents', ['feminine', 'masculine', 'feminine', 'masculine', 'feminine', 'masculine', 'feminine', 'masculine'])\n('syllable_count_per_line', [12, 8, 12, 8, 12, 8, 12, 8])\n('irregularities', None)\n\n\n('act', 1)\n('scene', 6)\n('characters', ['Isidore', 'Pauline', 'Derbigny'])\n('dramatic_situation', 'Pauline encourages Isidore to focus on his exam while Derbigny offers practical advice.')\n('air_or_melodie', 'De Lucia de Lammermoor')\n('poetic_text', \"Allons, courage et persévère; Sois bien attentif, et demain, Avec succès, oui, je l'espère, Tu passeras ton examen. Isidore: Je tremble et je me désespère, Quand je songe que c'est demain Que, devant un juge sévère, Je dois passer mon examen. Pauline: Je vois ce qui le désespère, Quand je songe que c'est demain Que, devant un juge sévère, Il doit passer son examen.\")\n('rhyme_scheme', 'ABAB CDCD EFEF GHG')\n('poetic_form', 'Repetitive refrain, with alternating rhymes, echoing a supportive entourage before an exam.')\n('end_of_line_accents', ['feminine', 'masculine', 'feminine', 'masculine', 'feminine', 'feminine', 'masculine', 'feminine', 'feminine', 'masculine', 'feminine', 'feminine'])\n('syllable_count_per_line', [12, 8, 12, 8, 12, 8, 12, 8, 12, 8, 12, 8])\n('irregularities', None)\n\n\n\n\nOur Pydantic object is working, and it did a good job at extracting the requested information.\n\n\n\n\n\n\nCode\n# Setting up pdf loading\n\nfrom pathlib import Path\nfrom langchain_community.document_loaders import PyPDFLoader\nfrom langchain_core.documents import Document\nfrom typing_extensions import List, TypedDict, Optional\nfrom langchain_core.prompts import ChatPromptTemplate\n\n\nasync def loadPDF(filepath: str) -&gt; list:\n    loader = PyPDFLoader(filepath)\n    pages = []\n    async for page in loader.alazy_load():\n        pages.append(page)   \n    return pages\n\nsource = await loadPDF(\"Files/PDFs/La_Dette_d_honneur.pdf\")\n\nfor page in source:\n        page.metadata['source'] = page.metadata['source'].replace(\"Vaudeville/Files/PDFs/\",\"\")\n\nsource_content = \"\"\nfor page in source:\n    source_content += page.page_content\nsource_full = Document(page_content = source_content, metadata = source[0].metadata)\n\n\n&lt;&gt;:21: SyntaxWarning: invalid escape sequence '\\P'\nC:\\Users\\charl\\AppData\\Local\\Temp\\ipykernel_6888\\2254834301.py:21: SyntaxWarning: invalid escape sequence '\\P'\n  page.metadata['source'] = page.metadata['source'].replace(\"C:\\\\Users\\\\charl\\\\Documents\\\\VSCode\\\\Vaudeville\\\\Files\\PDFs\\\\\",\"\")\n\n\n\n\nCode\nprint(source_full.page_content)\n\n\n\n\n\nA few possible approaches here: * Run a basic script to split the string at “Acte” or “Scene” (regex) * We may have to clean the inputted file first. This could be done with a cheap llm call to gpt-4o-mini. * Use a semantic splitter, which should roughly get everything right because content should be noticeably different between scenes in general. * It could mess a few things up, including splitting in the middle of a musical moment * Have the “cleaning” llm call also split by act and scene * Unsuccessful approach: Having it return the start and end characters of the acts. * Successful approach: Have a smaller LLM model look through the play and return a list of scene headers as they appear. Then, use regex splitting to get one scene at a time.\nWe included 2 approaches. The first is an example of what not to do - included for pedagogical purposes.\n\n\nIn this approach, we attempt to have an LLM find the start and end character counts of each scene. This did not work.\n\n\nCode\nimport getpass\nimport os\n\nif not os.environ.get(\"OPENAI_API_KEY\"):\n  os.environ[\"OPENAI_API_KEY\"] = getpass.getpass(\"Enter API key for OpenAI: \")\n\nfrom langchain.chat_models import init_chat_model\n\nllm = init_chat_model(\"gpt-4o\", model_provider=\"openai\")\nprocessing_llm = init_chat_model(\"gpt-4o-mini\", model_provider=\"openai\")\n\n\n\n\nCode\nfrom typing import Optional, List\nfrom pydantic import BaseModel, Field\n\nclass Scene(BaseModel):\n    \"\"\"A single scene from from a Vaudeville play\"\"\"\n\n    act: int = Field(description=\"The act number. Will be labeled at the top of the act or scene in which it takes place.\")\n    scene: int = Field(description=\"The scene number within the act. Will be labeled at the top of the scene. For example, if it is Act 3 Scene 2, this value should be 2.\")\n    start_character_number: int = Field(description=\"In terms of the entire document, what is the index of the first character of the scene, including the label of the scene, and act if mentioned next to the scene number (mostly only applicable if scene 1 of an act). For example, if the whole document was 'Play 1: Title. Act 1, Scene 2. Content.' then the start index would be 15, since 'Act' starts on the 16th character.\")\n    end_character_number: int = Field(description=\"In terms of the entire document, the index of the last character of the scene. It should be the last character before the next scene or act is labeled.\")\n\nclass FullPlay(BaseModel):\n    \"\"\"A full play, that has yet to be broken into individual scenes.\"\"\"\n\n    all_scenes: List[Scene] = Field(description=\"A list of every single scene's start and end - each as a Scene object containing indexes and the first and last character, so that it can easily be passed into a substring just containing the scene.\")\n\nformatted_splitter_llm = processing_llm.with_structured_output(FullPlay)\n\n\n\n\nCode\ndef split_up_play(doc):\n    response = formatted_splitter_llm.invoke(f\"The following is a Vaudeville play in French. Your job is to return the necessary indexes required to split it up into individual scenes. Thus, you will be looking for 'Acte' and 'Scène' throughout the text. For each scene, you will document the act, scene number (ex Act 4, Scene 1), start character index, and end character index as a Scene object, then add it to the list of scenes in the FullPlay object. All start and end indexes should be in terms of the full document; the goal is to create a substring using FullText[start_index:end_index] for each scene. After you've gone through the full document, you will return the FullPlay object.\\n\\nPlay Content:\\n{doc.page_content}\")\n    return response\n\n\n\n\nCode\nall_indexes = split_up_play(source_full)\n\n\nUpon looking into the result, it was clearly incorrect. Thus, we tried another approach.\n\n\n\nHere, we have the LLM return the scene headers as they appear in the text. Then, we split on these headers.\nThis is not perfect and a few headers are always missed, but it works well enough to split up the text into manageable chunks for the app. It also guarantees a split cannot occur in the middle of a scene.\n\n\nCode\nimport getpass\nimport os\n\nif not os.environ.get(\"OPENAI_API_KEY\"):\n  os.environ[\"OPENAI_API_KEY\"] = getpass.getpass(\"Enter API key for OpenAI: \")\n\nfrom langchain.chat_models import init_chat_model\n\nllm = init_chat_model(\"gpt-4o\", model_provider=\"openai\")\nprocessing_llm = init_chat_model(\"gpt-4o-mini\", model_provider=\"openai\")\n\n\n\n\nCode\nfrom typing import Optional, List\nfrom pydantic import BaseModel, Field\n\nclass Scene(BaseModel):\n    \"\"\"A single scene from a Vaudeville play\"\"\"\n\n    act: int = Field(description=\"The act number or label as it appears in the text.\")\n    scene: int = Field(description=\"The scene number or label as it appears in the text.\")\n    header: str = Field(description=\"The exact scene header line, copied verbatim from the text.\")\n\nclass FullPlay(BaseModel):\n    \"\"\"A full play, that has yet to be broken into individual scenes.\"\"\"\n\n    all_scenes: List[Scene] = Field(description=\"A list of every single scene's header and label - each as a Scene object.\")\n\nformatted_splitter_llm = processing_llm.with_structured_output(FullPlay)\n\n\n\n\nCode\nprompt = f\"\"\"\nThe following is the full text of a French Vaudeville play. Your job is to identify every scene boundary.\nFor each scene, return:\n- The act number (as it appears in the text)\n- The scene number (as it appears in the text)\n- The exact scene header line (copy it verbatim from the text)\n\nReturn a list of objects like:\n{{\"act\": \"...\", \"scene\": \"...\", \"header\": \"...\"}}\n\nDo not attempt to count character indexes. Only return the scene headers as they appear in the text.\n\nPlay Content: \\n\n{source_full.page_content}\n\"\"\"\n\n\n\n\nCode\ndef split_up_play(doc):\n    response = formatted_splitter_llm.invoke(prompt)\n    return response\n\n\n\n\nCode\nall_indexes = split_up_play(source_full)\n\n\n\n\nCode\nscenes: List[Scene] = all_indexes.all_scenes\nfor i,scene in enumerate(scenes):\n    print (f\"\"\"Act {scene.act}, Scene {scene.scene} Header: {scene.header}\"\"\")\n\n\nAct 1, Scene 1 Header: Scène première\nAct 1, Scene 2 Header: Scène II\nAct 1, Scene 3 Header: Scène III\nAct 1, Scene 4 Header: Scène IV\nAct 1, Scene 5 Header: Scène V\nAct 1, Scene 6 Header: Scène VI\nAct 1, Scene 7 Header: Scène VII\nAct 1, Scene 8 Header: Scène VIII\nAct 1, Scene 9 Header: Scène IX\nAct 2, Scene 1 Header: Scène première\nAct 2, Scene 2 Header: Scène II\nAct 2, Scene 3 Header: Scène III\nAct 2, Scene 4 Header: Scène IV\nAct 2, Scene 5 Header: Scène V\nAct 2, Scene 6 Header: Scène VI\nAct 2, Scene 7 Header: Scène VII\nAct 2, Scene 8 Header: Scène VIII\n\n\n\n\nCode\nfrom langchain_core.documents import Document\n\nall_splits = []\nscene_headers = all_indexes.all_scenes\nfull_text = source_full.page_content\n\nprev_end_idx = 0\nfor i, scene in enumerate(scene_headers):\n    # Find the start index of this scene's header after the previous end index\n    start_idx = full_text.find(scene.header, prev_end_idx)\n    if start_idx == -1:\n        raise ValueError(f\"Scene header not found: {scene.header}\")\n\n    # Determine the end index: start of next scene header, or end of document\n    if i + 1 &lt; len(scene_headers):\n        next_start_idx = full_text.find(scene_headers[i + 1].header, start_idx + len(scene.header))\n        if next_start_idx == -1:\n            end_idx = len(full_text)\n        else:\n            end_idx = next_start_idx\n    else:\n        end_idx = len(full_text)\n\n    scene_text = full_text[start_idx:end_idx]\n    doc = Document(page_content=scene_text, metadata={\"act\": scene.act, \"scene\": scene.scene, \"header\": scene.header})\n    all_splits.append(doc)\n    prev_end_idx = end_idx\n\n\nUpon looking into the result, it was fairly accurate.\n\n\n\n\nHere, we set up a basic LangGraph sequence. This specific version of the app uses indexes to go the list of scenes, and is thus called with a for loop.\n\n\nCode\nfrom typing_extensions import List, TypedDict, Optional\nfrom langchain_core.prompts import ChatPromptTemplate\n\nprompt = ChatPromptTemplate.from_messages([\n    (\"system\",system_prompt),\n    (\"human\",\"Context:\\n{context}\\n\\nQuestion:\\n{question}\")\n     ])\n\nclass State(TypedDict):\n    index: int\n    context: Document\n    answer: str\n\ndef check_index(state: State):\n    if \"index\" in state and isinstance(state[\"index\"], int) and 0 &lt;= state[\"index\"] &lt; len(all_indexes):\n        return state \n    raise ValueError(\"Need to include an index for list of documents.\") \n\n\ndef retrieve_doc(state: State):\n    document = all_indexes[state[\"index\"]]\n    return {\"context\": document}\n\ndef generate(state: State):\n    message = prompt.invoke({\"question\":human_prompt,\"context\":state[\"context\"].page_content})\n    response = structured_llm.invoke(message)\n    return {\"answer\": response}\n\nfrom langgraph.graph import START, StateGraph\n\ngraph_builder = StateGraph(State).add_sequence([check_index, retrieve_doc, generate])\ngraph_builder.add_edge(START, \"check_index\")\ngraph = graph_builder.compile()\n\n\n\n\n\nHere, we load one scene. We had to customize our sequence for this specific test (), so the code 2 cells below is mostly a duplicate of the cell above.\n\n\nCode\nscene_test = await loadPDF(\"Vaudeville/Tests and Outputs/Scene_1_La_Dette_d_honneur.pdf\")\n\n\n\n\nCode\nfrom langchain_core.documents import Document\n\nscene_test_full = \"\"\nfor page in scene_test:\n    scene_test_full += page.page_content\nscene_test_final = Document(page_content = scene_test_full)\nall_indexes = [scene_test_final]\n\n\nfrom typing_extensions import List, TypedDict, Optional\nfrom langchain_core.prompts import ChatPromptTemplate\n\nprompt = ChatPromptTemplate.from_messages([\n    (\"system\",system_prompt),\n    (\"human\",\"Context:\\n{context}\\n\\nQuestion:\\n{question}\")\n     ])\n\nclass State(TypedDict):\n    index: int\n    context: Document\n    answer: str\n\ndef check_index(state: State):\n    if \"index\" in state and isinstance(state[\"index\"], int) and 0 &lt;= state[\"index\"] &lt; len(all_indexes):\n        return state \n    raise ValueError(\"Need to include an index for list of documents.\") \n\n\ndef retrieve_doc(state: State):\n    document = all_indexes[state[\"index\"]]\n    return {\"context\": document}\n\ndef generate(state: State):\n    message = prompt.invoke({\"question\":human_prompt,\"context\":state[\"context\"].page_content})\n    response = structured_llm.invoke(message)\n    return {\"answer\": response}\n\nfrom langgraph.graph import START, StateGraph\n\ngraph_builder = StateGraph(State).add_sequence([check_index, retrieve_doc, generate])\ngraph_builder.add_edge(START, \"check_index\")\ngraph = graph_builder.compile()\n\n\n\n\nCode\nmoments = graph.invoke({\"index\": 0})\n\n\n\n\nCode\nmoment = moments[\"answer\"].musicalMoments[0]\n\n\n\n\nCode\nmoments = moments[\"answer\"]\nfor musicalMoment in moments.musicalMoments:\n    for attribute in musicalMoment:\n        print(attribute)\n    print(\"\\n\")\n\n\n('act', 1)\n('scene', 1)\n('number', 1)\n('characters', ['Pétronille'])\n('dramatic_situation', 'Pétronille is recounting to Pauline how two young men, believed to be lovers, rented a room from her aunt.')\n('air_or_melodie', 'De sommeiller encor, ma chère')\n('poetic_text', 'Lorsqu’arrivés un jour par aventure,\\nIls vinr’nt chez nous pour se loger tous deux ;\\nOn vit tout d’suite à leur figure,\\nQu’ça d’vait être des amoureux.\\nPour qu’à leur gré tous les instants s’écoulent,\\nMa tant’ s’est dit : ils s’raient mal au premier ;\\nEt nuit et jour puisqu’ils roucoulent,\\nJ’ m’en vas les mettre au colombier.')\n('rhyme_scheme', 'ABAB CDCD')\n('poetic_form', 'Quatrains')\n('end_of_line_accents', ['feminine', 'masculine', 'feminine', 'masculine', 'feminine', 'masculine', 'feminine', 'masculine'])\n('syllable_count_per_line', [13, 10, 9, 8, 11, 10, 10, 8])\n('irregularities', None)\n\n\n('act', 1)\n('scene', 1)\n('number', 2)\n('characters', ['Pétronille'])\n('dramatic_situation', 'Pétronille describes a visit to Paris and seeing a local girl, Madeleine, who has become a limonadière at a famous café.')\n('air_or_melodie', 'L’autre jour la petite Isabelle')\n('poetic_text', 'Sur la tête elle a d’ bell’s panaches,\\nAl’ porte un’ rob’ couverte d’ fleurs ;\\nOn voit d’ beaux messieurs à moustaches,\\nQui vienn’nt lui conter des douceurs ;\\nSans jamais prendr’ ses airs maussades,\\nEll’ distribue aux amateurs,\\nDes limonades\\nEt des œillades\\nEt des liqueurs.')\n('rhyme_scheme', 'ABAB CDDDEE')\n('poetic_form', 'Sixain followed by tercet')\n('end_of_line_accents', ['feminine', 'masculine', 'feminine', 'masculine', 'feminine', 'masculine', 'feminine', 'feminine', 'masculine'])\n('syllable_count_per_line', [12, 9, 10, 9, 10, 9, 5, 5, 5])\n('irregularities', None)\n\n\n\n\n\n\nCode\n# FULL PLAY\nmoments = graph.invoke({\"index\": 0})\n\n\n\n\nCode\nmoments = moments[\"answer\"]\nfor musicalMoment in moments.musicalMoments:\n    for attribute in musicalMoment:\n        print(attribute)\n    print(\"\\n\")\n\n\nThe output has been removed because of it’s length. The test was successful.\n\n\n\nBelow, we have grouped the full workflow into one large sequence. Thus, you can change the pdf_filepath variable, hit run all below, and a csv will be exported into your directory. Most of the code below is the same as above.\n\n\n\n\nCode\n# Hit execute cells below once you add your pdf_filepath\n\n\n\n\nCode\npdf_filepath = \"Files/PDFs/Scribe-Cornu_-_La_chanoinesse.pdf\"\ncsv_filename = pdf_filepath.replace(\"Files/PDFs/\",\"\").replace(\".pdf\",\".csv\")\n\n\n\n\nCode\n# Setting up pdf loading\n\nfrom pathlib import Path\nfrom langchain_community.document_loaders import PyPDFLoader\nfrom langchain.document_loaders import PDFPlumberLoader\nfrom langchain_core.documents import Document\nfrom typing_extensions import List, TypedDict, Optional\nfrom langchain_core.prompts import ChatPromptTemplate\n\n\nasync def loadPDF(filepath: str) -&gt; list:\n    loader = PyPDFLoader(filepath)\n    pages = []\n    async for page in loader.alazy_load():\n        pages.append(page)   \n    return pages\n\n# filepath:str = input(\"Please enter the filepath: \")\nsource = await loadPDF(pdf_filepath)\n\nfor page in source:\n        page.metadata['source'] = page.metadata['source'].replace(\"Files\\PDFs\\\\\",\"\")\n\nsource_content = \"\"\nfor page in source:\n    source_content += page.page_content\nsource_full = Document(page_content = source_content, metadata = source[0].metadata)\n\n\n\n\n\n\n\nCode\nimport getpass\nimport os\n\nif not os.environ.get(\"OPENAI_API_KEY\"):\n  os.environ[\"OPENAI_API_KEY\"] = getpass.getpass(\"Enter API key for OpenAI: \")\n\nfrom langchain.chat_models import init_chat_model\n\nllm = init_chat_model(\"gpt-4o\", model_provider=\"openai\")\nprocessing_llm = init_chat_model(\"gpt-4o-mini\", model_provider=\"openai\")\n\n\n\n\nCode\nfrom typing import Optional, List\nfrom pydantic import BaseModel, Field\n\nclass Scene(BaseModel):\n    \"\"\"A single scene from a Vaudeville play\"\"\"\n\n    act: int = Field(description=\"The act number or label as it appears in the text.\")\n    scene: int = Field(description=\"The scene number or label as it appears in the text.\")\n    header: str = Field(description=\"The exact scene header line, copied verbatim from the text.\")\n\nclass FullPlay(BaseModel):\n    \"\"\"A full play, that has yet to be broken into individual scenes.\"\"\"\n\n    all_scenes: List[Scene] = Field(description=\"A list of every single scene's header and label - each as a Scene object.\")\n\nformatted_splitter_llm = processing_llm.with_structured_output(FullPlay)\n\n\n\n\nCode\nprompt = f\"\"\"\nThe following is the full text of a French Vaudeville play. Your job is to identify every scene boundary.\nFor each scene, return:\n- The act number (as it appears in the text)\n- The scene number (as it appears in the text)\n- The exact scene header line (copy it verbatim from the text)\n\nReturn a list of objects like:\n{{\"act\": \"...\", \"scene\": \"...\", \"header\": \"...\"}}\n\nDo not attempt to count character indexes. Only return the scene headers as they appear in the text.\n\nPlay Content: \\n\n{source_full.page_content}\n\"\"\"\n\n\n\n\nCode\ndef split_up_play(doc):\n    response = formatted_splitter_llm.invoke(prompt)\n    return response\n\n\n\n\nCode\nall_indexes = split_up_play(source_full)\n\n\n\n\nCode\nfrom langchain_core.documents import Document\n\nall_splits = []\nscene_headers = all_indexes.all_scenes\nfull_text = source_full.page_content\n\nprev_end_idx = 0\nfor i, scene in enumerate(scene_headers):\n    # Find the start index of this scene's header after the previous end index\n    start_idx = full_text.find(scene.header, prev_end_idx)\n    if start_idx == -1:\n        print(f\"Scene header not found: {scene.header}\")\n\n    # Determine the end index: start of next scene header, or end of document\n    if i + 1 &lt; len(scene_headers):\n        next_start_idx = full_text.find(scene_headers[i + 1].header, start_idx + len(scene.header))\n        if next_start_idx == -1:\n            end_idx = len(full_text)\n        else:\n            end_idx = next_start_idx\n    else:\n        end_idx = len(full_text)\n\n    scene_text = full_text[start_idx:end_idx]\n    doc = Document(page_content=scene_text, metadata={\"act\": scene.act, \"scene\": scene.scene, \"header\": scene.header})\n    all_splits.append(doc)\n    prev_end_idx = end_idx\n\n\n\n\n\n\n\nCode\nfrom typing import Optional\nfrom pydantic import BaseModel, Field\n\n\n# Pydantic\nclass MusicalMoment(BaseModel):\n    \"\"\"Many of these musical moments reuse some preexisting (and often well-known)  melody or tune.  These are variously called \"melodie”, or “air”, and identified with a short title that refers in some way to an opera or collection of melodies from which it was drawn.  The titles might include the names of works, or other characters in those original works. In the context of the plays, these tunes become the vehicle for newly composed lyrics, which are normally rhymed, and which normally follow the poetic scansion and structure of the original lyrics.  Rhyme, versification and structure are thus of interest to us.\"\"\"\n\n    act: int = Field(description=\"The act number in which this musical moment takes place. Will be labeled at the top of the act or scene in which it takes place.\")\n    scene: int = Field(description=\"The scene number in which the musical moment takes place. Will be labeled at the top of the scene.\")\n    number: int = Field(description = \"The index of the musical moment in the scene. For example, if this is the first musical moment in the scene, this should be 1.\")\n    characters: list[str] = Field(description=\"the character or characters who are singing (or otherwise making music) within this specific musical moment,\")\n    dramatic_situation: str = Field(description=\"the dramatic situation (a love scene, a crowd scene) in which the musical moment is occurring\")\n    air_or_melodie: str = Field(description=\"The title of the 'air' or 'melodie' of which the musical moment is based. It will be labeled in the text as 'air' or 'melodie'.\")\n    poetic_text: str = Field(description=\"The text from the music number. Do not include stage directions, only the lyrics sung by the characters in this musical moment\")\n    rhyme_scheme: str = Field(description = \"The rhyme scheme for the poetic text in the musical moment. For example, sentences that end in 'tree' 'be' 'why' and 'high' would have a rhyme scheme of AABB.\")\n    poetic_form: str = Field(description=\"form of the poetic text, which might involve some refrain\")\n    end_of_line_accents: list[str] = Field(description = \"the end accent for each line (masculine or féminine)\")\n    syllable_count_per_line: list[int] = Field(description = \"the number of syllables per line. look out for contractions and colloquialisms.that might make the count of syllables less than obvious. Normally a word like ‘voilà’ would of course have 2 syllables. But the musical rhythm of a particular melodie might require that it be _sung_ as only one syllable, as would be the case if the text reads ‘v’la’. Similarly ‘mademoiselle’ would have 4 syllables in spoken French. But the musical context might make it sound like 5. Or a character speaking dialect might sing “Mam’zelle”, which would have only 2 (or perhaps 3) syllables.\")\n    irregularities: Optional[str] = Field(description=\"any irregularities within the musical number\")\n    stage_direction_or_cues: Optional[str] = Field(description=\"any stage directions, which tell a character what to do, but aren't a part of another character's dialogue. These are usually connected with a character’s name, and often are in some contrasting typography (italics, or in parentheses - though this may not be picked up by the filereader).  Sometimes these directions even happen in the midst of a song! In a related way there are sometimes ‘cues’ for music, or performance (as when there is an offstage sound effect, or someone is humming) Most times the stage directions appear just before or after the song text. But sometimes they appear in the midst of the texts. The directions should be reported here and not in the transcription of the poem.\")\n    reprise: Optional[str] = Field(description=\"there are sometimes directions that indicate the ‘reprise’ of some earlier number or chorus.\")\n\nclass VaudevillePlay(BaseModel):\n    musicalMoments: list[MusicalMoment] = Field(description=\"\"\"A list of musical moments in a Vaudeville play, as MusicalMoment objects. Many of these musical moments reuse some preexisting (and often well-known)  melody or tune.  These are variously called \"melodie”, or “air”, and identified with a short title that refers in some way to an opera or collection of melodies from which it was drawn.  The titles might include the names of works, or other characters in those original works. In the context of the plays, these tunes become the vehicle for newly composed lyrics, which are normally rhymed, and which normally follow the poetic scansion and structure of the original lyrics.  Rhyme, versification and structure are thus of interest to us.\"\"\")    \n\nstructured_llm = llm.with_structured_output(VaudevillePlay)\n\n\n\n\nCode\nsystem_prompt = \"\"\"\nYou are a literary analyst specializing in French Vaudeville plays from the 18th century. \nYour goal is to identify each musical moment in the text, and for each, extract detailed structured information, \nincluding act, scene, characters, dramatic situation, air or melodie, poetic text, rhyme scheme, poetic form, end-of-line accents, syllable count, and any irregularities. \nSome parts of the text were slightly misinterpreted by the file reader (e.g., missing spaces or strange line breaks).\n\"\"\"\nhuman_prompt = \"\"\"\nGiven the following chunk of the play, analyze and return the musical moments as a structured VaudevillePlay object.\n\"\"\"\n\n\n\n\n\nCode\nfrom typing_extensions import List, TypedDict, Optional\nfrom langchain_core.prompts import ChatPromptTemplate\n\nprompt = ChatPromptTemplate.from_messages([\n    (\"system\",system_prompt),\n    (\"human\",\"Context:\\n{context}\\n\\nQuestion:\\n{question}\")\n     ])\n\nclass State(TypedDict):\n    index: int\n    context: Document\n    answer: str\n\ndef check_index(state: State):\n    return state\n\ndef retrieve_doc(state: State):\n    document = all_splits[state[\"index\"]]\n    return {\"context\": document}\n\ndef generate(state: State):\n    i = state[\"index\"]\n    message = prompt.invoke({\"question\":human_prompt,\"context\" : f'Act {all_indexes.all_scenes[i].act}, Scene {all_indexes.all_scenes[i].scene}:\\n\\n {state[\"context\"].page_content}'})\n    response = structured_llm.invoke(message)\n    return {\"answer\": response}\n\nfrom langgraph.graph import START, StateGraph\n\ngraph_builder = StateGraph(State).add_sequence([check_index, retrieve_doc, generate])\ngraph_builder.add_edge(START, \"check_index\")\ngraph = graph_builder.compile()\n\n\n\n\n\nThis is the new code. It goes through each scene, calls the LangGraph, then merges all of the scenes together into one object. Then, it exports it as a csv (based on the filename of the PDF) to a csv_outputs folder in your directory. In the github repository, you can view the 7 objects I tested. Or, you can follow this link to see the spreadsheet on Google Sheets.\n\n\nCode\ndef analyze_scenes(docs: List[Document]) -&gt; List[MusicalMoment]:\n    all_moments: List[MusicalMoment] = []\n\n    for i,doc in enumerate(docs):\n        response = graph.invoke({\"index\": i})\n        moments = response[\"answer\"].musicalMoments\n        all_moments.extend(moments)\n    \n    return all_moments\n\nall_moments = analyze_scenes(all_splits)\n\n\n\n\nCode\nimport csv\nimport os\n\n# Convert all MusicalMoment objects to dicts\nmoments_dicts = [moment.model_dump() for moment in all_moments]\n\n# Get all field names from the first moment\nfieldnames = moments_dicts[0].keys() if moments_dicts else []\n\n# Write to CSV\n# Ensure the output folder exists\noutput_folder = \"csv_outputs\"\nos.makedirs(output_folder, exist_ok=True)\n\n# Build the output path\noutput_path = os.path.join(output_folder, os.path.basename(csv_filename))\n\nwith open(output_path, \"w\", newline='', encoding=\"utf-8\") as csvfile:\n    writer = csv.DictWriter(csvfile, fieldnames=fieldnames)\n    writer.writeheader()\n    for row in moments_dicts:\n        # Convert lists to strings for CSV output\n        for key, value in row.items():\n            if isinstance(value, list):\n                row[key] = \"; \".join(str(v) for v in value)\n        writer.writerow(row)\n\n\n\n\n\n\nThis system is highly effective, and serves as a good template for the niche that is a Structured Output App.\nHowever, some improvements are needed for this to reach its most accurate form. Most notably, the descriptions for the variable within the Pydantic schema are lacking expertise in the subject. To reach it’s best form, an expert in these plays would have to write these descriptions.\nThat being said, this system is impressive as is. Reading through all 7 Vaudeville plays (~50 pages each) only took about 20 minutes of passive run time and a few dollars with the OpenAI API."
  },
  {
    "objectID": "Vaudeville/Vaudeville_structured.html#goals",
    "href": "Vaudeville/Vaudeville_structured.html#goals",
    "title": "Vaudeville: Generating Structured Data of Musical Moments",
    "section": "",
    "text": "In this notebook, we want to set up a framework to extract a list of Musical Moments from a given Vaudeville play. To do this, we:\n\nSet up a Pydantic Basemodel defining the aspects of a Musical Moment.\nSet up a Basemodel for a whole play (or scene) that we pass it, containing a list of Musical Moments.\nBind an LLM to this structured output\nSplit the play up into scenes, to have the LLM analyze one at a time\n\nWith too much content at once, it begins to yield lower accuracy results\n\nFeed each scene into the LLM, and group it back together into one object\nConvert and export the final object, containing an entire play, as a CSV file"
  },
  {
    "objectID": "Vaudeville/Vaudeville_structured.html#setting-up-the-chat-model-and-pydantic-schema",
    "href": "Vaudeville/Vaudeville_structured.html#setting-up-the-chat-model-and-pydantic-schema",
    "title": "Vaudeville: Generating Structured Data of Musical Moments",
    "section": "",
    "text": "Here, we use gpt-4o as our model, because this is a fairly complex task.\n\n\nCode\nimport getpass\nimport os\n\nif not os.environ.get(\"OPENAI_API_KEY\"):\n  os.environ[\"OPENAI_API_KEY\"] = getpass.getpass(\"Enter API key for OpenAI: \")\n\nfrom langchain.chat_models import init_chat_model\n\nllm = init_chat_model(\"gpt-4o\", model_provider=\"openai\")\n\n\nThe “Description” field is what the LLM uses to find each variable within a scene. For each variable, we want to tell it what it is, and where to find it.\n\n\nCode\nfrom typing import Optional\nfrom pydantic import BaseModel, Field\n\n\n# Pydantic\nclass MusicalMoment(BaseModel):\n    \"\"\"Many of these musical moments reuse some preexisting (and often well-known)  melody or tune.  These are variously called \"melodie”, or “air”, and identified with a short title that refers in some way to an opera or collection of melodies from which it was drawn.  The titles might include the names of works, or other characters in those original works. In the context of the plays, these tunes become the vehicle for newly composed lyrics, which are normally rhymed, and which normally follow the poetic scansion and structure of the original lyrics.  Rhyme, versification and structure are thus of interest to us.\"\"\"\n\n    act: int = Field(description=\"The act number in which this musical moment takes place. Will be labeled at the top of the act or scene in which it takes place.\")\n    scene: int = Field(description=\"The scene number in which the musical moment takes place. Will be labeled at the top of the scene.\")\n    number: int = Field(description = \"The index of the musical moment in the scene. For example, if this is the first musical moment in the scene, this should be 1.\")\n    characters: list[str] = Field(description=\"the character or characters who are singing (or otherwise making music) within this specific musical moment,\")\n    dramatic_situation: str = Field(description=\"the dramatic situation (a love scene, a crowd scene) in which the musical moment is occurring\")\n    air_or_melodie: str = Field(description=\"The title of the 'air' or 'melodie' of which the musical moment is based. It will be labeled in the text as 'air' or 'melodie'.\")\n    poetic_text: str = Field(description=\"The text from the music number. Do not include stage directions, only the lyrics sung by the characters in this musical moment\")\n    rhyme_scheme: str = Field(description = \"The rhyme scheme for the poetic text in the musical moment. For example, sentences that end in 'tree' 'be' 'why' and 'high' would have a rhyme scheme of AABB.\")\n    poetic_form: str = Field(description=\"form of the poetic text, which might involve some refrain\")\n    end_of_line_accents: list[str] = Field(description = \"the end accent for each line (masculine or féminine)\")\n    syllable_count_per_line: list[int] = Field(description = \"the number of syllables per line. look out for contractions and colloquialisms.that might make the count of syllables less than obvious. Normally a word like ‘voilà’ would of course have 2 syllables. But the musical rhythm of a particular melodie might require that it be _sung_ as only one syllable, as would be the case if the text reads ‘v’la’. Similarly ‘mademoiselle’ would have 4 syllables in spoken French. But the musical context might make it sound like 5. Or a character speaking dialect might sing “Mam’zelle”, which would have only 2 (or perhaps 3) syllables.\")\n    irregularities: Optional[str] = Field(description=\"any irregularities within the musical number\")\n    stage_direction_or_cues: Optional[str] = Field(description=\"any stage directions, which tell a character what to do, but aren't a part of another character's dialogue. These are usually connected with a character’s name, and often are in some contrasting typography (italics, or in parentheses - though this may not be picked up by the filereader).  Sometimes these directions even happen in the midst of a song! In a related way there are sometimes ‘cues’ for music, or performance (as when there is an offstage sound effect, or someone is humming) Most times the stage directions appear just before or after the song text. But sometimes they appear in the midst of the texts. The directions should be reported here and not in the transcription of the poem.\")\n    reprise: Optional[str] = Field(description=\"there are sometimes directions that indicate the ‘reprise’ of some earlier number or chorus.\")\n    \n\n\nstructured_llm = llm.with_structured_output(MusicalMoment)\n\n# structured_llm.invoke(\"Create a musical moment\")\n\n\nBelow is the datatype it will return for each scene/play - a list of Musical Moments.\n\n\nCode\nclass VaudevillePlay(BaseModel):\n    musicalMoments: list[MusicalMoment] = Field(description=\"\"\"A list of musical moments in a Vaudeville play, as MusicalMoment objects. Many of these musical moments reuse some preexisting (and often well-known)  melody or tune.  These are variously called \"melodie”, or “air”, and identified with a short title that refers in some way to an opera or collection of melodies from which it was drawn.  The titles might include the names of works, or other characters in those original works. In the context of the plays, these tunes become the vehicle for newly composed lyrics, which are normally rhymed, and which normally follow the poetic scansion and structure of the original lyrics.  Rhyme, versification and structure are thus of interest to us.\"\"\")\n    \n\nstructured_llm = llm.with_structured_output(VaudevillePlay)\n\n\nHere, we define the system prompt. We include a sentence about file readers missing spaces and breaking lines, so that the LLM knows to look out for it. We have found that the LLM is highly effective in correcting these inaccuracies if we mention them.\n\n\nCode\nsystem_prompt = \"\"\"\nYou are a literary analyst specializing in French Vaudeville plays from the 19th century. \nYour goal is to identify each musical moment in the text, and for each, extract detailed structured information, \nincluding act, scene, characters, dramatic situation, air or melodie, poetic text, rhyme scheme, poetic form, end-of-line accents, syllable count, and any irregularities. \nSome parts of the text were slightly misinterpreted by the file reader (e.g., missing spaces or strange line breaks).\n\"\"\"\nhuman_prompt = \"\"\"\nGiven the following chunk of the play, analyze and return the musical moments as a structured VaudevillePlay object.\n\"\"\"\n\n\n\n\n\nHere, we simply feed it a scene to see what it pulls out. The code is commented out to ensure it isn’t accidentally run again.\n\n\nCode\n# moments = structured_llm.invoke(r\"\"\"Analyze the musical moment within the chunk of this Vaudeville play. Some parts of the text were slightly misinterpreted by the filereader, especially missing spaces. Here is the text from the play:\n                      \n#                       ACTE I, SCÈNE VI. 11\n# DERBIGNY.\n# Elle n'est pasassezmontante, puisqu'il fautvousdirelemot.\n# (Pendantcequi suit, Paulinevaaufondetmetsonchapeau.)\n# PAMELA.\n# Onlesporte comme ça... voyez, moi?... ça avantage. (Elle\n# ouvresonchâle.)\n# DERBIGNY,sévèrement.\n# C'estimmodeste, mademoiselle...Jevouspried'y ajouterquel\n# quesmillimètres...\n# PAMELA.\n# Commevousvoudrez; chacun son goût... maisvousavez tort.\n# DERBIGNY, sévèrement.\n# Mademoiselle...jevous prie d'y ajouter quelquesmillimètres!\n# PAMELA.\n# Nevousfâchez pas... je la ferai montante jusqu'au boutdu\n# nez... qu'est-cequeçamefait?\n# AIR:Desommeillerencor, machère.\n# Dubongoût,jen'suispasl'enn'mie,\n# Maisçam'estbien égal,mafoi!\n# Ens'env'loppantcommeun' momie,\n# Mam'zelleyperdraplusquemoi;\n# J'respectevosscrupul'sbarbares,\n# Maisjetiensàmesopinions;\n# Etjedéteste lesavares\n# Quicachentleursnapoléons.\n# (Elleremonte.)\n# DERBIGNY.\n# Eh bien! etPauline?...tuneluisouhaitespaslebonjour?\n# ISIDORE.\n# Si, monpapa...\n# PAULINE, quiaredescendu lascène, etd'un tonrailleur.\n# Oh! moi, j'ail'habitude d'ètreoubliée d'Isidore... Il metraite\n# enamie...Je necomptepas.\n# ISIDORE, allantàPauline.\n# Bonjour,Pauline...* (RegardantPaméla.)Elleestencoremieux\n# deprès.\n# PAMELA, àpart.\n# Qu'est-cequ'iladonc àmeregarder, ce petit?(Haut.)Etcette\n# robe, mademoiselle?\n# PAULINE\n# Là, dansma chambre.\n# FAMELA.\n# Ça sera fait endeuxtemps...J'ai aissé del'étoffe endedans.\n# (Eileentredanslachambrededroitetroisièmeplan.)\n# *Derbigny,Pauline,Isidore;Pamélaausecond plan.\n# 12 UN DOCTEUR EN HERBE.\n# ISIDORE, àpart, désolé.\n# Oh!...elles'enva!...*\n# DERBIGNY.\n# Ah!ça, avantderetourneràBriare, nous avons quelques em-\n# plettesàfaire,offretonbras à Pauline. (Bas, enpassantderrière\n# lui.)Tuferastapaixenroute*.\n# ISIDORE,embarrassé.\n# Monpapa... c'estque...\n# DERBIGNY.\n# Quoiencore?\n# ISIDORE.\n# C'estdemainl'examen.\n# DERBIGNY.\n# Nem'as-tupasditqueta compositionestfaite?\n# ISIDORE.\n# Oui, papa, oui... maison croitêtreprêt, et puis... il arrive...\n# vouscomprenez...\n# DERBIGNY.\n# Pastrop!\n# PAULINE,riant.\n# MonDieu, Isidore, que vous avezl'airdrôle!.. Dites donctout\n# desuitequevousavezbesoinderevoirvotretravail….. noussorti-\n# ronsbiensans vous...Onnevous envoudrapas...\n# ISIDORE.\n# Oh! merci, mademoisellePauline!\n# PAULINE.\n# Iln'y apasdequoi, allez!\n# DERBIGNY.\n# Queneledisais-tu?...le devoir avanttout. (Ildonnelebrasà\n# Pauline.)\n# ELBMESNE.\n# AIR: DeLuciede Lamermoor***.\n# Allons,courageetpersévère;\n# Soisbienattentif, etdemain,\n# Avecsuccès, oui,je l'espère,\n# Tupasserastonexamen.\n# ISIDORE.\n# Jetrembleetjemedésespère,\n# Quandjesongequec'est demain\n# Que,devantunjugesévère,\n# Jedoispassermonexamen.\n# PAULINE.\n# Jevoisce quiledésespère,\n# Quandjesongequec'estdemain\n# Que,devantunjugesévère,\n# Ildoitpassersonexamen.\n# *Pauline, Derbigny, Isidore.\n# **Pauline, Isidore, Derbigny.\n# ***Pauline,Derbigny,Isidore,\n#                       \"\"\")\n\n\n\n\nCode\nfor musicalMoment in moments.musicalMoments:\n    for attribute in musicalMoment:\n        print(attribute)\n    print(\"\\n\")\n\n\n('act', 1)\n('scene', 6)\n('characters', ['Pamela', 'Derbigny'])\n('dramatic_situation', 'Derbigny is reprimanding Pamela for her immodest dressing style while she defends her fashion choice.')\n('air_or_melodie', 'De sommeiller encor, ma chère')\n('poetic_text', \"Dubon goût, je n'suis pas l'enn'mie, Mais çam'est bien égal, ma foi! En s'env'loppant comme un' momie, Mam'zelle yperdr'a plusque moi; J'respecte vos scrupul's barbares, Mais je tiens à mes opinions; Et je déteste les avares Qui cachent leurs napoléons.\")\n('rhyme_scheme', 'ABABCDCD')\n('poetic_form', 'Verse with alternating rhymes, addressing the situation at hand.')\n('end_of_line_accents', ['feminine', 'masculine', 'feminine', 'masculine', 'feminine', 'masculine', 'feminine', 'masculine'])\n('syllable_count_per_line', [12, 8, 12, 8, 12, 8, 12, 8])\n('irregularities', None)\n\n\n('act', 1)\n('scene', 6)\n('characters', ['Isidore', 'Pauline', 'Derbigny'])\n('dramatic_situation', 'Pauline encourages Isidore to focus on his exam while Derbigny offers practical advice.')\n('air_or_melodie', 'De Lucia de Lammermoor')\n('poetic_text', \"Allons, courage et persévère; Sois bien attentif, et demain, Avec succès, oui, je l'espère, Tu passeras ton examen. Isidore: Je tremble et je me désespère, Quand je songe que c'est demain Que, devant un juge sévère, Je dois passer mon examen. Pauline: Je vois ce qui le désespère, Quand je songe que c'est demain Que, devant un juge sévère, Il doit passer son examen.\")\n('rhyme_scheme', 'ABAB CDCD EFEF GHG')\n('poetic_form', 'Repetitive refrain, with alternating rhymes, echoing a supportive entourage before an exam.')\n('end_of_line_accents', ['feminine', 'masculine', 'feminine', 'masculine', 'feminine', 'feminine', 'masculine', 'feminine', 'feminine', 'masculine', 'feminine', 'feminine'])\n('syllable_count_per_line', [12, 8, 12, 8, 12, 8, 12, 8, 12, 8, 12, 8])\n('irregularities', None)\n\n\n\n\nOur Pydantic object is working, and it did a good job at extracting the requested information."
  },
  {
    "objectID": "Vaudeville/Vaudeville_structured.html#loading-test-files",
    "href": "Vaudeville/Vaudeville_structured.html#loading-test-files",
    "title": "Vaudeville: Generating Structured Data of Musical Moments",
    "section": "",
    "text": "Code\n# Setting up pdf loading\n\nfrom pathlib import Path\nfrom langchain_community.document_loaders import PyPDFLoader\nfrom langchain_core.documents import Document\nfrom typing_extensions import List, TypedDict, Optional\nfrom langchain_core.prompts import ChatPromptTemplate\n\n\nasync def loadPDF(filepath: str) -&gt; list:\n    loader = PyPDFLoader(filepath)\n    pages = []\n    async for page in loader.alazy_load():\n        pages.append(page)   \n    return pages\n\nsource = await loadPDF(\"Files/PDFs/La_Dette_d_honneur.pdf\")\n\nfor page in source:\n        page.metadata['source'] = page.metadata['source'].replace(\"Vaudeville/Files/PDFs/\",\"\")\n\nsource_content = \"\"\nfor page in source:\n    source_content += page.page_content\nsource_full = Document(page_content = source_content, metadata = source[0].metadata)\n\n\n&lt;&gt;:21: SyntaxWarning: invalid escape sequence '\\P'\nC:\\Users\\charl\\AppData\\Local\\Temp\\ipykernel_6888\\2254834301.py:21: SyntaxWarning: invalid escape sequence '\\P'\n  page.metadata['source'] = page.metadata['source'].replace(\"C:\\\\Users\\\\charl\\\\Documents\\\\VSCode\\\\Vaudeville\\\\Files\\PDFs\\\\\",\"\")\n\n\n\n\nCode\nprint(source_full.page_content)"
  },
  {
    "objectID": "Vaudeville/Vaudeville_structured.html#converting-a-play-into-scene-chunks",
    "href": "Vaudeville/Vaudeville_structured.html#converting-a-play-into-scene-chunks",
    "title": "Vaudeville: Generating Structured Data of Musical Moments",
    "section": "",
    "text": "A few possible approaches here: * Run a basic script to split the string at “Acte” or “Scene” (regex) * We may have to clean the inputted file first. This could be done with a cheap llm call to gpt-4o-mini. * Use a semantic splitter, which should roughly get everything right because content should be noticeably different between scenes in general. * It could mess a few things up, including splitting in the middle of a musical moment * Have the “cleaning” llm call also split by act and scene * Unsuccessful approach: Having it return the start and end characters of the acts. * Successful approach: Have a smaller LLM model look through the play and return a list of scene headers as they appear. Then, use regex splitting to get one scene at a time.\nWe included 2 approaches. The first is an example of what not to do - included for pedagogical purposes.\n\n\nIn this approach, we attempt to have an LLM find the start and end character counts of each scene. This did not work.\n\n\nCode\nimport getpass\nimport os\n\nif not os.environ.get(\"OPENAI_API_KEY\"):\n  os.environ[\"OPENAI_API_KEY\"] = getpass.getpass(\"Enter API key for OpenAI: \")\n\nfrom langchain.chat_models import init_chat_model\n\nllm = init_chat_model(\"gpt-4o\", model_provider=\"openai\")\nprocessing_llm = init_chat_model(\"gpt-4o-mini\", model_provider=\"openai\")\n\n\n\n\nCode\nfrom typing import Optional, List\nfrom pydantic import BaseModel, Field\n\nclass Scene(BaseModel):\n    \"\"\"A single scene from from a Vaudeville play\"\"\"\n\n    act: int = Field(description=\"The act number. Will be labeled at the top of the act or scene in which it takes place.\")\n    scene: int = Field(description=\"The scene number within the act. Will be labeled at the top of the scene. For example, if it is Act 3 Scene 2, this value should be 2.\")\n    start_character_number: int = Field(description=\"In terms of the entire document, what is the index of the first character of the scene, including the label of the scene, and act if mentioned next to the scene number (mostly only applicable if scene 1 of an act). For example, if the whole document was 'Play 1: Title. Act 1, Scene 2. Content.' then the start index would be 15, since 'Act' starts on the 16th character.\")\n    end_character_number: int = Field(description=\"In terms of the entire document, the index of the last character of the scene. It should be the last character before the next scene or act is labeled.\")\n\nclass FullPlay(BaseModel):\n    \"\"\"A full play, that has yet to be broken into individual scenes.\"\"\"\n\n    all_scenes: List[Scene] = Field(description=\"A list of every single scene's start and end - each as a Scene object containing indexes and the first and last character, so that it can easily be passed into a substring just containing the scene.\")\n\nformatted_splitter_llm = processing_llm.with_structured_output(FullPlay)\n\n\n\n\nCode\ndef split_up_play(doc):\n    response = formatted_splitter_llm.invoke(f\"The following is a Vaudeville play in French. Your job is to return the necessary indexes required to split it up into individual scenes. Thus, you will be looking for 'Acte' and 'Scène' throughout the text. For each scene, you will document the act, scene number (ex Act 4, Scene 1), start character index, and end character index as a Scene object, then add it to the list of scenes in the FullPlay object. All start and end indexes should be in terms of the full document; the goal is to create a substring using FullText[start_index:end_index] for each scene. After you've gone through the full document, you will return the FullPlay object.\\n\\nPlay Content:\\n{doc.page_content}\")\n    return response\n\n\n\n\nCode\nall_indexes = split_up_play(source_full)\n\n\nUpon looking into the result, it was clearly incorrect. Thus, we tried another approach.\n\n\n\nHere, we have the LLM return the scene headers as they appear in the text. Then, we split on these headers.\nThis is not perfect and a few headers are always missed, but it works well enough to split up the text into manageable chunks for the app. It also guarantees a split cannot occur in the middle of a scene.\n\n\nCode\nimport getpass\nimport os\n\nif not os.environ.get(\"OPENAI_API_KEY\"):\n  os.environ[\"OPENAI_API_KEY\"] = getpass.getpass(\"Enter API key for OpenAI: \")\n\nfrom langchain.chat_models import init_chat_model\n\nllm = init_chat_model(\"gpt-4o\", model_provider=\"openai\")\nprocessing_llm = init_chat_model(\"gpt-4o-mini\", model_provider=\"openai\")\n\n\n\n\nCode\nfrom typing import Optional, List\nfrom pydantic import BaseModel, Field\n\nclass Scene(BaseModel):\n    \"\"\"A single scene from a Vaudeville play\"\"\"\n\n    act: int = Field(description=\"The act number or label as it appears in the text.\")\n    scene: int = Field(description=\"The scene number or label as it appears in the text.\")\n    header: str = Field(description=\"The exact scene header line, copied verbatim from the text.\")\n\nclass FullPlay(BaseModel):\n    \"\"\"A full play, that has yet to be broken into individual scenes.\"\"\"\n\n    all_scenes: List[Scene] = Field(description=\"A list of every single scene's header and label - each as a Scene object.\")\n\nformatted_splitter_llm = processing_llm.with_structured_output(FullPlay)\n\n\n\n\nCode\nprompt = f\"\"\"\nThe following is the full text of a French Vaudeville play. Your job is to identify every scene boundary.\nFor each scene, return:\n- The act number (as it appears in the text)\n- The scene number (as it appears in the text)\n- The exact scene header line (copy it verbatim from the text)\n\nReturn a list of objects like:\n{{\"act\": \"...\", \"scene\": \"...\", \"header\": \"...\"}}\n\nDo not attempt to count character indexes. Only return the scene headers as they appear in the text.\n\nPlay Content: \\n\n{source_full.page_content}\n\"\"\"\n\n\n\n\nCode\ndef split_up_play(doc):\n    response = formatted_splitter_llm.invoke(prompt)\n    return response\n\n\n\n\nCode\nall_indexes = split_up_play(source_full)\n\n\n\n\nCode\nscenes: List[Scene] = all_indexes.all_scenes\nfor i,scene in enumerate(scenes):\n    print (f\"\"\"Act {scene.act}, Scene {scene.scene} Header: {scene.header}\"\"\")\n\n\nAct 1, Scene 1 Header: Scène première\nAct 1, Scene 2 Header: Scène II\nAct 1, Scene 3 Header: Scène III\nAct 1, Scene 4 Header: Scène IV\nAct 1, Scene 5 Header: Scène V\nAct 1, Scene 6 Header: Scène VI\nAct 1, Scene 7 Header: Scène VII\nAct 1, Scene 8 Header: Scène VIII\nAct 1, Scene 9 Header: Scène IX\nAct 2, Scene 1 Header: Scène première\nAct 2, Scene 2 Header: Scène II\nAct 2, Scene 3 Header: Scène III\nAct 2, Scene 4 Header: Scène IV\nAct 2, Scene 5 Header: Scène V\nAct 2, Scene 6 Header: Scène VI\nAct 2, Scene 7 Header: Scène VII\nAct 2, Scene 8 Header: Scène VIII\n\n\n\n\nCode\nfrom langchain_core.documents import Document\n\nall_splits = []\nscene_headers = all_indexes.all_scenes\nfull_text = source_full.page_content\n\nprev_end_idx = 0\nfor i, scene in enumerate(scene_headers):\n    # Find the start index of this scene's header after the previous end index\n    start_idx = full_text.find(scene.header, prev_end_idx)\n    if start_idx == -1:\n        raise ValueError(f\"Scene header not found: {scene.header}\")\n\n    # Determine the end index: start of next scene header, or end of document\n    if i + 1 &lt; len(scene_headers):\n        next_start_idx = full_text.find(scene_headers[i + 1].header, start_idx + len(scene.header))\n        if next_start_idx == -1:\n            end_idx = len(full_text)\n        else:\n            end_idx = next_start_idx\n    else:\n        end_idx = len(full_text)\n\n    scene_text = full_text[start_idx:end_idx]\n    doc = Document(page_content=scene_text, metadata={\"act\": scene.act, \"scene\": scene.scene, \"header\": scene.header})\n    all_splits.append(doc)\n    prev_end_idx = end_idx\n\n\nUpon looking into the result, it was fairly accurate."
  },
  {
    "objectID": "Vaudeville/Vaudeville_structured.html#setting-up-the-sequence",
    "href": "Vaudeville/Vaudeville_structured.html#setting-up-the-sequence",
    "title": "Vaudeville: Generating Structured Data of Musical Moments",
    "section": "",
    "text": "Here, we set up a basic LangGraph sequence. This specific version of the app uses indexes to go the list of scenes, and is thus called with a for loop.\n\n\nCode\nfrom typing_extensions import List, TypedDict, Optional\nfrom langchain_core.prompts import ChatPromptTemplate\n\nprompt = ChatPromptTemplate.from_messages([\n    (\"system\",system_prompt),\n    (\"human\",\"Context:\\n{context}\\n\\nQuestion:\\n{question}\")\n     ])\n\nclass State(TypedDict):\n    index: int\n    context: Document\n    answer: str\n\ndef check_index(state: State):\n    if \"index\" in state and isinstance(state[\"index\"], int) and 0 &lt;= state[\"index\"] &lt; len(all_indexes):\n        return state \n    raise ValueError(\"Need to include an index for list of documents.\") \n\n\ndef retrieve_doc(state: State):\n    document = all_indexes[state[\"index\"]]\n    return {\"context\": document}\n\ndef generate(state: State):\n    message = prompt.invoke({\"question\":human_prompt,\"context\":state[\"context\"].page_content})\n    response = structured_llm.invoke(message)\n    return {\"answer\": response}\n\nfrom langgraph.graph import START, StateGraph\n\ngraph_builder = StateGraph(State).add_sequence([check_index, retrieve_doc, generate])\ngraph_builder.add_edge(START, \"check_index\")\ngraph = graph_builder.compile()"
  },
  {
    "objectID": "Vaudeville/Vaudeville_structured.html#loading-a-single-scene-pdf-to-test",
    "href": "Vaudeville/Vaudeville_structured.html#loading-a-single-scene-pdf-to-test",
    "title": "Vaudeville: Generating Structured Data of Musical Moments",
    "section": "",
    "text": "Here, we load one scene. We had to customize our sequence for this specific test (), so the code 2 cells below is mostly a duplicate of the cell above.\n\n\nCode\nscene_test = await loadPDF(\"Vaudeville/Tests and Outputs/Scene_1_La_Dette_d_honneur.pdf\")\n\n\n\n\nCode\nfrom langchain_core.documents import Document\n\nscene_test_full = \"\"\nfor page in scene_test:\n    scene_test_full += page.page_content\nscene_test_final = Document(page_content = scene_test_full)\nall_indexes = [scene_test_final]\n\n\nfrom typing_extensions import List, TypedDict, Optional\nfrom langchain_core.prompts import ChatPromptTemplate\n\nprompt = ChatPromptTemplate.from_messages([\n    (\"system\",system_prompt),\n    (\"human\",\"Context:\\n{context}\\n\\nQuestion:\\n{question}\")\n     ])\n\nclass State(TypedDict):\n    index: int\n    context: Document\n    answer: str\n\ndef check_index(state: State):\n    if \"index\" in state and isinstance(state[\"index\"], int) and 0 &lt;= state[\"index\"] &lt; len(all_indexes):\n        return state \n    raise ValueError(\"Need to include an index for list of documents.\") \n\n\ndef retrieve_doc(state: State):\n    document = all_indexes[state[\"index\"]]\n    return {\"context\": document}\n\ndef generate(state: State):\n    message = prompt.invoke({\"question\":human_prompt,\"context\":state[\"context\"].page_content})\n    response = structured_llm.invoke(message)\n    return {\"answer\": response}\n\nfrom langgraph.graph import START, StateGraph\n\ngraph_builder = StateGraph(State).add_sequence([check_index, retrieve_doc, generate])\ngraph_builder.add_edge(START, \"check_index\")\ngraph = graph_builder.compile()\n\n\n\n\nCode\nmoments = graph.invoke({\"index\": 0})\n\n\n\n\nCode\nmoment = moments[\"answer\"].musicalMoments[0]\n\n\n\n\nCode\nmoments = moments[\"answer\"]\nfor musicalMoment in moments.musicalMoments:\n    for attribute in musicalMoment:\n        print(attribute)\n    print(\"\\n\")\n\n\n('act', 1)\n('scene', 1)\n('number', 1)\n('characters', ['Pétronille'])\n('dramatic_situation', 'Pétronille is recounting to Pauline how two young men, believed to be lovers, rented a room from her aunt.')\n('air_or_melodie', 'De sommeiller encor, ma chère')\n('poetic_text', 'Lorsqu’arrivés un jour par aventure,\\nIls vinr’nt chez nous pour se loger tous deux ;\\nOn vit tout d’suite à leur figure,\\nQu’ça d’vait être des amoureux.\\nPour qu’à leur gré tous les instants s’écoulent,\\nMa tant’ s’est dit : ils s’raient mal au premier ;\\nEt nuit et jour puisqu’ils roucoulent,\\nJ’ m’en vas les mettre au colombier.')\n('rhyme_scheme', 'ABAB CDCD')\n('poetic_form', 'Quatrains')\n('end_of_line_accents', ['feminine', 'masculine', 'feminine', 'masculine', 'feminine', 'masculine', 'feminine', 'masculine'])\n('syllable_count_per_line', [13, 10, 9, 8, 11, 10, 10, 8])\n('irregularities', None)\n\n\n('act', 1)\n('scene', 1)\n('number', 2)\n('characters', ['Pétronille'])\n('dramatic_situation', 'Pétronille describes a visit to Paris and seeing a local girl, Madeleine, who has become a limonadière at a famous café.')\n('air_or_melodie', 'L’autre jour la petite Isabelle')\n('poetic_text', 'Sur la tête elle a d’ bell’s panaches,\\nAl’ porte un’ rob’ couverte d’ fleurs ;\\nOn voit d’ beaux messieurs à moustaches,\\nQui vienn’nt lui conter des douceurs ;\\nSans jamais prendr’ ses airs maussades,\\nEll’ distribue aux amateurs,\\nDes limonades\\nEt des œillades\\nEt des liqueurs.')\n('rhyme_scheme', 'ABAB CDDDEE')\n('poetic_form', 'Sixain followed by tercet')\n('end_of_line_accents', ['feminine', 'masculine', 'feminine', 'masculine', 'feminine', 'masculine', 'feminine', 'feminine', 'masculine'])\n('syllable_count_per_line', [12, 9, 10, 9, 10, 9, 5, 5, 5])\n('irregularities', None)\n\n\n\n\n\n\nCode\n# FULL PLAY\nmoments = graph.invoke({\"index\": 0})\n\n\n\n\nCode\nmoments = moments[\"answer\"]\nfor musicalMoment in moments.musicalMoments:\n    for attribute in musicalMoment:\n        print(attribute)\n    print(\"\\n\")\n\n\nThe output has been removed because of it’s length. The test was successful."
  },
  {
    "objectID": "Vaudeville/Vaudeville_structured.html#full-workflow",
    "href": "Vaudeville/Vaudeville_structured.html#full-workflow",
    "title": "Vaudeville: Generating Structured Data of Musical Moments",
    "section": "",
    "text": "Below, we have grouped the full workflow into one large sequence. Thus, you can change the pdf_filepath variable, hit run all below, and a csv will be exported into your directory. Most of the code below is the same as above.\n\n\n\n\nCode\n# Hit execute cells below once you add your pdf_filepath\n\n\n\n\nCode\npdf_filepath = \"Files/PDFs/Scribe-Cornu_-_La_chanoinesse.pdf\"\ncsv_filename = pdf_filepath.replace(\"Files/PDFs/\",\"\").replace(\".pdf\",\".csv\")\n\n\n\n\nCode\n# Setting up pdf loading\n\nfrom pathlib import Path\nfrom langchain_community.document_loaders import PyPDFLoader\nfrom langchain.document_loaders import PDFPlumberLoader\nfrom langchain_core.documents import Document\nfrom typing_extensions import List, TypedDict, Optional\nfrom langchain_core.prompts import ChatPromptTemplate\n\n\nasync def loadPDF(filepath: str) -&gt; list:\n    loader = PyPDFLoader(filepath)\n    pages = []\n    async for page in loader.alazy_load():\n        pages.append(page)   \n    return pages\n\n# filepath:str = input(\"Please enter the filepath: \")\nsource = await loadPDF(pdf_filepath)\n\nfor page in source:\n        page.metadata['source'] = page.metadata['source'].replace(\"Files\\PDFs\\\\\",\"\")\n\nsource_content = \"\"\nfor page in source:\n    source_content += page.page_content\nsource_full = Document(page_content = source_content, metadata = source[0].metadata)\n\n\n\n\n\n\n\nCode\nimport getpass\nimport os\n\nif not os.environ.get(\"OPENAI_API_KEY\"):\n  os.environ[\"OPENAI_API_KEY\"] = getpass.getpass(\"Enter API key for OpenAI: \")\n\nfrom langchain.chat_models import init_chat_model\n\nllm = init_chat_model(\"gpt-4o\", model_provider=\"openai\")\nprocessing_llm = init_chat_model(\"gpt-4o-mini\", model_provider=\"openai\")\n\n\n\n\nCode\nfrom typing import Optional, List\nfrom pydantic import BaseModel, Field\n\nclass Scene(BaseModel):\n    \"\"\"A single scene from a Vaudeville play\"\"\"\n\n    act: int = Field(description=\"The act number or label as it appears in the text.\")\n    scene: int = Field(description=\"The scene number or label as it appears in the text.\")\n    header: str = Field(description=\"The exact scene header line, copied verbatim from the text.\")\n\nclass FullPlay(BaseModel):\n    \"\"\"A full play, that has yet to be broken into individual scenes.\"\"\"\n\n    all_scenes: List[Scene] = Field(description=\"A list of every single scene's header and label - each as a Scene object.\")\n\nformatted_splitter_llm = processing_llm.with_structured_output(FullPlay)\n\n\n\n\nCode\nprompt = f\"\"\"\nThe following is the full text of a French Vaudeville play. Your job is to identify every scene boundary.\nFor each scene, return:\n- The act number (as it appears in the text)\n- The scene number (as it appears in the text)\n- The exact scene header line (copy it verbatim from the text)\n\nReturn a list of objects like:\n{{\"act\": \"...\", \"scene\": \"...\", \"header\": \"...\"}}\n\nDo not attempt to count character indexes. Only return the scene headers as they appear in the text.\n\nPlay Content: \\n\n{source_full.page_content}\n\"\"\"\n\n\n\n\nCode\ndef split_up_play(doc):\n    response = formatted_splitter_llm.invoke(prompt)\n    return response\n\n\n\n\nCode\nall_indexes = split_up_play(source_full)\n\n\n\n\nCode\nfrom langchain_core.documents import Document\n\nall_splits = []\nscene_headers = all_indexes.all_scenes\nfull_text = source_full.page_content\n\nprev_end_idx = 0\nfor i, scene in enumerate(scene_headers):\n    # Find the start index of this scene's header after the previous end index\n    start_idx = full_text.find(scene.header, prev_end_idx)\n    if start_idx == -1:\n        print(f\"Scene header not found: {scene.header}\")\n\n    # Determine the end index: start of next scene header, or end of document\n    if i + 1 &lt; len(scene_headers):\n        next_start_idx = full_text.find(scene_headers[i + 1].header, start_idx + len(scene.header))\n        if next_start_idx == -1:\n            end_idx = len(full_text)\n        else:\n            end_idx = next_start_idx\n    else:\n        end_idx = len(full_text)\n\n    scene_text = full_text[start_idx:end_idx]\n    doc = Document(page_content=scene_text, metadata={\"act\": scene.act, \"scene\": scene.scene, \"header\": scene.header})\n    all_splits.append(doc)\n    prev_end_idx = end_idx\n\n\n\n\n\n\n\nCode\nfrom typing import Optional\nfrom pydantic import BaseModel, Field\n\n\n# Pydantic\nclass MusicalMoment(BaseModel):\n    \"\"\"Many of these musical moments reuse some preexisting (and often well-known)  melody or tune.  These are variously called \"melodie”, or “air”, and identified with a short title that refers in some way to an opera or collection of melodies from which it was drawn.  The titles might include the names of works, or other characters in those original works. In the context of the plays, these tunes become the vehicle for newly composed lyrics, which are normally rhymed, and which normally follow the poetic scansion and structure of the original lyrics.  Rhyme, versification and structure are thus of interest to us.\"\"\"\n\n    act: int = Field(description=\"The act number in which this musical moment takes place. Will be labeled at the top of the act or scene in which it takes place.\")\n    scene: int = Field(description=\"The scene number in which the musical moment takes place. Will be labeled at the top of the scene.\")\n    number: int = Field(description = \"The index of the musical moment in the scene. For example, if this is the first musical moment in the scene, this should be 1.\")\n    characters: list[str] = Field(description=\"the character or characters who are singing (or otherwise making music) within this specific musical moment,\")\n    dramatic_situation: str = Field(description=\"the dramatic situation (a love scene, a crowd scene) in which the musical moment is occurring\")\n    air_or_melodie: str = Field(description=\"The title of the 'air' or 'melodie' of which the musical moment is based. It will be labeled in the text as 'air' or 'melodie'.\")\n    poetic_text: str = Field(description=\"The text from the music number. Do not include stage directions, only the lyrics sung by the characters in this musical moment\")\n    rhyme_scheme: str = Field(description = \"The rhyme scheme for the poetic text in the musical moment. For example, sentences that end in 'tree' 'be' 'why' and 'high' would have a rhyme scheme of AABB.\")\n    poetic_form: str = Field(description=\"form of the poetic text, which might involve some refrain\")\n    end_of_line_accents: list[str] = Field(description = \"the end accent for each line (masculine or féminine)\")\n    syllable_count_per_line: list[int] = Field(description = \"the number of syllables per line. look out for contractions and colloquialisms.that might make the count of syllables less than obvious. Normally a word like ‘voilà’ would of course have 2 syllables. But the musical rhythm of a particular melodie might require that it be _sung_ as only one syllable, as would be the case if the text reads ‘v’la’. Similarly ‘mademoiselle’ would have 4 syllables in spoken French. But the musical context might make it sound like 5. Or a character speaking dialect might sing “Mam’zelle”, which would have only 2 (or perhaps 3) syllables.\")\n    irregularities: Optional[str] = Field(description=\"any irregularities within the musical number\")\n    stage_direction_or_cues: Optional[str] = Field(description=\"any stage directions, which tell a character what to do, but aren't a part of another character's dialogue. These are usually connected with a character’s name, and often are in some contrasting typography (italics, or in parentheses - though this may not be picked up by the filereader).  Sometimes these directions even happen in the midst of a song! In a related way there are sometimes ‘cues’ for music, or performance (as when there is an offstage sound effect, or someone is humming) Most times the stage directions appear just before or after the song text. But sometimes they appear in the midst of the texts. The directions should be reported here and not in the transcription of the poem.\")\n    reprise: Optional[str] = Field(description=\"there are sometimes directions that indicate the ‘reprise’ of some earlier number or chorus.\")\n\nclass VaudevillePlay(BaseModel):\n    musicalMoments: list[MusicalMoment] = Field(description=\"\"\"A list of musical moments in a Vaudeville play, as MusicalMoment objects. Many of these musical moments reuse some preexisting (and often well-known)  melody or tune.  These are variously called \"melodie”, or “air”, and identified with a short title that refers in some way to an opera or collection of melodies from which it was drawn.  The titles might include the names of works, or other characters in those original works. In the context of the plays, these tunes become the vehicle for newly composed lyrics, which are normally rhymed, and which normally follow the poetic scansion and structure of the original lyrics.  Rhyme, versification and structure are thus of interest to us.\"\"\")    \n\nstructured_llm = llm.with_structured_output(VaudevillePlay)\n\n\n\n\nCode\nsystem_prompt = \"\"\"\nYou are a literary analyst specializing in French Vaudeville plays from the 18th century. \nYour goal is to identify each musical moment in the text, and for each, extract detailed structured information, \nincluding act, scene, characters, dramatic situation, air or melodie, poetic text, rhyme scheme, poetic form, end-of-line accents, syllable count, and any irregularities. \nSome parts of the text were slightly misinterpreted by the file reader (e.g., missing spaces or strange line breaks).\n\"\"\"\nhuman_prompt = \"\"\"\nGiven the following chunk of the play, analyze and return the musical moments as a structured VaudevillePlay object.\n\"\"\"\n\n\n\n\n\nCode\nfrom typing_extensions import List, TypedDict, Optional\nfrom langchain_core.prompts import ChatPromptTemplate\n\nprompt = ChatPromptTemplate.from_messages([\n    (\"system\",system_prompt),\n    (\"human\",\"Context:\\n{context}\\n\\nQuestion:\\n{question}\")\n     ])\n\nclass State(TypedDict):\n    index: int\n    context: Document\n    answer: str\n\ndef check_index(state: State):\n    return state\n\ndef retrieve_doc(state: State):\n    document = all_splits[state[\"index\"]]\n    return {\"context\": document}\n\ndef generate(state: State):\n    i = state[\"index\"]\n    message = prompt.invoke({\"question\":human_prompt,\"context\" : f'Act {all_indexes.all_scenes[i].act}, Scene {all_indexes.all_scenes[i].scene}:\\n\\n {state[\"context\"].page_content}'})\n    response = structured_llm.invoke(message)\n    return {\"answer\": response}\n\nfrom langgraph.graph import START, StateGraph\n\ngraph_builder = StateGraph(State).add_sequence([check_index, retrieve_doc, generate])\ngraph_builder.add_edge(START, \"check_index\")\ngraph = graph_builder.compile()\n\n\n\n\n\nThis is the new code. It goes through each scene, calls the LangGraph, then merges all of the scenes together into one object. Then, it exports it as a csv (based on the filename of the PDF) to a csv_outputs folder in your directory. In the github repository, you can view the 7 objects I tested. Or, you can follow this link to see the spreadsheet on Google Sheets.\n\n\nCode\ndef analyze_scenes(docs: List[Document]) -&gt; List[MusicalMoment]:\n    all_moments: List[MusicalMoment] = []\n\n    for i,doc in enumerate(docs):\n        response = graph.invoke({\"index\": i})\n        moments = response[\"answer\"].musicalMoments\n        all_moments.extend(moments)\n    \n    return all_moments\n\nall_moments = analyze_scenes(all_splits)\n\n\n\n\nCode\nimport csv\nimport os\n\n# Convert all MusicalMoment objects to dicts\nmoments_dicts = [moment.model_dump() for moment in all_moments]\n\n# Get all field names from the first moment\nfieldnames = moments_dicts[0].keys() if moments_dicts else []\n\n# Write to CSV\n# Ensure the output folder exists\noutput_folder = \"csv_outputs\"\nos.makedirs(output_folder, exist_ok=True)\n\n# Build the output path\noutput_path = os.path.join(output_folder, os.path.basename(csv_filename))\n\nwith open(output_path, \"w\", newline='', encoding=\"utf-8\") as csvfile:\n    writer = csv.DictWriter(csvfile, fieldnames=fieldnames)\n    writer.writeheader()\n    for row in moments_dicts:\n        # Convert lists to strings for CSV output\n        for key, value in row.items():\n            if isinstance(value, list):\n                row[key] = \"; \".join(str(v) for v in value)\n        writer.writerow(row)"
  },
  {
    "objectID": "Vaudeville/Vaudeville_structured.html#conclusions",
    "href": "Vaudeville/Vaudeville_structured.html#conclusions",
    "title": "Vaudeville: Generating Structured Data of Musical Moments",
    "section": "",
    "text": "This system is highly effective, and serves as a good template for the niche that is a Structured Output App.\nHowever, some improvements are needed for this to reach its most accurate form. Most notably, the descriptions for the variable within the Pydantic schema are lacking expertise in the subject. To reach it’s best form, an expert in these plays would have to write these descriptions.\nThat being said, this system is impressive as is. Reading through all 7 Vaudeville plays (~50 pages each) only took about 20 minutes of passive run time and a few dollars with the OpenAI API."
  },
  {
    "objectID": "Music Analysis/music_analysis_revised.html",
    "href": "Music Analysis/music_analysis_revised.html",
    "title": "Using Large Language Models to Analyze Music as MEI and JSON",
    "section": "",
    "text": "In this notebook, we will be using LangChain and OpenAI to evaluate a Large Language Model’s (LLM’s) ability to analyze music. To do this, we will be exploring the LLM’s capabilities by touching on each of the following concepts:\n\nGet Tabular Data from MEI (Music Encoding Initiative). We sort of know it can already do this: returning tables of all the notes in each voice part. Can it do so also with the octave information? Same thing for durations. Then I suppose we might ask it to calculate things, like the range of a piece, or the distribution of notes. See subsequent ideas about finding ‘pieces with similar distributions to this one’.\n\nWork with metadata in the MEI files. Tell us something about which ones are most similar in terms of sources, editors, composers. A structured output, I suppose, like a database of pieces based on metadata in them.\n\nGet Text from MEI and Recreate It. Lyrics are also elements in MEI (and MusicXML) of course they are distributed among different vocal lines in the case of Renaissance music, and there are lots of word repetitions. Could we recover the text and then use LLM to put into shape (as a rhymed poem, or something like that?). Could they LLM use the placement of rests as a way to understand the form?\n\nCould it Guess the Key. of a piece from the distribution or proportion of pitches? What would it need to know from us in order to do this? Could it tell us which pieces are the least tonal, or least easy to rank by key? Can it tell us if a piece changes key along the way? (Hint: not using key signature directly).\n\nRank Pieces by Difficulty. Things with lots of changes of direction, or wide leaps, or difficult rhythms, etc. The Bartok pieces are in fact pedagogical (and even in order).\nExtract editorial feature data from files. this would involve both editorial and music feature data. The CRIM files (and lots of other MEI files of early music) have things like Musica Ficta in them. These are editorial accidentals applied according to various rules of counterpoint. Could the tool tell us about where these appear, which composers and editors make use of them? Could it also produced some structured data for this, like a report or table?\n\nDuring these tests, we are using a sample of 9 mei files:\n\nInvention No. 1 in C major - Bach, Johann Sebastian\nInvention No. 7 in E minor - Bach, Johann Sebastian\nInvention No. 15 in B minor - Bach, Johann Sebastian\nMikrokosmos No. 22: Imitation and Counterpoint - Bartók, Béla\nMikrokosmos No. 31: Little Dance in Canon Form - Bartók, Béla\nMikrokosmos No. 104: Wandering through the Keys - Bartók, Béla\nGo ye my canzonettes - Morley, Thomas\nLeave now mine eyes - Morley, Thomas\nFlora wilt thou - Morley, Thomas\n\nFor the LLM with tools, we feed the LLM a basic dictionary with the title, composer, filepath, and number of parts. It then can use the filepath (after some manual parsing) to run Music21.\nFor the llm without tools, we saved extended summary information as a JSON file. This JSON includes basic metadata, all of the pitches and intervals for each part, and the key.\nAll of the LLM music analysis in this experiment uses gpt-4o by OpenAI.\n\n\n\n\n\n\n\nCode\n# Standard library imports\nimport ast\nimport getpass\nimport io\nimport json\nimport os\nimport re\nfrom collections import Counter\nfrom pathlib import Path\nimport xml.etree.ElementTree as ET\n\n# Third-party imports\nimport pandas as pd\nfrom music21 import converter, metadata, note\n\nfrom typing import List, Optional, Union\nfrom typing_extensions import TypedDict\n\nfrom langchain.agents import initialize_agent, AgentType\nfrom langchain.chat_models import init_chat_model\nfrom langchain_core.documents import Document\nfrom langchain_core.prompts import ChatPromptTemplate\nfrom langchain.tools import tool\n\nfrom langchain_community.document_loaders import TextLoader\nfrom langchain_experimental.tools.python.tool import PythonREPLTool\n\nfrom langgraph.graph import START, StateGraph\n\n\n\n\nCode\n# Extract titles from all MEI files in the specified directory\nmei_dir = Path(\"MEI Sample\")\nmei_titles = []\nmei_composers = []\n\nfor file in mei_dir.glob(\"*.mei\"):\n    try:\n        tree = ET.parse(file)\n        root = tree.getroot()\n        ns = {'mei': 'http://www.music-encoding.org/ns/mei'}\n        # Try &lt;workList&gt;/&lt;work&gt;/&lt;title&gt;\n        title = root.find('.//mei:workList/mei:work/mei:title', ns)\n        if title is None:\n            # fallback to &lt;fileDesc&gt;/&lt;titleStmt&gt;/&lt;title&gt;\n            title = root.find('.//mei:fileDesc/mei:titleStmt/mei:title', ns)\n        title_text = title.text.strip() if title is not None else \"Unknown Title\"\n        mei_titles.append(title_text)\n\n        # Try &lt;workList&gt;/&lt;work&gt;/&lt;composer&gt;\n        composer = root.find('.//mei:workList/mei:work/mei:composer', ns)\n        if composer is None:\n            # fallback to &lt;persName role=\"composer\"&gt;\n            composer = root.find('.//mei:persName[@role=\"composer\"]', ns)\n        composer_text = composer.text.strip() if composer is not None else \"Unknown Composer\"\n        mei_composers.append(composer_text)\n    except Exception as e:\n        mei_titles.append(\"Unknown Title\")\n        mei_composers.append(\"Unknown Composer\")\n\nfor i,title in enumerate(mei_titles):\n    print(f\"{title} - {mei_composers[i]}\")\n\n\nInvention No. 1 in C major - Bach, Johann Sebastian\nInvention No. 7 in E minor - Bach, Johann Sebastian\nInvention No. 15 in B minor - Bach, Johann Sebastian\nMikrokosmos No. 22: Imitation and Counterpoint - Bartók, Béla\nMikrokosmos No. 31: Little Dance in Canon Form - Bartók, Béla\nMikrokosmos No. 104: Wandering through the Keys - Bartók, Béla\nGo ye my canzonettes - Morley, Thomas\nLeave now mine eyes - Morley, Thomas\nFlora wilt thou - Morley, Thomas\n\n\n\n\n\n\n\nCode\n# Load the 9 sample documents as XML\n\n\ndef loadXML(filepath: str):\n    loader = TextLoader(filepath)\n    pages = loader.load()\n    doc: Document = Document(page_content=\"\", metadata=pages[0].metadata)\n    for page in pages:\n        doc.page_content += page.page_content\n    return doc\n\n\ndirectory = Path(\"MEI Sample\")\nfile_paths = [str(file) for file in directory.iterdir() if file.is_file()]\ndocs: List[Document] = []\nfor file in file_paths:\n    docs.append(loadXML(file))\n\n\n\n\nCode\n# Convert to a music21 dict\n\ndef extract_title_composer_from_mei(filepath):\n    try:\n        tree = ET.parse(filepath)\n        root = tree.getroot()\n        ns = {'mei': 'http://www.music-encoding.org/ns/mei'}\n\n        # Try &lt;workList&gt;/&lt;work&gt;/&lt;title&gt;\n        title = root.find('.//mei:workList/mei:work/mei:title', ns)\n        if title is None:\n            # fallback to &lt;fileDesc&gt;/&lt;titleStmt&gt;/&lt;title&gt;\n            title = root.find('.//mei:fileDesc/mei:titleStmt/mei:title', ns)\n        title_text = title.text.strip() if title is not None else \"Unknown Title\"\n\n        # Try &lt;workList&gt;/&lt;work&gt;/&lt;composer&gt;\n        composer = root.find('.//mei:workList/mei:work/mei:composer', ns)\n        if composer is None:\n            # fallback to &lt;persName role=\"composer\"&gt;\n            composer = root.find('.//mei:persName[@role=\"composer\"]', ns)\n        composer_text = composer.text.strip() if composer is not None else \"Unknown Composer\"\n\n        return title_text, composer_text\n\n    except Exception as e:\n        return \"Unknown Title\", \"Unknown Composer\"\n\ndef musicxml_to_summary_dict(filepath):\n    try:\n        score = converter.parse(filepath)\n    except Exception as e:\n        return {\"error\": f\"Failed to parse file: {e}\"}\n\n    meta = score.metadata or metadata.Metadata()\n    title, composer = extract_title_composer_from_mei(filepath)\n\n\n    parts: int = 0\n    for part in score.parts:\n        parts +=1\n\n    return {\n        \"title\": title,\n        \"composer\": composer,\n        \"mei_path\": filepath,\n        \"num_parts\": parts,\n    }\n\n\ndirectory = Path(\"MEI Sample\")\nsummaries = {}\n\nfor file in directory.glob(\"*.mei\"):\n    print(f\"Processing {file.name}...\")\n    summary = musicxml_to_summary_dict(str(file))\n    summaries[file.stem] = summary\n\n\nProcessing Bach_BWV_0772.mei...\nProcessing Bach_BWV_0778.mei...\nProcessing Bach_BWV_0786.mei...\nProcessing Bartok_Mikrokosmos_022.mei...\nProcessing Bartok_Mikrokosmos_031.mei...\nProcessing Bartok_Mikrokosmos_104.mei...\nProcessing Morley_1595_01_Go_ye_my_canzonettes.mei...\nProcessing Morley_1595_07_Leave_now_mine_eyes.mei...\nProcessing Morley_1595_12_Flora_wilt_thou.mei...\n\n\n\n\n\n\n\nCode\n# Helper functions for tools\ndef parse_context(full_context: str) -&gt; dict:\n    import ast\n    import re\n\n    # If the string includes 'Context:', isolate just the context part\n    if \"Context:\" in full_context:\n        full_context = full_context.split(\"Context:\", 1)[1].strip()\n\n    pattern = r\"Piece:\\s*(\\S+)\\n(.*?)(?=\\nPiece:|\\Z)\"\n    matches = re.findall(pattern, full_context, re.DOTALL)\n\n    context_dict = {}\n    for piece_name, dict_str in matches:\n        try:\n            context_dict[piece_name.strip()] = ast.literal_eval(dict_str.strip())\n        except Exception as e:\n            raise ValueError(f\"Failed to parse piece '{piece_name}': {e}\")\n\n    return context_dict\n\ndef count_notes_for_piece(filepath: str, pitch_with_octave: bool) -&gt; Counter:\n    score = converter.parse(filepath)\n    notes = [\n        n.nameWithOctave if pitch_with_octave else n.name\n        for n in score.recurse().notes\n        if isinstance(n, note.Note)\n    ]\n    return Counter(notes)\n\ndef extract_mei_metadata(filepath: str) -&gt; dict:\n\n    \"\"\"\n    Extracts detailed metadata from an MEI file, including:\n    - Title\n    - Composer\n    - Editors (mei, xml, analyst)\n    - Publication date\n    - Application used to encode\n    - Availability statement\n    - Work title\n    \"\"\"\n    ns = {'mei': 'http://www.music-encoding.org/ns/mei'}\n    tree = ET.parse(filepath)\n    root = tree.getroot()\n    \n    metadata = {\n        'title': None,\n        'composer': None,\n        'mei_editors': [],\n        'xml_editors': [],\n        'analysts': [],\n        'publication_date': None,\n        'availability': None,\n        'application': None,\n        'work_title': None\n    }\n\n    # Title\n    title = root.find('.//mei:titleStmt/mei:title', ns)\n    if title is not None:\n        metadata['title'] = title.text.strip()\n\n    # People with roles\n    people = root.findall('.//mei:titleStmt/mei:respStmt/mei:persName', ns)\n    for person in people:\n        role = person.attrib.get('role', '').lower()\n        name = person.text.strip()\n        if role == 'composer':\n            metadata['composer'] = name\n        elif role == 'mei_editor':\n            metadata['mei_editors'].append(name)\n        elif role == 'xml_editor':\n            metadata['xml_editors'].append(name)\n        elif role == 'analyst':\n            metadata['analysts'].append(name)\n\n    # Publication date\n    date = root.find('.//mei:pubStmt/mei:date', ns)\n    if date is not None:\n        metadata['publication_date'] = date.attrib.get('isodate', None)\n\n    # Availability / copyright\n    availability = root.find('.//mei:pubStmt/mei:availability', ns)\n    if availability is not None:\n        metadata['availability'] = availability.text.strip()\n\n    # Application name\n    app = root.find('.//mei:appInfo/mei:application/mei:name', ns)\n    if app is not None:\n        metadata['application'] = app.text.strip()\n\n    # Work title\n    work_title = root.find('.//mei:workList/mei:work/mei:title', ns)\n    if work_title is not None:\n        metadata['work_title'] = work_title.text.strip()\n\n    return metadata\n\ndef get_key_signature(filepath: str) -&gt; str:\n    score = converter.parse(filepath)\n    key = score.analyze('key')\n    return str(key)\n\ndef get_time_signature(filepath: str) -&gt; str:\n    \"\"\"Returns the first time signature of the piece.\"\"\"\n    score = converter.parse(filepath)\n    ts = score.recurse().getElementsByClass('TimeSignature')[0]\n    return str(ts)\n\ndef get_pitch_histogram(filepath: str) -&gt; dict:\n    \"\"\"Returns a histogram of pitches in the score.\"\"\"\n    score = converter.parse(filepath)\n    return score.plot('histogram', 'pitch', returnDict=True)\n\n\n\n\nCode\n# Tools!\n\n@tool\ndef tool_count_notes(full_context: str, pitch_with_octave: bool = True) -&gt; str:\n    \"\"\"\n    Returns pitch count tables grouped by piece, using the 'mei_path' field in the score dictionary.\n    \"\"\"\n    try:\n        full_data = parse_context(full_context)\n        output_sections = []\n        log_lines = []\n\n        for piece_name, data in full_data.items():\n            filepath = data.get(\"mei_path\")\n            if not filepath:\n                output_sections.append(f\"Piece: {piece_name}\\nError: 'mei_path' not found.\\n\")\n                continue\n\n            counts = count_notes_for_piece(filepath, pitch_with_octave)\n            if not counts:\n                output_sections.append(f\"Piece: {piece_name}\\nNo notes found in the score.\\n\")\n                continue\n\n            df = pd.DataFrame(counts.items(), columns=[\"Pitch\", \"Count\"])\n            df = df.sort_values(\"Pitch\").reset_index(drop=True)\n\n            section = f\"Piece: {piece_name}\\n{df.to_string(index=False)}\\n\"\n            output_sections.append(section)\n\n            log_lines.append(f\"Processed {piece_name} - MEI path: {filepath}\")\n\n        with open(\"debug_output.txt\", \"a\") as f:\n            f.write(\"Parsed context keys: {}\\n\".format(', '.join(full_data.keys())))\n            for line in log_lines:\n                f.write(line + \"\\n\")\n\n        return \"\\n\".join(output_sections).strip()\n\n    except Exception as e:\n        return f\"count_notes failed: {e}\"\n    \n@tool\ndef tool_get_full_metadata(full_context: str):\n    \"\"\"\n    Extracts detailed metadata from an MEI file, including:\n    - Title\n    - Composer\n    - Editors (mei, xml, analyst)\n    - Publication date\n    - Application used to encode\n    - Availability statement\n    - Work title\n    \"\"\"\n    try:\n        full_data = parse_context(full_context)\n        filepaths = []\n        metadata_summaries = []\n        for piece_name, data in full_data.items():\n            filepath = data.get(\"mei_path\")\n            if filepath:\n                filepaths.append(filepath)\n            else:\n                metadata_summaries.append({\"error\": f\"No 'mei_path' for {piece_name}\"})\n        \n        for filepath in filepaths:\n            metadata_summaries.append(\n                extract_mei_metadata(filepath)\n            )\n        return metadata_summaries\n\n    except Exception as e:\n        return f\"get_full_metadata failed: {e}\"\n    \n@tool\ndef tool_get_key_signature(full_context: str):\n    \"\"\"\n    Returns the key signature of each piece in the full context.\n    \"\"\"\n    try:\n        full_data = parse_context(full_context)\n        output_sections = []\n\n        for piece_name, data in full_data.items():\n            filepath = data.get(\"mei_path\")\n            if not filepath:\n                output_sections.append(f\"Piece: {piece_name}\\nError: 'mei_path' not found.\\n\")\n                continue\n\n            key_signature = get_key_signature(filepath)\n            output_sections.append(f\"Piece: {piece_name}\\nKey Signature: {key_signature}\\n\")\n\n        return \"\\n\".join(output_sections).strip()\n\n    except Exception as e:\n        return f\"get_key_signature failed: {e}\"\n    \n@tool\ndef tool_get_time_signature(full_context: str):\n    \"\"\"\n    Returns the time signature of each piece in the full context.\n    \"\"\"\n    try:\n        full_data = parse_context(full_context)\n        output_sections = []\n\n        for piece_name, data in full_data.items():\n            filepath = data.get(\"mei_path\")\n            if not filepath:\n                output_sections.append(f\"Piece: {piece_name}\\nError: 'mei_path' not found.\\n\")\n                continue\n\n            time_signature = get_time_signature(filepath)\n            output_sections.append(f\"Piece: {piece_name}\\nTime Signature: {time_signature}\\n\")\n\n        return \"\\n\".join(output_sections).strip()\n\n    except Exception as e:\n        return f\"get_time_signature failed: {e}\"\n\n@tool\ndef tool_get_pitch_histogram(full_context: str):\n    \"\"\"\n    Returns a histogram of pitches for each piece in the full context.\n    \"\"\"\n    try:\n        full_data = parse_context(full_context)\n        output_sections = []\n\n        for piece_name, data in full_data.items():\n            filepath = data.get(\"mei_path\")\n            if not filepath:\n                output_sections.append(f\"Piece: {piece_name}\\nError: 'mei_path' not found.\\n\")\n                continue\n\n            histogram = get_pitch_histogram(filepath)\n            output_sections.append(f\"Piece: {piece_name}\\nPitch Histogram: {histogram}\\n\")\n\n        return \"\\n\".join(output_sections).strip()\n\n    except Exception as e:\n        return f\"get_pitch_histogram failed: {e}\"\n    \n@tool \ndef get_notes(full_context: str):\n    \"\"\"\n    Returns a list of notes for each piece in the full context.\n    \"\"\"\n    try:\n        full_data = parse_context(full_context)\n        output_sections = []\n\n        for piece_name, data in full_data.items():\n            filepath = data.get(\"mei_path\")\n            if not filepath:\n                output_sections.append(f\"Piece: {piece_name}\\nError: 'mei_path' not found.\\n\")\n                continue\n\n            score = converter.parse(filepath)\n            notes = [n.nameWithOctave for n in score.recurse().notes if isinstance(n, note.Note)]\n            output_sections.append(f\"Piece: {piece_name}\\nNotes: {', '.join(notes)}\\n\")\n\n        return \"\\n\".join(output_sections).strip()\n\n    except Exception as e:\n        return f\"get_notes failed: {e}\"\n    \n@tool\ndef get_lyrics(full_context: str):\n    \"\"\"\n    Returns the lyrics for each piece in the full context.\n    \"\"\"\n    try:\n        full_data = parse_context(full_context)\n        output_sections = []\n\n        for piece_name, data in full_data.items():\n            filepath = data.get(\"mei_path\")\n            if not filepath:\n                output_sections.append(f\"Piece: {piece_name}\\nError: 'mei_path' not found.\\n\")\n                continue\n\n            score = converter.parse(filepath)\n            lyrics = []\n            for n in score.recurse().notes:\n                if isinstance(n, note.Note) and n.lyrics:\n                    lyrics.append(n.lyrics[0].text)\n\n            output_sections.append(f\"Piece: {piece_name}\\nLyrics: {', '.join(lyrics)}\\n\")\n\n        return \"\\n\".join(output_sections).strip()\n\n    except Exception as e:\n        return f\"get_lyrics failed: {e}\"\n\n# AI Setup\ntools = [\n    tool_count_notes,\n    tool_get_full_metadata,\n    tool_get_key_signature,\n    tool_get_time_signature,\n    tool_get_pitch_histogram,\n    get_notes,\n    get_lyrics,\n    PythonREPLTool()\n]\n\n\n\n\n\n\n\nCode\n\nif not os.environ.get(\"OPENAI_API_KEY\"):\n  os.environ[\"OPENAI_API_KEY\"] = getpass.getpass(\"Enter API key for OpenAI: \")\n\nllm = init_chat_model(\"gpt-4o\", model_provider=\"openai\")\nllm_mini = init_chat_model(\"gpt-4o-mini\", model_provider=\"openai\")\n\nagent = initialize_agent(\n    tools=tools,             # your local tool functions like count_notes\n    llm=llm,                 # your ChatOpenAI or init_chat_model(...)\n    agent=AgentType.OPENAI_FUNCTIONS,\n    verbose=False,\n)\n# Detailed data for w/o tools\nwith open(\"music_summaries.json\", \"r\") as f:\n    all_scores = json.load(f)\n\n# Main template for the chat prompt\ntemplate = ChatPromptTemplate([\n    (\"system\", \"\"\"You are an expert on music analysis. \nYou are analyzing two-part scores using tools. \nYou are going to be given various scores as `context`. When a tool calls for `full_context`,\ninput all of the text from the human question and context.\nOnly use the information provided in `data`. If you have uncertainty, express it. If you use a tool and it gives you an exception or error, include the exception or error in your response.\"\"\"),\n    \n    (\"human\", \"Question: {question}\\n\\nContext:\\n{context}\")\n])\n\n# Secondary template for choosing relevant score names\nsecondary_template = ChatPromptTemplate([\n    (\"system\", \"Your job is to choose the relevant score names from the provided context based on the question. The score names are the keys in the full context dictionary. For example, 'Bach_BWV_0772' is a score name. You are to return each relevant score name with a comma between each name and no spaces. If you see no relevant score names, return an empty string.\"),\n    (\"human\", \"Question: {question}\\n\\nContext:\\n{context}\\n\\nPlease return the relevant score names as a comma-separated list without spaces.\")\n])\n\nclass State(TypedDict):\n    question: str\n    context: dict\n    answer: str\n    score_name: Optional[list[str]] = None\n    use_tools: Optional[bool] = True\n\ndef llm_filter(state: State):\n    \"\"\"\n    If no score_name list was supplied, ask gpt‑4o‑mini to guess the relevant pieces.\n    \"\"\"\n    # ── 1. Maybe fill in score_name ────────────────────────────────\n    if not state[\"score_name\"]:\n        prompt = secondary_template.invoke({\n            \"question\": state[\"question\"],\n            \"context\": state[\"context\"],\n        })\n\n        resp = llm_mini.invoke(prompt)          # ← AIMessage\n        text = (\n            resp[\"output\"]                      # dict path (rare)\n            if isinstance(resp, dict)\n            else resp.content                   # AIMessage path (common)\n        )\n        names = [n.strip() for n in text.split(\",\") if n.strip()]\n        state[\"score_name\"] = names or None\n\n    # ── 2. Fallback when nothing found ─────────────────────────────\n    if not state[\"score_name\"]:\n        state[\"use_tools\"] = True               # cheaper / safer path\n\n    # ── 3. MUST return the keys we changed ─────────────────────────\n    return {\n        \"score_name\": state[\"score_name\"],\n        \"use_tools\":  state[\"use_tools\"],\n    }\n\n\ndef retrieve(state: State):\n    print(f\"Scores chosen: {state['score_name']}\")\n    data_source = summaries if state[\"use_tools\"] else all_scores\n    selected_scores = state[\"score_name\"]\n\n    if selected_scores:\n        pieces = ((name, data_source[name]) for name in selected_scores if name in data_source)\n    else:\n        pieces = data_source.items()\n\n    context = \"\\n\".join(f\"Piece: {name}\\n{data}\" for name, data in pieces)\n    state[\"context\"] = context\n    return {\"context\": context}\n\n\ndef ask_llm(state: State):\n    if state[\"use_tools\"]:\n        return ask_llm_tools(state)\n    else:\n        return ask_llm_no_tools(state)\n\ndef ask_llm_tools(state: State):\n    prompt = template.invoke(\n        {\"question\": state[\"question\"], \"context\": state[\"context\"]}\n    )\n\n    # OpenAIFunctions agent usually returns {\"output\": \"...\"}\n    response = agent.invoke({\"input\": prompt})\n    answer_text = (\n        response[\"output\"] if isinstance(response, dict) else response\n    )\n\n    # Return a partial‑state update\n    return {\"answer\": answer_text}\n\n\ndef ask_llm_no_tools(state: State):\n    prompt = template.invoke(\n        {\"question\": state[\"question\"], \"context\": state[\"context\"]}\n    )\n    response = llm.invoke(prompt)\n    answer_text = (\n        response[\"output\"] if isinstance(response, dict) else response\n    )\n    return {\"answer\": answer_text}\n\n\ngraph_builder = StateGraph(State).add_sequence([llm_filter, retrieve, ask_llm])\ngraph_builder.add_edge(START, \"llm_filter\")\ngraph = graph_builder.compile()\n\ndef run_graph(question: str, score_names: Optional[Union[str, list[str]]] = None, use_tools: Optional[bool] = True):\n    if isinstance(score_names, str):\n        score_names = [score_names]\n\n    return graph.invoke({\n        \"question\": question,\n        \"score_name\": score_names,\n        \"use_tools\": use_tools,\n        \"context\": {},\n        \"answer\": \"\"\n    })\n\n\n\n\n\n\ngraph TD\nA[Submit Question, Optional Piece Names, Use tools default yes] --&gt; B{Has piece name?}\nB --&gt;|NO| C[LLM picks relevant documents]\nC --&gt; D[Retrieve documents by filtering the dictionary]\nB --&gt;|YES| D\nD --&gt; E{Use Tools?}\nE --&gt;|NO| F[use detailed json data]\nF --&gt; G[Ask LLM]\nE --&gt;|YES| H[Use summary dict text]\nH --&gt; I[Convert text to dict object]\nI --&gt; J[Use tools]\nJ --&gt; K[Pull full MEI/XML from dict filepath]\nK --&gt; L[Use full MEI with Music21 or CRIM tools]\nL --&gt; M[Return response]\nG --&gt; M\n\n\n\n\n\n\nLLM With Tools:\n\n\nCode\nresult_state = run_graph(\n    \"Return tabular data on the following piece of music. That is, return a table of how many of each notes there is throughout the piece.\",\n    \"Bach_BWV_0772\",\n    use_tools=True,\n)\n\nprint(result_state[\"answer\"]) \n\n\nScores chosen: ['Bach_BWV_0772']\nHere is the tabular data for the piece \"Invention No. 1 in C major\" by Johann Sebastian Bach:\n\n| Pitch | Count |\n|-------|-------|\n| A2    | 3     |\n| A3    | 21    |\n| A4    | 28    |\n| A5    | 10    |\n| B-3   | 4     |\n| B-4   | 4     |\n| B2    | 4     |\n| B3    | 19    |\n| B4    | 26    |\n| B5    | 3     |\n| C#4   | 1     |\n| C#5   | 3     |\n| C2    | 1     |\n| C3    | 6     |\n| C4    | 25    |\n| C5    | 29    |\n| C6    | 2     |\n| D2    | 1     |\n| D3    | 13    |\n| D4    | 25    |\n| D5    | 32    |\n| E3    | 16    |\n| E4    | 25    |\n| E5    | 27    |\n| F#3   | 8     |\n| F#4   | 7     |\n| F3    | 6     |\n| F4    | 17    |\n| F5    | 24    |\n| G#3   | 2     |\n| G#4   | 4     |\n| G#5   | 1     |\n| G2    | 4     |\n| G3    | 18    |\n| G4    | 24    |\n| G5    | 20    |\n\n\nLLM Without Tools:\n\n\nCode\nresult_state = run_graph(\n    \"Return tabular data on the following piece of music. That is, return a table of how many of each notes there is throughout the piece. Sort by note name (all the A's first, this the B's, etc.)\",\n    \"Bach_BWV_0772\",\n    use_tools=False,\n)\n\nprint(result_state[\"answer\"].content) \n\n\nScores chosen: ['Bach_BWV_0772']\nBased on the data provided, the pitches from both parts can be tabulated as follows, sorted by note name:\n\n| Note | Frequency |\n|------|-----------|\n| A2   | 2         |\n| A3   | 12        |\n| A4   | 15        |\n| A5   | 4         |\n| B-3  | 5         |\n| B-4  | 3         |\n| B2   | 3         |\n| B3   | 19        |\n| B4   | 16        |\n| B5   | 2         |\n| C2   | 1         |\n| C3   | 11        |\n| C4   | 18        |\n| C5   | 18        |\n| C6   | 2         |\n| C#4  | 1         |\n| C#5  | 2         |\n| D2   | 2         |\n| D3   | 12        |\n| D4   | 20        |\n| D5   | 18        |\n| E3   | 13        |\n| E4   | 19        |\n| E5   | 12        |\n| F3   | 4         |\n| F4   | 14        |\n| F5   | 11        |\n| F#3  | 6         |\n| F#4  | 5         |\n| G2   | 2         |\n| G3   | 15        |\n| G4   | 22        |\n| G5   | 12        |\n| G#3  | 2         |\n| G#4  | 3         |\n| G#5  | 1         |\n\nThis table summarizes the frequency of each note across the two parts of Bach's Invention No. 1 in C major, sorted by note name.\n\n\nCorrect Response:\n\n\nCode\ndef count_notes(filepath, pitch_with_octave=True):\n    \"\"\"\n    Count the number of times each pitch appears in a score.\n    \n    Args:\n        filepath (str): Path to the MEI/MusicXML file.\n        pitch_with_octave (bool): If True, include octave (e.g., 'C4'); else use pitch class (e.g., 'C').\n    \n    Returns:\n        pd.DataFrame: A table showing pitch and count.\n    \"\"\"\n    score = converter.parse(filepath)\n    all_notes = []\n\n    for n in score.recurse().notes:\n        if isinstance(n, note.Note):\n            if pitch_with_octave:\n                all_notes.append(n.nameWithOctave)\n            else:\n                all_notes.append(n.name)\n\n    counts = Counter(all_notes)\n    df = pd.DataFrame(counts.items(), columns=[\"Pitch\", \"Count\"])\n    df = df.sort_values(\"Pitch\").reset_index(drop=True)\n    return df\n\ncount_notes(\"MEI Sample/Bach_BWV_0772.mei\")\n\n\n\n\n\n\n\n\n\nPitch\nCount\n\n\n\n\n0\nA2\n3\n\n\n1\nA3\n21\n\n\n2\nA4\n28\n\n\n3\nA5\n10\n\n\n4\nB-3\n4\n\n\n5\nB-4\n4\n\n\n6\nB2\n4\n\n\n7\nB3\n19\n\n\n8\nB4\n26\n\n\n9\nB5\n3\n\n\n10\nC#4\n1\n\n\n11\nC#5\n3\n\n\n12\nC2\n1\n\n\n13\nC3\n6\n\n\n14\nC4\n25\n\n\n15\nC5\n29\n\n\n16\nC6\n2\n\n\n17\nD2\n1\n\n\n18\nD3\n13\n\n\n19\nD4\n25\n\n\n20\nD5\n32\n\n\n21\nE3\n16\n\n\n22\nE4\n25\n\n\n23\nE5\n27\n\n\n24\nF#3\n8\n\n\n25\nF#4\n7\n\n\n26\nF3\n6\n\n\n27\nF4\n17\n\n\n28\nF5\n24\n\n\n29\nG#3\n2\n\n\n30\nG#4\n4\n\n\n31\nG#5\n1\n\n\n32\nG2\n4\n\n\n33\nG3\n18\n\n\n34\nG4\n24\n\n\n35\nG5\n20\n\n\n\n\n\n\n\n\n\n\nLLM With Tools:\n\n\nCode\nresult_state = run_graph(\n    \"Comparing all of the pieces, tell me about the metadata. That is, which ones are most similar in terms of sources, editors, composers, etc.\"\n)\n\nprint(result_state[\"answer\"]) \n\n\nScores chosen: None\nThe pieces can be grouped in terms of similarity in metadata as follows:\n\n### Bach Inventions\n- **Pieces**: \n  - *Invention No. 1 in C major (BWV 772)*\n  - *Invention No. 7 in E minor (BWV 778)*\n  - *Invention No. 15 in B minor (BWV 786)*\n- **Composer**: Bach, Johann Sebastian\n- **MEI Editors**: Richard Freedman\n- **XML Editors**: Tobias Schölkopf\n- **Analysts**: Varied (This Student, Rowan Shigeno, Holden Starkey)\n- **Publication Date**: 2024-11-19\n- **Application**: MEI Soup Updater 2024\n- **Availability**: Governed by the copyright laws of Germany; requires prior written consent for utilization beyond copyright scope.\n\n### Bartók Mikrokosmos\n- **Pieces**: \n  - *Mikrokosmos No. 22: Imitation and Counterpoint*\n  - *Mikrokosmos No. 31: Little Dance in Canon Form*\n  - *Mikrokosmos No. 104: Wandering through the Keys*\n- **Composer**: Bartók, Béla\n- **MEI Editors**: Richard Freedman\n- **XML Editors**: Pedro Ramoneda\n- **Analysts**: Varied (Kylie McCombs, Maika Kogawara, Holden Starkey)\n- **Publication Date**: 2024-11-19\n- **Application**: MEI Soup Updater 2024\n- **Availability**: Expired copyrights with transcription by Pedro Ramoneda to MusicXML.\n\n### Morley Canzonettes\n- **Pieces**: \n  - *Go ye my canzonettes*\n  - *Leave now mine eyes*\n  - *Flora wilt thou*\n- **Composer**: Morley, Thomas\n- **MEI Editors**: Richard Freedman\n- **XML Editors**: André Vierendeels\n- **Analysts**: Varied (Rohan Sarma, Kylie McCombs, Holden Starkey)\n- **Publication Date**: 2024-11-19\n- **Application**: MEI Soup Updater 2024\n- **Availability**: Available under a Creative Commons 4.0 license.\n\n### Overall Observations\n- All pieces were edited by Richard Freedman for MEI and published using the MEI Soup Updater 2024 tool.\n- The XML editors differ slightly between the groups, with Tobias Schölkopf editing Bach and André Vierendeels editing Morley, while Pedro Ramoneda took care of Bartók.\n- The differences in analysts provide some variation among pieces within the same group but follow a similar trend within each composer's collection.\n- Availability varies primarily by composer group, with Morley’s pieces having a Creative Commons license, whereas Bartók’s are considered expired copyrights. Bach's pieces have the most restrictions, as they adhere strictly to German copyright laws.\n\n\nLLM Without Tools:\n\n\nCode\nresult_state = run_graph(\n    \"Comparing all of the pieces, tell me about the metadata. That is, which ones are most similar in terms of sources, editors, composers, etc.\",\n    use_tools=False,\n)\n\nprint(result_state[\"answer\"]) \n\n\nScores chosen: None\nHere is an analysis of the metadata for the given pieces, highlighting similarities based on sources, editors, composers, etc.:\n\n### Composer\n- **Bach, Johann Sebastian**: Composed the Inventions (BWV 772, BWV 778, BWV 786).\n- **Bartók, Béla**: Composed the Mikrokosmos pieces (Nos. 22, 31, 104).\n- **Morley, Thomas**: Composed the canzonettes (Go ye my canzonettes, Leave now mine eyes, Flora wilt thou).\n\n### Editors\n- **MEI Editor**: Richard Freedman worked on all pieces; common to all the collections (Bach, Bartók, Morley).\n- **XML Editors**:\n  - Tobias Schölkopf edited Bach's works.\n  - Pedro Ramoneda worked on Bartók's works.\n  - André Vierendeels edited Morley's pieces.\n\n### Analysts\n- Bach's pieces have various analysts: This Student, Rowan Shigeno, and Starkey, Holden.\n- Bartók's pieces: Kylie McCombs, Maika Kogawara, and Starkey, Holden.\n- Morley's pieces: Rohan Sarma, Kylie McCombs, and Starkey, Holden.\n\n### Publication Date\n- All pieces apparently have a publication date of November 19, 2024.\n\n### Digital Application\n- All compositions were processed using \"MEI Soup Updater 2024\".\n\n### Availability\n- **Bach's Collection**: Governed by copyright laws of Germany, requiring written consent for use beyond copyright law scope.\n- **Bartók's Collection**: Mentioned as expired copyright editions, with specific transcription handling by Pedro Ramoneda to MusicXML.\n- **Morley's Collection**: Governed under the Creative Commons 4.0 license.\n\n### Summary of Similarities\n- All have the same MEI editor, Richard Freedman, and were processed with the same application.\n- Bach and Bartók's pieces share the common analyst, Starkey, Holden.\n- The pieces across the three composers align in terms of publication date and use of the MEI Soup Updater.\n\nOverall, the analysis highlights consistent handling by Richard Freedman across all pieces in terms of MEI editing and a unified application process. Significant differences are present in terms of composers and XML editors, with variation in analysts across collections.\n\n\nBoth do a great job here! This is to be expected, as it is simply pulling metadata using a tool, or reading it from the dictionary fed to it.\n\n\n\nLLM With Tools:\n\n\nCode\nresult_state = run_graph(\n    \"Find the lyrics in this piece of music.\",\n    \"Morley_1595_01_Go_ye_my_canzonettes\",\n    use_tools=True,\n)\n\nprint(result_state[\"answer\"]) \n\n\nScores chosen: ['Morley_1595_01_Go_ye_my_canzonettes']\nThe lyrics of the piece \"Go ye my canzonettes\" by Thomas Morley are as follows:\n\n```\nGoe yee my Canzonets, to my deer darling,\ngoe yee my Canzonets, to my deer darling,\ngoe yee my Canzonets, to my deer darling,\nto my deer darling,\nand with your gentle daintie sweet accentings,\ndesire hir to vouchsafe these my lamentings,\ndesire hir to vouchsafe these my lamentings,\nand with a crownet, of hir rayes supernall,\nt'adorne your locks and make your name eternal,\nt'adorne your locks and make your name eternal,\nand with a crownet, of hir rayes supernall,\nt'adorne your locks and make your name eternal,\nt'adorne yt locks and make your name eternall.\nGoe yee my Canzonets, to my deer darling,\ndeer darling,\ngoe yee my Canzonets, to my deer darling,\nto my deer darling,\nand with your gentle daintie sweet accentings,\ndesire hir to vouchsafe these my lamentings,\ndesire hir to vouchsafe these my lamentings,\nand with a crownet, of hir rayes spernall,\nt'adorne your locks and make your name eternall\nt'adorne your looks and make your name eternall,\nand with a crownet, of hir rayes supernall,\nta dorne your locks and make your name etarnall,\nt'adorne your locks and make your name eternal.\n```\n\nThe lyrics reflect a sense of sending a message to a dear darling with expressions of adoration and lamentations.\n\n\n\n\nCode\nresult_state = run_graph(\n    \"Find the lyrics for Morley's 'Go ye my canzonettes'.\",\n    use_tools=True,\n)\n\nprint(result_state[\"answer\"]) \n\n\nScores chosen: None\nHere are the lyrics for Thomas Morley's \"Go ye my canzonettes\":\n\n```\nGoe, yee my Canzonets, to my deer darling,\nGoe, yee my Canzonets, to my deer darling,\nGoe, yee my Canzonets, to my deer darling,\nto my deer darling, and with your gentlr dain-tie sweet accentings,\ndesire hir to vouch-safe these my lamentings,\ndesire hir to vouch-safe these my lamentings,\nand with a crownet, of hir rayes supernall,\nt'adore your locks and make your name eternal,\nt'adore your locks and make yout name eternall,\nand with a crownet of hir rayes supernall,\nt'adore your locks and make your name eternal,\nt'adore yout locks and make your name eternall.\n\nGoe, yee my Canzonets, to my deer darling,\ndeer darling, goe, yee my Canzonets, to my deer darling,\nto my deer darling, and with your gentle daintie sweet accentings,\ndesire hir to vouch-safe these my lamentings,\ndesire hir to vouch-safe these my lamentings,\nand with a crownet, of hir rayes spernall,\nt'adore your locks and make your name eternall t'adore your looks and make your name eternall,\nand with a crownet, of hir rayes supernall,\nta'dorne your locks and make your name etarnall,\nt'adore your locks and make your name eternall.\n```\n\nThe lyrics share a repetitive pattern and focus on sending the canzonets to a dear darling with gentle and sweet music.\n\n\nIt’s interesting that the first call corrected one of the instances “eternall” to “eternal”.\nLLM Without Tools:\n\n\nCode\nresult = loadXML(r\"C:/Users/charl/Documents/VSCode/Encoding Music/Music Analysis/MEI Sample/Morley_1595_01_Go_ye_my_canzonettes.mei\").page_content\n\nanswer = llm.invoke(\n    f\"\"\"Question: Find the lyrics for Morley's 'Go ye my canzonettes'. \n    Context: \n    {result}\n    \n    \"\"\"\n)\n\nprint(answer.content)\n\n\nThe lyrics for Thomas Morley's \"Go ye my canzonettes\" are embedded within the provided XML data surrounding the `&lt;verse&gt;` and `&lt;syl&gt;` tags. To extract the lyrics, we can sequentially pull out these tags and assemble the text, which is structured as individual syllables. Here's a transcription of the lyrics based on the given data:\n\n```\nGo ye my canzonets to my deer\nGo ye my canzonets to my deer\nGo ye my canzonets to my deer\nGo ye my canzonets to my deer\nGo ye my canzonets to my deer\nGo ye my canzonets to my deer\nGo ye my canzonets to my deer\nGo ye my canzonets to my deer\nGo ye my canzonets to my deer\nGo ye my canzonets to my deer\n\nDarling, go ye my darling, go ye my darling\nGo ye, my darling\nWith your gentle title\nWith your gentle daintie\nSweet accenings desir hir\nTo vouche safe there my laments\nTo vouche safe there my laments\nTo vouche safe there my laments\nTo vouche safe there my laments\nAnd with a crowne of her rayes supernall\nDorne your locks, make your name\nEternal\nTo adorn your name\nEternal, adorn your locks\n\nAnd with a crowne of her rayes supernall\nDorne your locks, make your name\nEternal, adorn your locks\nAnd with a crowne of her rayes supernall\nDorne your locks, make your name\nEternal\nAnd with a crowne of her rayes supernall\nTo adorn your locks\nAnd mai your name\nEternal\n(nall. nall.)\n```\n\nNote: The lyrical structure might repeat similar lines across stanzas, and the repetition may vary depending on the piece's arrangement. Also, minor variations can occur with repeated sections across the score if they are executed with different vocal or instrumental ornamentations.\n\n\nCorrect Response:\n\n\nCode\nscore = converter.parse(\"MEI Sample/Morley_1595_01_Go_ye_my_canzonettes.mei\")\nlyrics = []\n\nfor n in score.recurse().notes:\n    if isinstance(n, note.Note) and n.lyrics:\n        for lyric in n.lyrics:\n            if lyric.text:\n                cleaned = lyric.text.strip().replace(\"\\n\", \"\").replace(\"\\r\", \"\")\n                lyrics.append(cleaned)\n\nformatted = \" \".join(lyrics)\nformatted = formatted.replace(\" --\", \"-\").replace(\"--\", \"-\")\nformatted = \" \".join(formatted.split())\nformatted = formatted.replace(\",\",\"\\n\")\nformatted = formatted.replace(\" - - \",\"\")\nprint(\"Lyrics:\\n\", formatted)\n\n\nLyrics:\n Goe yee my Canzonets to my deer darling\n goe yee my Canzonets to my deer darling\n goe yee my Canzonets to my deer darling\n to my deer darling\n and with your gentlr daintie sweet accentings\n desire hir to vouchsafe these my lamentings\n desire hir to vouchsafe these my lamentings\n and with a crownet\n of hir rayes supernall\n t'adorne your locks and make your name eternal\n t'adorne your locks and make yout name eternall\n and with a crownet of hir rayes supernall\n t'adorne your locks and make your name eternal\n t'adorne yout locks and make your name eternall. Goe yee my Canzonets to my deer darling\n deer darling\n goe yee my Canzonets to my deer darling\n to my deer darling\n and with your gentle daintie sweet accentings\n desire hir to vouchsafe these my lamentings\n desire hir to vouchsafe these my lamentings\n and with a crownet\n of hir rayes spernall\n t'adorne your locks and make your name eternall t'adorne your looks and make your name eternall\n and with a crownet\n of hir rayes supernall\n tadorne your locks and make your name etarnall\n t'adorne your locks and make your name eternall.\n\n\n\n\n\nLLM With Tools:\n\n\nCode\nresult_state = run_graph(\n    \"Guess the key of the piece. Explain why you chose the key.\",\n    \"Bach_BWV_0778\",\n    use_tools=True,\n)\n\nprint(result_state[\"answer\"]) \n\n\nScores chosen: ['Bach_BWV_0778']\nThe key of the piece \"Invention No. 7 in E minor\" by Johann Sebastian Bach is E minor. This is confirmed both by the title of the piece itself and the key signature extracted from the MEI file, which indicates E minor. The E minor key is consistent with its baroque context and Bach's typical use of tonality.\n\n\n\n\nCode\nresult_state = run_graph(\n    \"Guess the key of each piece. Explain why you chose each key. Return a table of piece names and keys.\",\n    use_tools=True,\n)\n\nprint(result_state[\"answer\"]) \n\n\nScores chosen: None\nHere is a table of piece names and their corresponding key signatures:\n\n| Piece                                   | Key Signature |\n|-----------------------------------------|---------------|\n| Bach_BWV_0772                           | C major       |\n| Bach_BWV_0778                           | E minor       |\n| Bach_BWV_0786                           | B minor       |\n| Bartok_Mikrokosmos_022                  | A minor       |\n| Bartok_Mikrokosmos_031                  | D minor       |\n| Bartok_Mikrokosmos_104                  | D major       |\n| Morley_1595_01_Go_ye_my_canzonettes     | F major       |\n| Morley_1595_07_Leave_now_mine_eyes      | G minor       |\n| Morley_1595_12_Flora_wilt_thou          | G major       |\n\nThe key signatures for each piece were determined by analyzing the MEI files and extracting the key signature data. This information aligns with the titles of the Bach inventions, which often indicate the key directly, and the descriptive nature of Bartók's \"Wandering through the Keys,\" which indeed explores multiple keys. The key signatures effectively capture the tonal center of each piece.\n\n\nLLM Without Tools:\n\n\nCode\nresult_state = run_graph(\n    \"Guess the key of the piece. Explain why you chose the key.\",\n    \"Bach_BWV_0778\",\n    use_tools=False,\n)\n\nprint(result_state[\"answer\"].content) \n\n\nScores chosen: ['Bach_BWV_0778']\nThe piece \"Invention No. 7 in E minor\" by Johann Sebastian Bach is most likely in the key of E minor, based on several indicators:\n\n1. **Title:** The title itself suggests the key \"E minor.\"\n\n2. **Analyzed Key:** The data indicates that the analyzed key is E minor for both parts of the piece.\n\n3. **Pitch Content and Key Signatures:** The presence of pitches like B4, F#4, and G4, along with a key signature of one sharp, aligns with the notes and key signature typically associated with E minor.\n\n4. **Cadences and Harmonic Progression:** The frequent presence of E, G, B, D#, C# notes acts as a basis for minor harmonic progression signaling towards a tonal center of E minor.\n\nThe combination of these elements substantiates the likelihood that the piece is in E minor.\n\n\n\n\nCode\nresult_state = run_graph(\n    \"Guess the key of each piece. Explain why you chose each key. Return a table of piece names and keys.\",\n    use_tools=False,\n)\n\nprint(result_state[\"answer\"]) \n\n\nScores chosen: None\nHere is a table of piece names along with their corresponding keys:\n\n| Piece Name                                     | Key         |\n|------------------------------------------------|-------------|\n| Bach_BWV_0772 - Invention No. 1 in C major     | C major     |\n| Bach_BWV_0778 - Invention No. 7 in E minor     | e minor     |\n| Bach_BWV_0786 - Invention No. 15 in B minor    | b minor     |\n| Bartok_Mikrokosmos_022 - Imitation and Counterpoint | a minor     |\n| Bartok_Mikrokosmos_031 - Little Dance in Canon Form  | d minor     |\n| Bartok_Mikrokosmos_104 - Wandering through the Keys  | D major     |\n| Morley_1595_01_Go_ye_my_canzonettes            | F major     |\n| Morley_1595_07_Leave_now_mine_eyes             | g minor     |\n| Morley_1595_12_Flora_wilt_thou                 | G major     |\n\nThe keys are determined based on the key signatures extracted from each piece.\n\n\nCorrect Response:\nBoth were correct for all of the pieces.\n\n\n\nLLM With Tools:\n\n\nCode\nresult_state = run_graph(\n    \"Rank all of the pieces by difficulty. Explain your reasoning. List any tools you use.\",\n    use_tools=True,\n)\n\nprint(result_state[\"answer\"]) \n\n\nScores chosen: None\nTo rank the pieces by difficulty, we can begin by considering factors such as the pitch range, complexity of rhythms, note density, harmonic complexity, and counterpoint. Let's analyze these factors:\n\n1. **Pitch Diversity and Density:** Pieces with more diverse and dense pitch usage might be more technically demanding.\n2. **Complexity of Rhythms and Melodies:** More complex rhythms and interweaving melodies can increase difficulty.\n3. **Harmonic and Counterpoint Complexity:** More intricate harmonies and counterpoints can increase the sophistication needed to perform the piece.\n\n### Analysis of the Provided Pieces:\n\n- **Bach's Inventions (BWV 772, 778, 786):**\n  - Bach_BWV_0772 and BWV_0786 involve a wider range of pitches including up to 4 or 5 accidentals, suggesting they use more complex harmonies or modulations, which can be challenging.\n  - BWV_0778 includes frequent modulation and more accidentals, indicating advanced harmonic complexity.\n\n- **Bartók's Mikrokosmos (No. 22, 31, 104):**\n  - No. 104 includes a variety of accidentals and modulations (“wandering through the keys”), which suggests higher complexity in terms of difficulty in maintaining tonal centers.\n  - No. 22 and No. 31 have fewer pitches and accidentals, suggesting relatively simpler harmonic structures.\n\n- **Morley’s Canzonettes:**\n  - Analyze for relatively consistent diatonic structure with fewer accidentals, suggesting simpler harmonic content, but potentially intricate vocal counterpoint.\n\n### Tentative Ranking by Difficulty:\n\n1. **Bach_BWV_0778** - With its complex modulations, it's arguably the most challenging.\n2. **Bach_BWV_0786** - High note count and additional accidentals add to difficulty.\n3. **Bartok_Mikrokosmos_104** - Complexity through key changes and use of accidentals.\n4. **Bach_BWV_0772** - Sufficient complexity through note density and Bach’s intricate counterpoint.\n5. **Morley_1595_01_Go_ye_my_canzonettes** - Moderate part-writing complexity.\n6. **Morley_1595_07_Leave_now_mine_eyes** - Simpler harmonic structure, with some complexity in counterpoint.\n7. **Bartok_Mikrokosmos_022** - Limited range and simpler textures suggest easier complexity level.\n8. **Bartok_Mikrokosmos_031** - Canon form could imply some complexity but simpler than others.\n9. **Morley_1595_12_Flora_wilt_thou** - Simpler harmonic rhythm and part-writing.\n\nThis analysis uses pitch and counterpoint complexity as proxies for difficulty, while acknowledging other performance elements (not analyzed here) such as tempo, articulation, and individual skill may alter practical difficulty.\n\n\nLLM Without Tools:\n\n\nCode\nresult_state = run_graph(\n    \"Rank all of the pieces by difficulty. Explain your reasoning. List any tools you use.\",\n    use_tools=False,\n)\n\nprint(result_state[\"answer\"]) \n\n\nScores chosen: None\nIt seems that the tool to get time signatures didn't return the needed data. Given this limitation, I'll base part of the difficulty ranking on typical baroque and early 20th-century rhythmic complexities associated with the pieces' styles, along with the known analyses.\n\n### Difficulty Ranking:\n\n1. **Bach's Inventions (Challenging due to contrapuntal complexity)**\n   - **Most Difficult**: BWV 0786 (B minor) - The minor key with more accidentals adds complexity.\n   - **Moderate**: BWV 0778 (E minor) - Also a minor piece, typically a slight reduction in difficulty.\n   - **Simplest**: BWV 0772 (C major) - No sharps/flats, structurally less complex.\n\n2. **Bartók's Mikrokosmos (Each piece emphasizes specific technical skills)**\n   - **Most Difficult**: No. 104 (D major) - Complex key changes give it more challenge.\n   - **Moderate**: No. 31 (D minor) - Likely focuses on specific patterns or rhythmic elements beyond the key challenge.\n   - **Simplest**: No. 22 (A minor) - A key focus might be imitation in a more straightforward setting.\n\n3. **Morley’s Canzonettes (Simpler, melodious pieces)**\n   - **Most Difficult**: Leave now mine eyes (G minor) - The key may introduce slight complexity.\n   - **Moderate**: Flora wilt thou (G major) - A larger mix of different pitches.\n   - **Simplest**: Go ye my canzonettes (F major) - Simpler harmonic structure.\n\nIn this ranking, the overall structural and stylistic elements, coupled with key signature challenges, dictated the perceived difficulty. Without access to exact rhythmic indicators, this is a hypothetical assessment based on typical characteristics of compositions from these composers and eras.\n\n\nThere is not “correct” answer for this, but it’s interesting to see the paths that it takes. It gets much more specific when run with the tools, listing each individual piece. The non-tools groups by composer. Both, for the most part, seem to agree with each other.\n\n\n\n\n\nCode\nresult = loadXML(r\"C:\\Users\\charl\\Downloads\\CRIM_Model_0001.mei\").page_content\n\nanswer = llm.invoke(\n    f\"\"\"Question: Find and explain any instances of Musica Ficta in this piece. \n    Context: \n    {result[0:50_000]}\n    \n    \"\"\"\n)\n\nprint(answer.content)\n\n\nMusica ficta refers to the practice in medieval and Renaissance music of adding accidentals or altering pitches that are not notated in the musical score. This was done primarily to avoid dissonance and to create smoother melodic lines or better cadential progressions.\n\nIn the provided piece \"Veni speciosam\" by Johannes Lupi, instances of musica ficta may occur where you see alterations not explicitly written in the notation but implied based on the rules of counterpoint and performance practice of the period. A typical scenario where musica ficta might be applied is at cadences, where performers might raise the leading tone or alter pitches to facilitate smoother voice leading.\n\nFrom the given XML (Music Encoding Initiative) data, we can observe some pitches marked with accidentals (e.g., `&lt;accid xml:id=\"m-151\" accid.ges=\"f\"/&gt;`), indicating that the editor has applied these alterations, potentially following the practice of musica ficta. An example can be found in measures 4 through 7, where many `b` notes are marked with a flat accidental to avoid the tritone with the `f` note in F major or to create a smoother melodic line descending from `b` to `a`.\n\nAnother approach to applying musica ficta would be at cadential points. For instance, raising a leading tone in a minor key to better resolve at a cadence—the G in F major could be raised to avoid a diminished interval with the D (making it a G#) or to lead smoothly into an A.\n\nIt's important to remember that musica ficta is often based on performer discretion, historical context, and stylistic judgment, rather than explicit notations in the score. Hence, while not everything applied in the XML denotes musica ficta, the adjustments serve the same purpose of altering pitch for smoother harmonic progression, according to Renaissance performance practice.\n\n\n\n\n\n\nThe LLM’s did surprisingly well on a majority of the queries, with or without tools. Several queries, however, such as returning tabular data, showed much higher accuracy when tools were used.\nIn all, the LLM performed with 100% accuracy (6/6) with access to relevant tools - music21 functions in this case. The LLM without tools performed with about 80% accuracy (4/5) - still a solid number considering it only struggled with counting massive numbers of notes.\nThus, gpt-4o had over 90% accuracy when performing relatively complex analysis of MEI and JSON data. This figure is impressive in itself, but becomes even more impressive when noting its flawless performance when it’s able to simulate the results with code."
  },
  {
    "objectID": "Music Analysis/music_analysis_revised.html#goals",
    "href": "Music Analysis/music_analysis_revised.html#goals",
    "title": "Using Large Language Models to Analyze Music as MEI and JSON",
    "section": "",
    "text": "In this notebook, we will be using LangChain and OpenAI to evaluate a Large Language Model’s (LLM’s) ability to analyze music. To do this, we will be exploring the LLM’s capabilities by touching on each of the following concepts:\n\nGet Tabular Data from MEI (Music Encoding Initiative). We sort of know it can already do this: returning tables of all the notes in each voice part. Can it do so also with the octave information? Same thing for durations. Then I suppose we might ask it to calculate things, like the range of a piece, or the distribution of notes. See subsequent ideas about finding ‘pieces with similar distributions to this one’.\n\nWork with metadata in the MEI files. Tell us something about which ones are most similar in terms of sources, editors, composers. A structured output, I suppose, like a database of pieces based on metadata in them.\n\nGet Text from MEI and Recreate It. Lyrics are also elements in MEI (and MusicXML) of course they are distributed among different vocal lines in the case of Renaissance music, and there are lots of word repetitions. Could we recover the text and then use LLM to put into shape (as a rhymed poem, or something like that?). Could they LLM use the placement of rests as a way to understand the form?\n\nCould it Guess the Key. of a piece from the distribution or proportion of pitches? What would it need to know from us in order to do this? Could it tell us which pieces are the least tonal, or least easy to rank by key? Can it tell us if a piece changes key along the way? (Hint: not using key signature directly).\n\nRank Pieces by Difficulty. Things with lots of changes of direction, or wide leaps, or difficult rhythms, etc. The Bartok pieces are in fact pedagogical (and even in order).\nExtract editorial feature data from files. this would involve both editorial and music feature data. The CRIM files (and lots of other MEI files of early music) have things like Musica Ficta in them. These are editorial accidentals applied according to various rules of counterpoint. Could the tool tell us about where these appear, which composers and editors make use of them? Could it also produced some structured data for this, like a report or table?\n\nDuring these tests, we are using a sample of 9 mei files:\n\nInvention No. 1 in C major - Bach, Johann Sebastian\nInvention No. 7 in E minor - Bach, Johann Sebastian\nInvention No. 15 in B minor - Bach, Johann Sebastian\nMikrokosmos No. 22: Imitation and Counterpoint - Bartók, Béla\nMikrokosmos No. 31: Little Dance in Canon Form - Bartók, Béla\nMikrokosmos No. 104: Wandering through the Keys - Bartók, Béla\nGo ye my canzonettes - Morley, Thomas\nLeave now mine eyes - Morley, Thomas\nFlora wilt thou - Morley, Thomas\n\nFor the LLM with tools, we feed the LLM a basic dictionary with the title, composer, filepath, and number of parts. It then can use the filepath (after some manual parsing) to run Music21.\nFor the llm without tools, we saved extended summary information as a JSON file. This JSON includes basic metadata, all of the pitches and intervals for each part, and the key.\nAll of the LLM music analysis in this experiment uses gpt-4o by OpenAI."
  },
  {
    "objectID": "Music Analysis/music_analysis_revised.html#setup-code",
    "href": "Music Analysis/music_analysis_revised.html#setup-code",
    "title": "Using Large Language Models to Analyze Music as MEI and JSON",
    "section": "",
    "text": "Code\n# Standard library imports\nimport ast\nimport getpass\nimport io\nimport json\nimport os\nimport re\nfrom collections import Counter\nfrom pathlib import Path\nimport xml.etree.ElementTree as ET\n\n# Third-party imports\nimport pandas as pd\nfrom music21 import converter, metadata, note\n\nfrom typing import List, Optional, Union\nfrom typing_extensions import TypedDict\n\nfrom langchain.agents import initialize_agent, AgentType\nfrom langchain.chat_models import init_chat_model\nfrom langchain_core.documents import Document\nfrom langchain_core.prompts import ChatPromptTemplate\nfrom langchain.tools import tool\n\nfrom langchain_community.document_loaders import TextLoader\nfrom langchain_experimental.tools.python.tool import PythonREPLTool\n\nfrom langgraph.graph import START, StateGraph\n\n\n\n\nCode\n# Extract titles from all MEI files in the specified directory\nmei_dir = Path(\"MEI Sample\")\nmei_titles = []\nmei_composers = []\n\nfor file in mei_dir.glob(\"*.mei\"):\n    try:\n        tree = ET.parse(file)\n        root = tree.getroot()\n        ns = {'mei': 'http://www.music-encoding.org/ns/mei'}\n        # Try &lt;workList&gt;/&lt;work&gt;/&lt;title&gt;\n        title = root.find('.//mei:workList/mei:work/mei:title', ns)\n        if title is None:\n            # fallback to &lt;fileDesc&gt;/&lt;titleStmt&gt;/&lt;title&gt;\n            title = root.find('.//mei:fileDesc/mei:titleStmt/mei:title', ns)\n        title_text = title.text.strip() if title is not None else \"Unknown Title\"\n        mei_titles.append(title_text)\n\n        # Try &lt;workList&gt;/&lt;work&gt;/&lt;composer&gt;\n        composer = root.find('.//mei:workList/mei:work/mei:composer', ns)\n        if composer is None:\n            # fallback to &lt;persName role=\"composer\"&gt;\n            composer = root.find('.//mei:persName[@role=\"composer\"]', ns)\n        composer_text = composer.text.strip() if composer is not None else \"Unknown Composer\"\n        mei_composers.append(composer_text)\n    except Exception as e:\n        mei_titles.append(\"Unknown Title\")\n        mei_composers.append(\"Unknown Composer\")\n\nfor i,title in enumerate(mei_titles):\n    print(f\"{title} - {mei_composers[i]}\")\n\n\nInvention No. 1 in C major - Bach, Johann Sebastian\nInvention No. 7 in E minor - Bach, Johann Sebastian\nInvention No. 15 in B minor - Bach, Johann Sebastian\nMikrokosmos No. 22: Imitation and Counterpoint - Bartók, Béla\nMikrokosmos No. 31: Little Dance in Canon Form - Bartók, Béla\nMikrokosmos No. 104: Wandering through the Keys - Bartók, Béla\nGo ye my canzonettes - Morley, Thomas\nLeave now mine eyes - Morley, Thomas\nFlora wilt thou - Morley, Thomas\n\n\n\n\n\n\n\nCode\n# Load the 9 sample documents as XML\n\n\ndef loadXML(filepath: str):\n    loader = TextLoader(filepath)\n    pages = loader.load()\n    doc: Document = Document(page_content=\"\", metadata=pages[0].metadata)\n    for page in pages:\n        doc.page_content += page.page_content\n    return doc\n\n\ndirectory = Path(\"MEI Sample\")\nfile_paths = [str(file) for file in directory.iterdir() if file.is_file()]\ndocs: List[Document] = []\nfor file in file_paths:\n    docs.append(loadXML(file))\n\n\n\n\nCode\n# Convert to a music21 dict\n\ndef extract_title_composer_from_mei(filepath):\n    try:\n        tree = ET.parse(filepath)\n        root = tree.getroot()\n        ns = {'mei': 'http://www.music-encoding.org/ns/mei'}\n\n        # Try &lt;workList&gt;/&lt;work&gt;/&lt;title&gt;\n        title = root.find('.//mei:workList/mei:work/mei:title', ns)\n        if title is None:\n            # fallback to &lt;fileDesc&gt;/&lt;titleStmt&gt;/&lt;title&gt;\n            title = root.find('.//mei:fileDesc/mei:titleStmt/mei:title', ns)\n        title_text = title.text.strip() if title is not None else \"Unknown Title\"\n\n        # Try &lt;workList&gt;/&lt;work&gt;/&lt;composer&gt;\n        composer = root.find('.//mei:workList/mei:work/mei:composer', ns)\n        if composer is None:\n            # fallback to &lt;persName role=\"composer\"&gt;\n            composer = root.find('.//mei:persName[@role=\"composer\"]', ns)\n        composer_text = composer.text.strip() if composer is not None else \"Unknown Composer\"\n\n        return title_text, composer_text\n\n    except Exception as e:\n        return \"Unknown Title\", \"Unknown Composer\"\n\ndef musicxml_to_summary_dict(filepath):\n    try:\n        score = converter.parse(filepath)\n    except Exception as e:\n        return {\"error\": f\"Failed to parse file: {e}\"}\n\n    meta = score.metadata or metadata.Metadata()\n    title, composer = extract_title_composer_from_mei(filepath)\n\n\n    parts: int = 0\n    for part in score.parts:\n        parts +=1\n\n    return {\n        \"title\": title,\n        \"composer\": composer,\n        \"mei_path\": filepath,\n        \"num_parts\": parts,\n    }\n\n\ndirectory = Path(\"MEI Sample\")\nsummaries = {}\n\nfor file in directory.glob(\"*.mei\"):\n    print(f\"Processing {file.name}...\")\n    summary = musicxml_to_summary_dict(str(file))\n    summaries[file.stem] = summary\n\n\nProcessing Bach_BWV_0772.mei...\nProcessing Bach_BWV_0778.mei...\nProcessing Bach_BWV_0786.mei...\nProcessing Bartok_Mikrokosmos_022.mei...\nProcessing Bartok_Mikrokosmos_031.mei...\nProcessing Bartok_Mikrokosmos_104.mei...\nProcessing Morley_1595_01_Go_ye_my_canzonettes.mei...\nProcessing Morley_1595_07_Leave_now_mine_eyes.mei...\nProcessing Morley_1595_12_Flora_wilt_thou.mei...\n\n\n\n\n\n\n\nCode\n# Helper functions for tools\ndef parse_context(full_context: str) -&gt; dict:\n    import ast\n    import re\n\n    # If the string includes 'Context:', isolate just the context part\n    if \"Context:\" in full_context:\n        full_context = full_context.split(\"Context:\", 1)[1].strip()\n\n    pattern = r\"Piece:\\s*(\\S+)\\n(.*?)(?=\\nPiece:|\\Z)\"\n    matches = re.findall(pattern, full_context, re.DOTALL)\n\n    context_dict = {}\n    for piece_name, dict_str in matches:\n        try:\n            context_dict[piece_name.strip()] = ast.literal_eval(dict_str.strip())\n        except Exception as e:\n            raise ValueError(f\"Failed to parse piece '{piece_name}': {e}\")\n\n    return context_dict\n\ndef count_notes_for_piece(filepath: str, pitch_with_octave: bool) -&gt; Counter:\n    score = converter.parse(filepath)\n    notes = [\n        n.nameWithOctave if pitch_with_octave else n.name\n        for n in score.recurse().notes\n        if isinstance(n, note.Note)\n    ]\n    return Counter(notes)\n\ndef extract_mei_metadata(filepath: str) -&gt; dict:\n\n    \"\"\"\n    Extracts detailed metadata from an MEI file, including:\n    - Title\n    - Composer\n    - Editors (mei, xml, analyst)\n    - Publication date\n    - Application used to encode\n    - Availability statement\n    - Work title\n    \"\"\"\n    ns = {'mei': 'http://www.music-encoding.org/ns/mei'}\n    tree = ET.parse(filepath)\n    root = tree.getroot()\n    \n    metadata = {\n        'title': None,\n        'composer': None,\n        'mei_editors': [],\n        'xml_editors': [],\n        'analysts': [],\n        'publication_date': None,\n        'availability': None,\n        'application': None,\n        'work_title': None\n    }\n\n    # Title\n    title = root.find('.//mei:titleStmt/mei:title', ns)\n    if title is not None:\n        metadata['title'] = title.text.strip()\n\n    # People with roles\n    people = root.findall('.//mei:titleStmt/mei:respStmt/mei:persName', ns)\n    for person in people:\n        role = person.attrib.get('role', '').lower()\n        name = person.text.strip()\n        if role == 'composer':\n            metadata['composer'] = name\n        elif role == 'mei_editor':\n            metadata['mei_editors'].append(name)\n        elif role == 'xml_editor':\n            metadata['xml_editors'].append(name)\n        elif role == 'analyst':\n            metadata['analysts'].append(name)\n\n    # Publication date\n    date = root.find('.//mei:pubStmt/mei:date', ns)\n    if date is not None:\n        metadata['publication_date'] = date.attrib.get('isodate', None)\n\n    # Availability / copyright\n    availability = root.find('.//mei:pubStmt/mei:availability', ns)\n    if availability is not None:\n        metadata['availability'] = availability.text.strip()\n\n    # Application name\n    app = root.find('.//mei:appInfo/mei:application/mei:name', ns)\n    if app is not None:\n        metadata['application'] = app.text.strip()\n\n    # Work title\n    work_title = root.find('.//mei:workList/mei:work/mei:title', ns)\n    if work_title is not None:\n        metadata['work_title'] = work_title.text.strip()\n\n    return metadata\n\ndef get_key_signature(filepath: str) -&gt; str:\n    score = converter.parse(filepath)\n    key = score.analyze('key')\n    return str(key)\n\ndef get_time_signature(filepath: str) -&gt; str:\n    \"\"\"Returns the first time signature of the piece.\"\"\"\n    score = converter.parse(filepath)\n    ts = score.recurse().getElementsByClass('TimeSignature')[0]\n    return str(ts)\n\ndef get_pitch_histogram(filepath: str) -&gt; dict:\n    \"\"\"Returns a histogram of pitches in the score.\"\"\"\n    score = converter.parse(filepath)\n    return score.plot('histogram', 'pitch', returnDict=True)\n\n\n\n\nCode\n# Tools!\n\n@tool\ndef tool_count_notes(full_context: str, pitch_with_octave: bool = True) -&gt; str:\n    \"\"\"\n    Returns pitch count tables grouped by piece, using the 'mei_path' field in the score dictionary.\n    \"\"\"\n    try:\n        full_data = parse_context(full_context)\n        output_sections = []\n        log_lines = []\n\n        for piece_name, data in full_data.items():\n            filepath = data.get(\"mei_path\")\n            if not filepath:\n                output_sections.append(f\"Piece: {piece_name}\\nError: 'mei_path' not found.\\n\")\n                continue\n\n            counts = count_notes_for_piece(filepath, pitch_with_octave)\n            if not counts:\n                output_sections.append(f\"Piece: {piece_name}\\nNo notes found in the score.\\n\")\n                continue\n\n            df = pd.DataFrame(counts.items(), columns=[\"Pitch\", \"Count\"])\n            df = df.sort_values(\"Pitch\").reset_index(drop=True)\n\n            section = f\"Piece: {piece_name}\\n{df.to_string(index=False)}\\n\"\n            output_sections.append(section)\n\n            log_lines.append(f\"Processed {piece_name} - MEI path: {filepath}\")\n\n        with open(\"debug_output.txt\", \"a\") as f:\n            f.write(\"Parsed context keys: {}\\n\".format(', '.join(full_data.keys())))\n            for line in log_lines:\n                f.write(line + \"\\n\")\n\n        return \"\\n\".join(output_sections).strip()\n\n    except Exception as e:\n        return f\"count_notes failed: {e}\"\n    \n@tool\ndef tool_get_full_metadata(full_context: str):\n    \"\"\"\n    Extracts detailed metadata from an MEI file, including:\n    - Title\n    - Composer\n    - Editors (mei, xml, analyst)\n    - Publication date\n    - Application used to encode\n    - Availability statement\n    - Work title\n    \"\"\"\n    try:\n        full_data = parse_context(full_context)\n        filepaths = []\n        metadata_summaries = []\n        for piece_name, data in full_data.items():\n            filepath = data.get(\"mei_path\")\n            if filepath:\n                filepaths.append(filepath)\n            else:\n                metadata_summaries.append({\"error\": f\"No 'mei_path' for {piece_name}\"})\n        \n        for filepath in filepaths:\n            metadata_summaries.append(\n                extract_mei_metadata(filepath)\n            )\n        return metadata_summaries\n\n    except Exception as e:\n        return f\"get_full_metadata failed: {e}\"\n    \n@tool\ndef tool_get_key_signature(full_context: str):\n    \"\"\"\n    Returns the key signature of each piece in the full context.\n    \"\"\"\n    try:\n        full_data = parse_context(full_context)\n        output_sections = []\n\n        for piece_name, data in full_data.items():\n            filepath = data.get(\"mei_path\")\n            if not filepath:\n                output_sections.append(f\"Piece: {piece_name}\\nError: 'mei_path' not found.\\n\")\n                continue\n\n            key_signature = get_key_signature(filepath)\n            output_sections.append(f\"Piece: {piece_name}\\nKey Signature: {key_signature}\\n\")\n\n        return \"\\n\".join(output_sections).strip()\n\n    except Exception as e:\n        return f\"get_key_signature failed: {e}\"\n    \n@tool\ndef tool_get_time_signature(full_context: str):\n    \"\"\"\n    Returns the time signature of each piece in the full context.\n    \"\"\"\n    try:\n        full_data = parse_context(full_context)\n        output_sections = []\n\n        for piece_name, data in full_data.items():\n            filepath = data.get(\"mei_path\")\n            if not filepath:\n                output_sections.append(f\"Piece: {piece_name}\\nError: 'mei_path' not found.\\n\")\n                continue\n\n            time_signature = get_time_signature(filepath)\n            output_sections.append(f\"Piece: {piece_name}\\nTime Signature: {time_signature}\\n\")\n\n        return \"\\n\".join(output_sections).strip()\n\n    except Exception as e:\n        return f\"get_time_signature failed: {e}\"\n\n@tool\ndef tool_get_pitch_histogram(full_context: str):\n    \"\"\"\n    Returns a histogram of pitches for each piece in the full context.\n    \"\"\"\n    try:\n        full_data = parse_context(full_context)\n        output_sections = []\n\n        for piece_name, data in full_data.items():\n            filepath = data.get(\"mei_path\")\n            if not filepath:\n                output_sections.append(f\"Piece: {piece_name}\\nError: 'mei_path' not found.\\n\")\n                continue\n\n            histogram = get_pitch_histogram(filepath)\n            output_sections.append(f\"Piece: {piece_name}\\nPitch Histogram: {histogram}\\n\")\n\n        return \"\\n\".join(output_sections).strip()\n\n    except Exception as e:\n        return f\"get_pitch_histogram failed: {e}\"\n    \n@tool \ndef get_notes(full_context: str):\n    \"\"\"\n    Returns a list of notes for each piece in the full context.\n    \"\"\"\n    try:\n        full_data = parse_context(full_context)\n        output_sections = []\n\n        for piece_name, data in full_data.items():\n            filepath = data.get(\"mei_path\")\n            if not filepath:\n                output_sections.append(f\"Piece: {piece_name}\\nError: 'mei_path' not found.\\n\")\n                continue\n\n            score = converter.parse(filepath)\n            notes = [n.nameWithOctave for n in score.recurse().notes if isinstance(n, note.Note)]\n            output_sections.append(f\"Piece: {piece_name}\\nNotes: {', '.join(notes)}\\n\")\n\n        return \"\\n\".join(output_sections).strip()\n\n    except Exception as e:\n        return f\"get_notes failed: {e}\"\n    \n@tool\ndef get_lyrics(full_context: str):\n    \"\"\"\n    Returns the lyrics for each piece in the full context.\n    \"\"\"\n    try:\n        full_data = parse_context(full_context)\n        output_sections = []\n\n        for piece_name, data in full_data.items():\n            filepath = data.get(\"mei_path\")\n            if not filepath:\n                output_sections.append(f\"Piece: {piece_name}\\nError: 'mei_path' not found.\\n\")\n                continue\n\n            score = converter.parse(filepath)\n            lyrics = []\n            for n in score.recurse().notes:\n                if isinstance(n, note.Note) and n.lyrics:\n                    lyrics.append(n.lyrics[0].text)\n\n            output_sections.append(f\"Piece: {piece_name}\\nLyrics: {', '.join(lyrics)}\\n\")\n\n        return \"\\n\".join(output_sections).strip()\n\n    except Exception as e:\n        return f\"get_lyrics failed: {e}\"\n\n# AI Setup\ntools = [\n    tool_count_notes,\n    tool_get_full_metadata,\n    tool_get_key_signature,\n    tool_get_time_signature,\n    tool_get_pitch_histogram,\n    get_notes,\n    get_lyrics,\n    PythonREPLTool()\n]\n\n\n\n\n\n\n\nCode\n\nif not os.environ.get(\"OPENAI_API_KEY\"):\n  os.environ[\"OPENAI_API_KEY\"] = getpass.getpass(\"Enter API key for OpenAI: \")\n\nllm = init_chat_model(\"gpt-4o\", model_provider=\"openai\")\nllm_mini = init_chat_model(\"gpt-4o-mini\", model_provider=\"openai\")\n\nagent = initialize_agent(\n    tools=tools,             # your local tool functions like count_notes\n    llm=llm,                 # your ChatOpenAI or init_chat_model(...)\n    agent=AgentType.OPENAI_FUNCTIONS,\n    verbose=False,\n)\n# Detailed data for w/o tools\nwith open(\"music_summaries.json\", \"r\") as f:\n    all_scores = json.load(f)\n\n# Main template for the chat prompt\ntemplate = ChatPromptTemplate([\n    (\"system\", \"\"\"You are an expert on music analysis. \nYou are analyzing two-part scores using tools. \nYou are going to be given various scores as `context`. When a tool calls for `full_context`,\ninput all of the text from the human question and context.\nOnly use the information provided in `data`. If you have uncertainty, express it. If you use a tool and it gives you an exception or error, include the exception or error in your response.\"\"\"),\n    \n    (\"human\", \"Question: {question}\\n\\nContext:\\n{context}\")\n])\n\n# Secondary template for choosing relevant score names\nsecondary_template = ChatPromptTemplate([\n    (\"system\", \"Your job is to choose the relevant score names from the provided context based on the question. The score names are the keys in the full context dictionary. For example, 'Bach_BWV_0772' is a score name. You are to return each relevant score name with a comma between each name and no spaces. If you see no relevant score names, return an empty string.\"),\n    (\"human\", \"Question: {question}\\n\\nContext:\\n{context}\\n\\nPlease return the relevant score names as a comma-separated list without spaces.\")\n])\n\nclass State(TypedDict):\n    question: str\n    context: dict\n    answer: str\n    score_name: Optional[list[str]] = None\n    use_tools: Optional[bool] = True\n\ndef llm_filter(state: State):\n    \"\"\"\n    If no score_name list was supplied, ask gpt‑4o‑mini to guess the relevant pieces.\n    \"\"\"\n    # ── 1. Maybe fill in score_name ────────────────────────────────\n    if not state[\"score_name\"]:\n        prompt = secondary_template.invoke({\n            \"question\": state[\"question\"],\n            \"context\": state[\"context\"],\n        })\n\n        resp = llm_mini.invoke(prompt)          # ← AIMessage\n        text = (\n            resp[\"output\"]                      # dict path (rare)\n            if isinstance(resp, dict)\n            else resp.content                   # AIMessage path (common)\n        )\n        names = [n.strip() for n in text.split(\",\") if n.strip()]\n        state[\"score_name\"] = names or None\n\n    # ── 2. Fallback when nothing found ─────────────────────────────\n    if not state[\"score_name\"]:\n        state[\"use_tools\"] = True               # cheaper / safer path\n\n    # ── 3. MUST return the keys we changed ─────────────────────────\n    return {\n        \"score_name\": state[\"score_name\"],\n        \"use_tools\":  state[\"use_tools\"],\n    }\n\n\ndef retrieve(state: State):\n    print(f\"Scores chosen: {state['score_name']}\")\n    data_source = summaries if state[\"use_tools\"] else all_scores\n    selected_scores = state[\"score_name\"]\n\n    if selected_scores:\n        pieces = ((name, data_source[name]) for name in selected_scores if name in data_source)\n    else:\n        pieces = data_source.items()\n\n    context = \"\\n\".join(f\"Piece: {name}\\n{data}\" for name, data in pieces)\n    state[\"context\"] = context\n    return {\"context\": context}\n\n\ndef ask_llm(state: State):\n    if state[\"use_tools\"]:\n        return ask_llm_tools(state)\n    else:\n        return ask_llm_no_tools(state)\n\ndef ask_llm_tools(state: State):\n    prompt = template.invoke(\n        {\"question\": state[\"question\"], \"context\": state[\"context\"]}\n    )\n\n    # OpenAIFunctions agent usually returns {\"output\": \"...\"}\n    response = agent.invoke({\"input\": prompt})\n    answer_text = (\n        response[\"output\"] if isinstance(response, dict) else response\n    )\n\n    # Return a partial‑state update\n    return {\"answer\": answer_text}\n\n\ndef ask_llm_no_tools(state: State):\n    prompt = template.invoke(\n        {\"question\": state[\"question\"], \"context\": state[\"context\"]}\n    )\n    response = llm.invoke(prompt)\n    answer_text = (\n        response[\"output\"] if isinstance(response, dict) else response\n    )\n    return {\"answer\": answer_text}\n\n\ngraph_builder = StateGraph(State).add_sequence([llm_filter, retrieve, ask_llm])\ngraph_builder.add_edge(START, \"llm_filter\")\ngraph = graph_builder.compile()\n\ndef run_graph(question: str, score_names: Optional[Union[str, list[str]]] = None, use_tools: Optional[bool] = True):\n    if isinstance(score_names, str):\n        score_names = [score_names]\n\n    return graph.invoke({\n        \"question\": question,\n        \"score_name\": score_names,\n        \"use_tools\": use_tools,\n        \"context\": {},\n        \"answer\": \"\"\n    })"
  },
  {
    "objectID": "Music Analysis/music_analysis_revised.html#process-graph",
    "href": "Music Analysis/music_analysis_revised.html#process-graph",
    "title": "Using Large Language Models to Analyze Music as MEI and JSON",
    "section": "",
    "text": "graph TD\nA[Submit Question, Optional Piece Names, Use tools default yes] --&gt; B{Has piece name?}\nB --&gt;|NO| C[LLM picks relevant documents]\nC --&gt; D[Retrieve documents by filtering the dictionary]\nB --&gt;|YES| D\nD --&gt; E{Use Tools?}\nE --&gt;|NO| F[use detailed json data]\nF --&gt; G[Ask LLM]\nE --&gt;|YES| H[Use summary dict text]\nH --&gt; I[Convert text to dict object]\nI --&gt; J[Use tools]\nJ --&gt; K[Pull full MEI/XML from dict filepath]\nK --&gt; L[Use full MEI with Music21 or CRIM tools]\nL --&gt; M[Return response]\nG --&gt; M"
  },
  {
    "objectID": "Music Analysis/music_analysis_revised.html#queries",
    "href": "Music Analysis/music_analysis_revised.html#queries",
    "title": "Using Large Language Models to Analyze Music as MEI and JSON",
    "section": "",
    "text": "LLM With Tools:\n\n\nCode\nresult_state = run_graph(\n    \"Return tabular data on the following piece of music. That is, return a table of how many of each notes there is throughout the piece.\",\n    \"Bach_BWV_0772\",\n    use_tools=True,\n)\n\nprint(result_state[\"answer\"]) \n\n\nScores chosen: ['Bach_BWV_0772']\nHere is the tabular data for the piece \"Invention No. 1 in C major\" by Johann Sebastian Bach:\n\n| Pitch | Count |\n|-------|-------|\n| A2    | 3     |\n| A3    | 21    |\n| A4    | 28    |\n| A5    | 10    |\n| B-3   | 4     |\n| B-4   | 4     |\n| B2    | 4     |\n| B3    | 19    |\n| B4    | 26    |\n| B5    | 3     |\n| C#4   | 1     |\n| C#5   | 3     |\n| C2    | 1     |\n| C3    | 6     |\n| C4    | 25    |\n| C5    | 29    |\n| C6    | 2     |\n| D2    | 1     |\n| D3    | 13    |\n| D4    | 25    |\n| D5    | 32    |\n| E3    | 16    |\n| E4    | 25    |\n| E5    | 27    |\n| F#3   | 8     |\n| F#4   | 7     |\n| F3    | 6     |\n| F4    | 17    |\n| F5    | 24    |\n| G#3   | 2     |\n| G#4   | 4     |\n| G#5   | 1     |\n| G2    | 4     |\n| G3    | 18    |\n| G4    | 24    |\n| G5    | 20    |\n\n\nLLM Without Tools:\n\n\nCode\nresult_state = run_graph(\n    \"Return tabular data on the following piece of music. That is, return a table of how many of each notes there is throughout the piece. Sort by note name (all the A's first, this the B's, etc.)\",\n    \"Bach_BWV_0772\",\n    use_tools=False,\n)\n\nprint(result_state[\"answer\"].content) \n\n\nScores chosen: ['Bach_BWV_0772']\nBased on the data provided, the pitches from both parts can be tabulated as follows, sorted by note name:\n\n| Note | Frequency |\n|------|-----------|\n| A2   | 2         |\n| A3   | 12        |\n| A4   | 15        |\n| A5   | 4         |\n| B-3  | 5         |\n| B-4  | 3         |\n| B2   | 3         |\n| B3   | 19        |\n| B4   | 16        |\n| B5   | 2         |\n| C2   | 1         |\n| C3   | 11        |\n| C4   | 18        |\n| C5   | 18        |\n| C6   | 2         |\n| C#4  | 1         |\n| C#5  | 2         |\n| D2   | 2         |\n| D3   | 12        |\n| D4   | 20        |\n| D5   | 18        |\n| E3   | 13        |\n| E4   | 19        |\n| E5   | 12        |\n| F3   | 4         |\n| F4   | 14        |\n| F5   | 11        |\n| F#3  | 6         |\n| F#4  | 5         |\n| G2   | 2         |\n| G3   | 15        |\n| G4   | 22        |\n| G5   | 12        |\n| G#3  | 2         |\n| G#4  | 3         |\n| G#5  | 1         |\n\nThis table summarizes the frequency of each note across the two parts of Bach's Invention No. 1 in C major, sorted by note name.\n\n\nCorrect Response:\n\n\nCode\ndef count_notes(filepath, pitch_with_octave=True):\n    \"\"\"\n    Count the number of times each pitch appears in a score.\n    \n    Args:\n        filepath (str): Path to the MEI/MusicXML file.\n        pitch_with_octave (bool): If True, include octave (e.g., 'C4'); else use pitch class (e.g., 'C').\n    \n    Returns:\n        pd.DataFrame: A table showing pitch and count.\n    \"\"\"\n    score = converter.parse(filepath)\n    all_notes = []\n\n    for n in score.recurse().notes:\n        if isinstance(n, note.Note):\n            if pitch_with_octave:\n                all_notes.append(n.nameWithOctave)\n            else:\n                all_notes.append(n.name)\n\n    counts = Counter(all_notes)\n    df = pd.DataFrame(counts.items(), columns=[\"Pitch\", \"Count\"])\n    df = df.sort_values(\"Pitch\").reset_index(drop=True)\n    return df\n\ncount_notes(\"MEI Sample/Bach_BWV_0772.mei\")\n\n\n\n\n\n\n\n\n\nPitch\nCount\n\n\n\n\n0\nA2\n3\n\n\n1\nA3\n21\n\n\n2\nA4\n28\n\n\n3\nA5\n10\n\n\n4\nB-3\n4\n\n\n5\nB-4\n4\n\n\n6\nB2\n4\n\n\n7\nB3\n19\n\n\n8\nB4\n26\n\n\n9\nB5\n3\n\n\n10\nC#4\n1\n\n\n11\nC#5\n3\n\n\n12\nC2\n1\n\n\n13\nC3\n6\n\n\n14\nC4\n25\n\n\n15\nC5\n29\n\n\n16\nC6\n2\n\n\n17\nD2\n1\n\n\n18\nD3\n13\n\n\n19\nD4\n25\n\n\n20\nD5\n32\n\n\n21\nE3\n16\n\n\n22\nE4\n25\n\n\n23\nE5\n27\n\n\n24\nF#3\n8\n\n\n25\nF#4\n7\n\n\n26\nF3\n6\n\n\n27\nF4\n17\n\n\n28\nF5\n24\n\n\n29\nG#3\n2\n\n\n30\nG#4\n4\n\n\n31\nG#5\n1\n\n\n32\nG2\n4\n\n\n33\nG3\n18\n\n\n34\nG4\n24\n\n\n35\nG5\n20\n\n\n\n\n\n\n\n\n\n\nLLM With Tools:\n\n\nCode\nresult_state = run_graph(\n    \"Comparing all of the pieces, tell me about the metadata. That is, which ones are most similar in terms of sources, editors, composers, etc.\"\n)\n\nprint(result_state[\"answer\"]) \n\n\nScores chosen: None\nThe pieces can be grouped in terms of similarity in metadata as follows:\n\n### Bach Inventions\n- **Pieces**: \n  - *Invention No. 1 in C major (BWV 772)*\n  - *Invention No. 7 in E minor (BWV 778)*\n  - *Invention No. 15 in B minor (BWV 786)*\n- **Composer**: Bach, Johann Sebastian\n- **MEI Editors**: Richard Freedman\n- **XML Editors**: Tobias Schölkopf\n- **Analysts**: Varied (This Student, Rowan Shigeno, Holden Starkey)\n- **Publication Date**: 2024-11-19\n- **Application**: MEI Soup Updater 2024\n- **Availability**: Governed by the copyright laws of Germany; requires prior written consent for utilization beyond copyright scope.\n\n### Bartók Mikrokosmos\n- **Pieces**: \n  - *Mikrokosmos No. 22: Imitation and Counterpoint*\n  - *Mikrokosmos No. 31: Little Dance in Canon Form*\n  - *Mikrokosmos No. 104: Wandering through the Keys*\n- **Composer**: Bartók, Béla\n- **MEI Editors**: Richard Freedman\n- **XML Editors**: Pedro Ramoneda\n- **Analysts**: Varied (Kylie McCombs, Maika Kogawara, Holden Starkey)\n- **Publication Date**: 2024-11-19\n- **Application**: MEI Soup Updater 2024\n- **Availability**: Expired copyrights with transcription by Pedro Ramoneda to MusicXML.\n\n### Morley Canzonettes\n- **Pieces**: \n  - *Go ye my canzonettes*\n  - *Leave now mine eyes*\n  - *Flora wilt thou*\n- **Composer**: Morley, Thomas\n- **MEI Editors**: Richard Freedman\n- **XML Editors**: André Vierendeels\n- **Analysts**: Varied (Rohan Sarma, Kylie McCombs, Holden Starkey)\n- **Publication Date**: 2024-11-19\n- **Application**: MEI Soup Updater 2024\n- **Availability**: Available under a Creative Commons 4.0 license.\n\n### Overall Observations\n- All pieces were edited by Richard Freedman for MEI and published using the MEI Soup Updater 2024 tool.\n- The XML editors differ slightly between the groups, with Tobias Schölkopf editing Bach and André Vierendeels editing Morley, while Pedro Ramoneda took care of Bartók.\n- The differences in analysts provide some variation among pieces within the same group but follow a similar trend within each composer's collection.\n- Availability varies primarily by composer group, with Morley’s pieces having a Creative Commons license, whereas Bartók’s are considered expired copyrights. Bach's pieces have the most restrictions, as they adhere strictly to German copyright laws.\n\n\nLLM Without Tools:\n\n\nCode\nresult_state = run_graph(\n    \"Comparing all of the pieces, tell me about the metadata. That is, which ones are most similar in terms of sources, editors, composers, etc.\",\n    use_tools=False,\n)\n\nprint(result_state[\"answer\"]) \n\n\nScores chosen: None\nHere is an analysis of the metadata for the given pieces, highlighting similarities based on sources, editors, composers, etc.:\n\n### Composer\n- **Bach, Johann Sebastian**: Composed the Inventions (BWV 772, BWV 778, BWV 786).\n- **Bartók, Béla**: Composed the Mikrokosmos pieces (Nos. 22, 31, 104).\n- **Morley, Thomas**: Composed the canzonettes (Go ye my canzonettes, Leave now mine eyes, Flora wilt thou).\n\n### Editors\n- **MEI Editor**: Richard Freedman worked on all pieces; common to all the collections (Bach, Bartók, Morley).\n- **XML Editors**:\n  - Tobias Schölkopf edited Bach's works.\n  - Pedro Ramoneda worked on Bartók's works.\n  - André Vierendeels edited Morley's pieces.\n\n### Analysts\n- Bach's pieces have various analysts: This Student, Rowan Shigeno, and Starkey, Holden.\n- Bartók's pieces: Kylie McCombs, Maika Kogawara, and Starkey, Holden.\n- Morley's pieces: Rohan Sarma, Kylie McCombs, and Starkey, Holden.\n\n### Publication Date\n- All pieces apparently have a publication date of November 19, 2024.\n\n### Digital Application\n- All compositions were processed using \"MEI Soup Updater 2024\".\n\n### Availability\n- **Bach's Collection**: Governed by copyright laws of Germany, requiring written consent for use beyond copyright law scope.\n- **Bartók's Collection**: Mentioned as expired copyright editions, with specific transcription handling by Pedro Ramoneda to MusicXML.\n- **Morley's Collection**: Governed under the Creative Commons 4.0 license.\n\n### Summary of Similarities\n- All have the same MEI editor, Richard Freedman, and were processed with the same application.\n- Bach and Bartók's pieces share the common analyst, Starkey, Holden.\n- The pieces across the three composers align in terms of publication date and use of the MEI Soup Updater.\n\nOverall, the analysis highlights consistent handling by Richard Freedman across all pieces in terms of MEI editing and a unified application process. Significant differences are present in terms of composers and XML editors, with variation in analysts across collections.\n\n\nBoth do a great job here! This is to be expected, as it is simply pulling metadata using a tool, or reading it from the dictionary fed to it.\n\n\n\nLLM With Tools:\n\n\nCode\nresult_state = run_graph(\n    \"Find the lyrics in this piece of music.\",\n    \"Morley_1595_01_Go_ye_my_canzonettes\",\n    use_tools=True,\n)\n\nprint(result_state[\"answer\"]) \n\n\nScores chosen: ['Morley_1595_01_Go_ye_my_canzonettes']\nThe lyrics of the piece \"Go ye my canzonettes\" by Thomas Morley are as follows:\n\n```\nGoe yee my Canzonets, to my deer darling,\ngoe yee my Canzonets, to my deer darling,\ngoe yee my Canzonets, to my deer darling,\nto my deer darling,\nand with your gentle daintie sweet accentings,\ndesire hir to vouchsafe these my lamentings,\ndesire hir to vouchsafe these my lamentings,\nand with a crownet, of hir rayes supernall,\nt'adorne your locks and make your name eternal,\nt'adorne your locks and make your name eternal,\nand with a crownet, of hir rayes supernall,\nt'adorne your locks and make your name eternal,\nt'adorne yt locks and make your name eternall.\nGoe yee my Canzonets, to my deer darling,\ndeer darling,\ngoe yee my Canzonets, to my deer darling,\nto my deer darling,\nand with your gentle daintie sweet accentings,\ndesire hir to vouchsafe these my lamentings,\ndesire hir to vouchsafe these my lamentings,\nand with a crownet, of hir rayes spernall,\nt'adorne your locks and make your name eternall\nt'adorne your looks and make your name eternall,\nand with a crownet, of hir rayes supernall,\nta dorne your locks and make your name etarnall,\nt'adorne your locks and make your name eternal.\n```\n\nThe lyrics reflect a sense of sending a message to a dear darling with expressions of adoration and lamentations.\n\n\n\n\nCode\nresult_state = run_graph(\n    \"Find the lyrics for Morley's 'Go ye my canzonettes'.\",\n    use_tools=True,\n)\n\nprint(result_state[\"answer\"]) \n\n\nScores chosen: None\nHere are the lyrics for Thomas Morley's \"Go ye my canzonettes\":\n\n```\nGoe, yee my Canzonets, to my deer darling,\nGoe, yee my Canzonets, to my deer darling,\nGoe, yee my Canzonets, to my deer darling,\nto my deer darling, and with your gentlr dain-tie sweet accentings,\ndesire hir to vouch-safe these my lamentings,\ndesire hir to vouch-safe these my lamentings,\nand with a crownet, of hir rayes supernall,\nt'adore your locks and make your name eternal,\nt'adore your locks and make yout name eternall,\nand with a crownet of hir rayes supernall,\nt'adore your locks and make your name eternal,\nt'adore yout locks and make your name eternall.\n\nGoe, yee my Canzonets, to my deer darling,\ndeer darling, goe, yee my Canzonets, to my deer darling,\nto my deer darling, and with your gentle daintie sweet accentings,\ndesire hir to vouch-safe these my lamentings,\ndesire hir to vouch-safe these my lamentings,\nand with a crownet, of hir rayes spernall,\nt'adore your locks and make your name eternall t'adore your looks and make your name eternall,\nand with a crownet, of hir rayes supernall,\nta'dorne your locks and make your name etarnall,\nt'adore your locks and make your name eternall.\n```\n\nThe lyrics share a repetitive pattern and focus on sending the canzonets to a dear darling with gentle and sweet music.\n\n\nIt’s interesting that the first call corrected one of the instances “eternall” to “eternal”.\nLLM Without Tools:\n\n\nCode\nresult = loadXML(r\"C:/Users/charl/Documents/VSCode/Encoding Music/Music Analysis/MEI Sample/Morley_1595_01_Go_ye_my_canzonettes.mei\").page_content\n\nanswer = llm.invoke(\n    f\"\"\"Question: Find the lyrics for Morley's 'Go ye my canzonettes'. \n    Context: \n    {result}\n    \n    \"\"\"\n)\n\nprint(answer.content)\n\n\nThe lyrics for Thomas Morley's \"Go ye my canzonettes\" are embedded within the provided XML data surrounding the `&lt;verse&gt;` and `&lt;syl&gt;` tags. To extract the lyrics, we can sequentially pull out these tags and assemble the text, which is structured as individual syllables. Here's a transcription of the lyrics based on the given data:\n\n```\nGo ye my canzonets to my deer\nGo ye my canzonets to my deer\nGo ye my canzonets to my deer\nGo ye my canzonets to my deer\nGo ye my canzonets to my deer\nGo ye my canzonets to my deer\nGo ye my canzonets to my deer\nGo ye my canzonets to my deer\nGo ye my canzonets to my deer\nGo ye my canzonets to my deer\n\nDarling, go ye my darling, go ye my darling\nGo ye, my darling\nWith your gentle title\nWith your gentle daintie\nSweet accenings desir hir\nTo vouche safe there my laments\nTo vouche safe there my laments\nTo vouche safe there my laments\nTo vouche safe there my laments\nAnd with a crowne of her rayes supernall\nDorne your locks, make your name\nEternal\nTo adorn your name\nEternal, adorn your locks\n\nAnd with a crowne of her rayes supernall\nDorne your locks, make your name\nEternal, adorn your locks\nAnd with a crowne of her rayes supernall\nDorne your locks, make your name\nEternal\nAnd with a crowne of her rayes supernall\nTo adorn your locks\nAnd mai your name\nEternal\n(nall. nall.)\n```\n\nNote: The lyrical structure might repeat similar lines across stanzas, and the repetition may vary depending on the piece's arrangement. Also, minor variations can occur with repeated sections across the score if they are executed with different vocal or instrumental ornamentations.\n\n\nCorrect Response:\n\n\nCode\nscore = converter.parse(\"MEI Sample/Morley_1595_01_Go_ye_my_canzonettes.mei\")\nlyrics = []\n\nfor n in score.recurse().notes:\n    if isinstance(n, note.Note) and n.lyrics:\n        for lyric in n.lyrics:\n            if lyric.text:\n                cleaned = lyric.text.strip().replace(\"\\n\", \"\").replace(\"\\r\", \"\")\n                lyrics.append(cleaned)\n\nformatted = \" \".join(lyrics)\nformatted = formatted.replace(\" --\", \"-\").replace(\"--\", \"-\")\nformatted = \" \".join(formatted.split())\nformatted = formatted.replace(\",\",\"\\n\")\nformatted = formatted.replace(\" - - \",\"\")\nprint(\"Lyrics:\\n\", formatted)\n\n\nLyrics:\n Goe yee my Canzonets to my deer darling\n goe yee my Canzonets to my deer darling\n goe yee my Canzonets to my deer darling\n to my deer darling\n and with your gentlr daintie sweet accentings\n desire hir to vouchsafe these my lamentings\n desire hir to vouchsafe these my lamentings\n and with a crownet\n of hir rayes supernall\n t'adorne your locks and make your name eternal\n t'adorne your locks and make yout name eternall\n and with a crownet of hir rayes supernall\n t'adorne your locks and make your name eternal\n t'adorne yout locks and make your name eternall. Goe yee my Canzonets to my deer darling\n deer darling\n goe yee my Canzonets to my deer darling\n to my deer darling\n and with your gentle daintie sweet accentings\n desire hir to vouchsafe these my lamentings\n desire hir to vouchsafe these my lamentings\n and with a crownet\n of hir rayes spernall\n t'adorne your locks and make your name eternall t'adorne your looks and make your name eternall\n and with a crownet\n of hir rayes supernall\n tadorne your locks and make your name etarnall\n t'adorne your locks and make your name eternall.\n\n\n\n\n\nLLM With Tools:\n\n\nCode\nresult_state = run_graph(\n    \"Guess the key of the piece. Explain why you chose the key.\",\n    \"Bach_BWV_0778\",\n    use_tools=True,\n)\n\nprint(result_state[\"answer\"]) \n\n\nScores chosen: ['Bach_BWV_0778']\nThe key of the piece \"Invention No. 7 in E minor\" by Johann Sebastian Bach is E minor. This is confirmed both by the title of the piece itself and the key signature extracted from the MEI file, which indicates E minor. The E minor key is consistent with its baroque context and Bach's typical use of tonality.\n\n\n\n\nCode\nresult_state = run_graph(\n    \"Guess the key of each piece. Explain why you chose each key. Return a table of piece names and keys.\",\n    use_tools=True,\n)\n\nprint(result_state[\"answer\"]) \n\n\nScores chosen: None\nHere is a table of piece names and their corresponding key signatures:\n\n| Piece                                   | Key Signature |\n|-----------------------------------------|---------------|\n| Bach_BWV_0772                           | C major       |\n| Bach_BWV_0778                           | E minor       |\n| Bach_BWV_0786                           | B minor       |\n| Bartok_Mikrokosmos_022                  | A minor       |\n| Bartok_Mikrokosmos_031                  | D minor       |\n| Bartok_Mikrokosmos_104                  | D major       |\n| Morley_1595_01_Go_ye_my_canzonettes     | F major       |\n| Morley_1595_07_Leave_now_mine_eyes      | G minor       |\n| Morley_1595_12_Flora_wilt_thou          | G major       |\n\nThe key signatures for each piece were determined by analyzing the MEI files and extracting the key signature data. This information aligns with the titles of the Bach inventions, which often indicate the key directly, and the descriptive nature of Bartók's \"Wandering through the Keys,\" which indeed explores multiple keys. The key signatures effectively capture the tonal center of each piece.\n\n\nLLM Without Tools:\n\n\nCode\nresult_state = run_graph(\n    \"Guess the key of the piece. Explain why you chose the key.\",\n    \"Bach_BWV_0778\",\n    use_tools=False,\n)\n\nprint(result_state[\"answer\"].content) \n\n\nScores chosen: ['Bach_BWV_0778']\nThe piece \"Invention No. 7 in E minor\" by Johann Sebastian Bach is most likely in the key of E minor, based on several indicators:\n\n1. **Title:** The title itself suggests the key \"E minor.\"\n\n2. **Analyzed Key:** The data indicates that the analyzed key is E minor for both parts of the piece.\n\n3. **Pitch Content and Key Signatures:** The presence of pitches like B4, F#4, and G4, along with a key signature of one sharp, aligns with the notes and key signature typically associated with E minor.\n\n4. **Cadences and Harmonic Progression:** The frequent presence of E, G, B, D#, C# notes acts as a basis for minor harmonic progression signaling towards a tonal center of E minor.\n\nThe combination of these elements substantiates the likelihood that the piece is in E minor.\n\n\n\n\nCode\nresult_state = run_graph(\n    \"Guess the key of each piece. Explain why you chose each key. Return a table of piece names and keys.\",\n    use_tools=False,\n)\n\nprint(result_state[\"answer\"]) \n\n\nScores chosen: None\nHere is a table of piece names along with their corresponding keys:\n\n| Piece Name                                     | Key         |\n|------------------------------------------------|-------------|\n| Bach_BWV_0772 - Invention No. 1 in C major     | C major     |\n| Bach_BWV_0778 - Invention No. 7 in E minor     | e minor     |\n| Bach_BWV_0786 - Invention No. 15 in B minor    | b minor     |\n| Bartok_Mikrokosmos_022 - Imitation and Counterpoint | a minor     |\n| Bartok_Mikrokosmos_031 - Little Dance in Canon Form  | d minor     |\n| Bartok_Mikrokosmos_104 - Wandering through the Keys  | D major     |\n| Morley_1595_01_Go_ye_my_canzonettes            | F major     |\n| Morley_1595_07_Leave_now_mine_eyes             | g minor     |\n| Morley_1595_12_Flora_wilt_thou                 | G major     |\n\nThe keys are determined based on the key signatures extracted from each piece.\n\n\nCorrect Response:\nBoth were correct for all of the pieces.\n\n\n\nLLM With Tools:\n\n\nCode\nresult_state = run_graph(\n    \"Rank all of the pieces by difficulty. Explain your reasoning. List any tools you use.\",\n    use_tools=True,\n)\n\nprint(result_state[\"answer\"]) \n\n\nScores chosen: None\nTo rank the pieces by difficulty, we can begin by considering factors such as the pitch range, complexity of rhythms, note density, harmonic complexity, and counterpoint. Let's analyze these factors:\n\n1. **Pitch Diversity and Density:** Pieces with more diverse and dense pitch usage might be more technically demanding.\n2. **Complexity of Rhythms and Melodies:** More complex rhythms and interweaving melodies can increase difficulty.\n3. **Harmonic and Counterpoint Complexity:** More intricate harmonies and counterpoints can increase the sophistication needed to perform the piece.\n\n### Analysis of the Provided Pieces:\n\n- **Bach's Inventions (BWV 772, 778, 786):**\n  - Bach_BWV_0772 and BWV_0786 involve a wider range of pitches including up to 4 or 5 accidentals, suggesting they use more complex harmonies or modulations, which can be challenging.\n  - BWV_0778 includes frequent modulation and more accidentals, indicating advanced harmonic complexity.\n\n- **Bartók's Mikrokosmos (No. 22, 31, 104):**\n  - No. 104 includes a variety of accidentals and modulations (“wandering through the keys”), which suggests higher complexity in terms of difficulty in maintaining tonal centers.\n  - No. 22 and No. 31 have fewer pitches and accidentals, suggesting relatively simpler harmonic structures.\n\n- **Morley’s Canzonettes:**\n  - Analyze for relatively consistent diatonic structure with fewer accidentals, suggesting simpler harmonic content, but potentially intricate vocal counterpoint.\n\n### Tentative Ranking by Difficulty:\n\n1. **Bach_BWV_0778** - With its complex modulations, it's arguably the most challenging.\n2. **Bach_BWV_0786** - High note count and additional accidentals add to difficulty.\n3. **Bartok_Mikrokosmos_104** - Complexity through key changes and use of accidentals.\n4. **Bach_BWV_0772** - Sufficient complexity through note density and Bach’s intricate counterpoint.\n5. **Morley_1595_01_Go_ye_my_canzonettes** - Moderate part-writing complexity.\n6. **Morley_1595_07_Leave_now_mine_eyes** - Simpler harmonic structure, with some complexity in counterpoint.\n7. **Bartok_Mikrokosmos_022** - Limited range and simpler textures suggest easier complexity level.\n8. **Bartok_Mikrokosmos_031** - Canon form could imply some complexity but simpler than others.\n9. **Morley_1595_12_Flora_wilt_thou** - Simpler harmonic rhythm and part-writing.\n\nThis analysis uses pitch and counterpoint complexity as proxies for difficulty, while acknowledging other performance elements (not analyzed here) such as tempo, articulation, and individual skill may alter practical difficulty.\n\n\nLLM Without Tools:\n\n\nCode\nresult_state = run_graph(\n    \"Rank all of the pieces by difficulty. Explain your reasoning. List any tools you use.\",\n    use_tools=False,\n)\n\nprint(result_state[\"answer\"]) \n\n\nScores chosen: None\nIt seems that the tool to get time signatures didn't return the needed data. Given this limitation, I'll base part of the difficulty ranking on typical baroque and early 20th-century rhythmic complexities associated with the pieces' styles, along with the known analyses.\n\n### Difficulty Ranking:\n\n1. **Bach's Inventions (Challenging due to contrapuntal complexity)**\n   - **Most Difficult**: BWV 0786 (B minor) - The minor key with more accidentals adds complexity.\n   - **Moderate**: BWV 0778 (E minor) - Also a minor piece, typically a slight reduction in difficulty.\n   - **Simplest**: BWV 0772 (C major) - No sharps/flats, structurally less complex.\n\n2. **Bartók's Mikrokosmos (Each piece emphasizes specific technical skills)**\n   - **Most Difficult**: No. 104 (D major) - Complex key changes give it more challenge.\n   - **Moderate**: No. 31 (D minor) - Likely focuses on specific patterns or rhythmic elements beyond the key challenge.\n   - **Simplest**: No. 22 (A minor) - A key focus might be imitation in a more straightforward setting.\n\n3. **Morley’s Canzonettes (Simpler, melodious pieces)**\n   - **Most Difficult**: Leave now mine eyes (G minor) - The key may introduce slight complexity.\n   - **Moderate**: Flora wilt thou (G major) - A larger mix of different pitches.\n   - **Simplest**: Go ye my canzonettes (F major) - Simpler harmonic structure.\n\nIn this ranking, the overall structural and stylistic elements, coupled with key signature challenges, dictated the perceived difficulty. Without access to exact rhythmic indicators, this is a hypothetical assessment based on typical characteristics of compositions from these composers and eras.\n\n\nThere is not “correct” answer for this, but it’s interesting to see the paths that it takes. It gets much more specific when run with the tools, listing each individual piece. The non-tools groups by composer. Both, for the most part, seem to agree with each other.\n\n\n\n\n\nCode\nresult = loadXML(r\"C:\\Users\\charl\\Downloads\\CRIM_Model_0001.mei\").page_content\n\nanswer = llm.invoke(\n    f\"\"\"Question: Find and explain any instances of Musica Ficta in this piece. \n    Context: \n    {result[0:50_000]}\n    \n    \"\"\"\n)\n\nprint(answer.content)\n\n\nMusica ficta refers to the practice in medieval and Renaissance music of adding accidentals or altering pitches that are not notated in the musical score. This was done primarily to avoid dissonance and to create smoother melodic lines or better cadential progressions.\n\nIn the provided piece \"Veni speciosam\" by Johannes Lupi, instances of musica ficta may occur where you see alterations not explicitly written in the notation but implied based on the rules of counterpoint and performance practice of the period. A typical scenario where musica ficta might be applied is at cadences, where performers might raise the leading tone or alter pitches to facilitate smoother voice leading.\n\nFrom the given XML (Music Encoding Initiative) data, we can observe some pitches marked with accidentals (e.g., `&lt;accid xml:id=\"m-151\" accid.ges=\"f\"/&gt;`), indicating that the editor has applied these alterations, potentially following the practice of musica ficta. An example can be found in measures 4 through 7, where many `b` notes are marked with a flat accidental to avoid the tritone with the `f` note in F major or to create a smoother melodic line descending from `b` to `a`.\n\nAnother approach to applying musica ficta would be at cadential points. For instance, raising a leading tone in a minor key to better resolve at a cadence—the G in F major could be raised to avoid a diminished interval with the D (making it a G#) or to lead smoothly into an A.\n\nIt's important to remember that musica ficta is often based on performer discretion, historical context, and stylistic judgment, rather than explicit notations in the score. Hence, while not everything applied in the XML denotes musica ficta, the adjustments serve the same purpose of altering pitch for smoother harmonic progression, according to Renaissance performance practice."
  },
  {
    "objectID": "Music Analysis/music_analysis_revised.html#conclusions",
    "href": "Music Analysis/music_analysis_revised.html#conclusions",
    "title": "Using Large Language Models to Analyze Music as MEI and JSON",
    "section": "",
    "text": "The LLM’s did surprisingly well on a majority of the queries, with or without tools. Several queries, however, such as returning tabular data, showed much higher accuracy when tools were used.\nIn all, the LLM performed with 100% accuracy (6/6) with access to relevant tools - music21 functions in this case. The LLM without tools performed with about 80% accuracy (4/5) - still a solid number considering it only struggled with counting massive numbers of notes.\nThus, gpt-4o had over 90% accuracy when performing relatively complex analysis of MEI and JSON data. This figure is impressive in itself, but becomes even more impressive when noting its flawless performance when it’s able to simulate the results with code."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Encoding Music Summer Work 2025",
    "section": "",
    "text": "This site presents rendered versions of the major projects from my 2025 summer research in music encoding, retrieval, and analysis. Each notebook is published as a static HTML file for clean, readable presentation with collapsible code cells and formatted outputs.\nAll source materials — including the original Jupyter notebooks (.ipynb), PDFs, MEI files, and vector databases — are available in the GitHub repository:\nhttps://github.com/cwcross/Encoding-Music-Summer-2025\n\n\n\n\n\nView notebook: full_concert_programs.ipynb\nThis notebook demonstrates a Retrieval-Augmented Generation (RAG) pipeline designed to extract and filter information from digitized concert programs. Metadata filters enable precise querying based on program details such as performer, composer, and performance date.\n\n\n\n\nView notebook: music_analysis_revised.ipynb\nThis project evaluates the ability of large language models to analyze symbolic music both independently and when assisted by domain-specific tools like music21 and CRIM. Input formats include MEI and JSON encodings.\n\n\n\n\nView notebook: Vaudeville_RAG.ipynb\nA prototype RAG system trained on scanned vaudeville programs, enabling question-answering and content retrieval from loosely structured historical data. Emphasis is placed on alignment between OCR text and vectorized indexing.\n\n\n\n\nView notebook: Vaudeville_structured.ipynb\nThis notebook processes a single vaudeville play and extracts structured musical metadata into CSV format. Output includes melodic airs, poetic text, rhyme schemes, and additional performance annotations designed for corpus-level analysis.\n\n\n\n\n\n\nThese are static HTML exports of Jupyter notebooks created using Quarto.\n\nFor interactive use, download the original notebooks from the GitHub repo and run them locally."
  },
  {
    "objectID": "index.html#project-index",
    "href": "index.html#project-index",
    "title": "Encoding Music Summer Work 2025",
    "section": "",
    "text": "View notebook: full_concert_programs.ipynb\nThis notebook demonstrates a Retrieval-Augmented Generation (RAG) pipeline designed to extract and filter information from digitized concert programs. Metadata filters enable precise querying based on program details such as performer, composer, and performance date.\n\n\n\n\nView notebook: music_analysis_revised.ipynb\nThis project evaluates the ability of large language models to analyze symbolic music both independently and when assisted by domain-specific tools like music21 and CRIM. Input formats include MEI and JSON encodings.\n\n\n\n\nView notebook: Vaudeville_RAG.ipynb\nA prototype RAG system trained on scanned vaudeville programs, enabling question-answering and content retrieval from loosely structured historical data. Emphasis is placed on alignment between OCR text and vectorized indexing.\n\n\n\n\nView notebook: Vaudeville_structured.ipynb\nThis notebook processes a single vaudeville play and extracts structured musical metadata into CSV format. Output includes melodic airs, poetic text, rhyme schemes, and additional performance annotations designed for corpus-level analysis."
  },
  {
    "objectID": "index.html#notes",
    "href": "index.html#notes",
    "title": "Encoding Music Summer Work 2025",
    "section": "",
    "text": "These are static HTML exports of Jupyter notebooks created using Quarto.\n\nFor interactive use, download the original notebooks from the GitHub repo and run them locally."
  },
  {
    "objectID": "HC All Programs/full_concert_programs.html",
    "href": "HC All Programs/full_concert_programs.html",
    "title": "RAG: Haverford College Concert Programs Fall 2009 - Spring 2022",
    "section": "",
    "text": "Create a Retrieval Augmented Generation app for Haverford Concert programs 2009-2022\nImplement metadata filters for more refined context, thus higher chance of accurate responses\n\nIf the kernel restarts, do not run all!! Instead, run the code here.\n\n\n\n\n\nCode\n# Setting up chat model\nimport getpass\nimport os\n\nif not os.environ.get(\"OPENAI_API_KEY\"):\n  os.environ[\"OPENAI_API_KEY\"] = getpass.getpass(\"Enter API key for OpenAI: \")\n\nfrom langchain.chat_models import init_chat_model\n\nllm = init_chat_model(\"gpt-4o-mini\", model_provider=\"openai\")\n\n\n\n\nCode\n# Setting up embeddings\nimport getpass\nimport os\n\nif not os.environ.get(\"OPENAI_API_KEY\"):\n  os.environ[\"OPENAI_API_KEY\"] = getpass.getpass(\"Enter API key for OpenAI: \")\n\nfrom langchain_openai import OpenAIEmbeddings\n\nembeddings = OpenAIEmbeddings(model=\"text-embedding-3-large\")\n\n\n\n\nCode\n# Setting up chroma\nfrom langchain_chroma import Chroma\n\nvector_store = Chroma(\n    collection_name=\"example_collection\",\n    embedding_function=embeddings,\n    persist_directory=\"./chroma_langchain_db\",  # Where to save data locally, remove if not necessary\n)\n\n\n\n\n\n\n\nFirst we have to load all of our documents as text. We use Langchain’s loaders. Then, we merge the CSV metadata with the documents.\n\n\nCode\n# Setting up csv loading\n\nfrom langchain_community.document_loaders.csv_loader import CSVLoader\n\ndef loadCSV(filepath: str) -&gt; list:\n    loader = CSVLoader(file_path=filepath, source_column=\"Filename\",metadata_columns=[\"Category\",\"Year\",\"Term\"])\n    data = loader.load()\n    return data\n\n\n\n\nCode\n# Load CSV\n\ncsv_metadata = loadCSV(\"Files/Concert_Metadata.csv\")\nprint(csv_metadata[0].metadata['source'])\nprint(csv_metadata[1].metadata['Category'])\n\n\n1. Curt Cacioppo _ Ying Li Program.pdf\nChamber\n\n\nHere we use PDFPlumberLoader, rather than the default PyPDFLoader, because it seemed to work better with these specific documents. Both have pros and cons.\n\n\nCode\n# Setting up pdf loading\n\nfrom pathlib import Path\nfrom langchain.document_loaders import PDFPlumberLoader\n\nasync def loadPDF(filepath: str) -&gt; list:\n    loader = PDFPlumberLoader(filepath)\n    pages = []\n    async for page in loader.alazy_load():\n        pages.append(page)   \n    return pages\n\n\ndef get_files_from_directory(directory_path: str) -&gt; list[str]:\n    directory = Path(directory_path)\n    file_paths = [str(file) for file in directory.iterdir() if file.is_file()]\n    return file_paths\n\n\ndirectory_path:str = \"Files/PDFs\"\nfiles: list[str] = get_files_from_directory(directory_path)\n\n\n\n\nCode\n# Load PDFs w/out metadata\nloaded_PDFs: list = []\nfor file in files:\n    pages = await loadPDF(file)\n    loaded_PDFs.append(pages)\n\n\n\n\nCode\n# Check PDF content\nfor i in range(3):\n    document = loaded_PDFs[i]\n    print(f\"Document {i} \\n\")\n    document_content: str = \"\"\n    for document_page in document:\n        document_content += document_page.page_content\n    print(document_content[1000:1200] + \"\\n \\n\")\n\n\nDocument 0 \n\nhy by Curt Cacioppo; video montage by John Thornton\nDigital image and live piano\nSynaesthesis I† (2015)\nartwork by Ying Li; videography by John Thornton\n* world premiere † U.S. premiere\n‡ from the Nav\n \n\nDocument 1 \n\non,\nRockport, Sedona, and Sarasota. Currently cellist of the Banff award-winning Amernet String Quartet,\nEnsemble-in-Residence at Florida International University in Miami, Mr. Calloway was previously\n \n\nDocument 2 \n\nw Music Conference, Five College New Music Festival,\nNorth American Saxophone Alliance Biennial Conference at Texas Tech University, Michigan State\nUniversity, Arizona State University, University of \n \n\n\n\n\n\nCode\n# Check PDF metadata\nfor i in range(3):\n    document = loaded_PDFs[i]\n    print(f\"Document {i} \\n\")\n    document_metadata: list = []\n    for document_page in document:\n        document_metadata += document_page.metadata.items()\n    print(document_metadata)\n\n\nDocument 0 \n\n[('source', 'Files\\\\PDFs\\\\1. Curt Cacioppo _ Ying Li Program.pdf'), ('file_path', 'Files\\\\PDFs\\\\1. Curt Cacioppo _ Ying Li Program.pdf'), ('page', 0), ('total_pages', 2), ('CreationDate', 'D:20160919154334Z'), ('Creator', 'Word'), ('Keywords', ''), ('ModDate', \"D:20161101094302-04'00'\"), ('Producer', 'Mac OS X 10.10.4 Quartz PDFContext'), ('Title', 'Microsoft Word - LIBRARY program.docx'), ('source', 'Files\\\\PDFs\\\\1. Curt Cacioppo _ Ying Li Program.pdf'), ('file_path', 'Files\\\\PDFs\\\\1. Curt Cacioppo _ Ying Li Program.pdf'), ('page', 1), ('total_pages', 2), ('CreationDate', 'D:20160919154334Z'), ('Creator', 'Word'), ('Keywords', ''), ('ModDate', \"D:20161101094302-04'00'\"), ('Producer', 'Mac OS X 10.10.4 Quartz PDFContext'), ('Title', 'Microsoft Word - LIBRARY program.docx')]\nDocument 1 \n\n[('source', 'Files\\\\PDFs\\\\1. Jason Calloway Program 2017.pdf'), ('file_path', 'Files\\\\PDFs\\\\1. Jason Calloway Program 2017.pdf'), ('page', 0), ('total_pages', 2), ('Title', 'Calloway program 2017'), ('Author', 'Nancy Merriam '), ('Subject', ''), ('Producer', 'Mac OS X 10.11.6 Quartz PDFContext'), ('Creator', 'Word'), ('CreationDate', \"D:20170924161250Z00'00'\"), ('ModDate', \"D:20170924161250Z00'00'\"), ('Keywords', ''), ('source', 'Files\\\\PDFs\\\\1. Jason Calloway Program 2017.pdf'), ('file_path', 'Files\\\\PDFs\\\\1. Jason Calloway Program 2017.pdf'), ('page', 1), ('total_pages', 2), ('Title', 'Calloway program 2017'), ('Author', 'Nancy Merriam '), ('Subject', ''), ('Producer', 'Mac OS X 10.11.6 Quartz PDFContext'), ('Creator', 'Word'), ('CreationDate', \"D:20170924161250Z00'00'\"), ('ModDate', \"D:20170924161250Z00'00'\"), ('Keywords', '')]\nDocument 2 \n\n[('source', 'Files\\\\PDFs\\\\1. Jonathan Hulting-Cohen Program.pdf'), ('file_path', 'Files\\\\PDFs\\\\1. Jonathan Hulting-Cohen Program.pdf'), ('page', 0), ('total_pages', 2), ('Title', 'Jonathan Hulting-Cohen Program'), ('Author', 'Nancy Merriam '), ('Subject', ''), ('Producer', 'Mac OS X 10.11.6 Quartz PDFContext'), ('Creator', 'Word'), ('CreationDate', \"D:20200609163839Z00'00'\"), ('ModDate', \"D:20200609163839Z00'00'\"), ('Keywords', ''), ('source', 'Files\\\\PDFs\\\\1. Jonathan Hulting-Cohen Program.pdf'), ('file_path', 'Files\\\\PDFs\\\\1. Jonathan Hulting-Cohen Program.pdf'), ('page', 1), ('total_pages', 2), ('Title', 'Jonathan Hulting-Cohen Program'), ('Author', 'Nancy Merriam '), ('Subject', ''), ('Producer', 'Mac OS X 10.11.6 Quartz PDFContext'), ('Creator', 'Word'), ('CreationDate', \"D:20200609163839Z00'00'\"), ('ModDate', \"D:20200609163839Z00'00'\"), ('Keywords', '')]\n\n\nSo, some of this info is useful and some isn’t.\nWe should keep: * Source (but clean it so it’s just the filename) * Filepath * Page * Total pages * Title * CreationDate\nWe should remove: * Author (not relevant) * Subject (blank) * Producer (not relevant) * Creator (not relevant) * ModDate (not relevant) * Keywords (empty)\nEssentially, we want to preserve the fields that will help the embeddings model place these documents in the vector database, but remove extra fields that will confuse the model.\n\n\nCode\n# Cleaning the sources to match with the CSV source names\nfor source in loaded_PDFs:\n    for page in source:\n        page.metadata['source'] = page.metadata['source'].replace(\"Files\\\\PDFs\\\\\",\"\")\n\nfor i in range(5):\n    source = loaded_PDFs[i]\n    print(source[0].metadata['source'])\n\n\n1. Curt Cacioppo _ Ying Li Program.pdf\n1. Jason Calloway Program 2017.pdf\n1. Jonathan Hulting-Cohen Program.pdf\n1. Jordan Dodson Program.pdf\n1. Matthew Bengtson Program.pdf\n\n\n\n\nCode\n# Sorting both the CSV and PDF metadata to match\ncsv_metadata.sort(key=lambda x: x.metadata['source'])\nloaded_PDFs.sort(key=lambda x: x[0].metadata['source'])\n\n\nThe following cell ensures that we have matches between PDF’s and CSV rows.\n\n\nCode\n# Use assert to ensure the sources match\nfor i in range(len(csv_metadata)):\n    assert csv_metadata[i].metadata['source'] == loaded_PDFs[i][0].metadata['source'], f\"Mismatch at index {i}: {csv_metadata[i].metadata['source']} != {loaded_PDFs[i][0].metadata['source']}\"\n\n\n\n\nWe should remove: * Author (not relevant) * Subject (blank) * Producer (not relevant) * Creator (not relevant) * ModDate (not relevant) * Keywords (empty)\n\n\nCode\nprint(len(csv_metadata))\nprint(len(loaded_PDFs))\n\n\n356\n356\n\n\n\n\nCode\nfor i in range(len(csv_metadata)):\n    row = csv_metadata[i]\n    for pdf in loaded_PDFs:\n        assert row.metadata[\"source\"] == loaded_PDFs[i][0].metadata[\"source\"], f\"Mismatch in source for row {i}: {row.metadata['source']} != {loaded_PDFs[i][0].metadata['source']}\"\n\n\n\n\nCode\nirrelevant_metadata = ['Author', 'Subject', 'Producer', 'ModDate', 'Keywords', 'Creator', 'Title']\n\nfor i in range(len(loaded_PDFs)):\n    document = loaded_PDFs[i]\n    for page in document:\n        for key in irrelevant_metadata:\n            if key in page.metadata:\n                del page.metadata[key]\n        # Add the category and year from the CSV metadata\n        assert page.metadata['source'] == csv_metadata[i].metadata['source'], \"Source mismatch between PDF and CSV metadata\"\n        page.metadata['Ensemble_Type'] = csv_metadata[i].metadata['Category']\n        page.metadata['Year'] = csv_metadata[i].metadata['Year']\n        page.metadata['Term'] = csv_metadata[i].metadata['Term']\n    if i &lt; 5:\n        print(document[0].metadata)\n\n\n{'source': '1. Curt Cacioppo _ Ying Li Program.pdf', 'file_path': 'Files\\\\PDFs\\\\1. Curt Cacioppo _ Ying Li Program.pdf', 'page': 0, 'total_pages': 2, 'CreationDate': 'D:20160919154334Z', 'Ensemble_Type': 'Chamber', 'Year': '2016', 'Term': 'Fall'}\n{'source': '1. Jason Calloway Program 2017.pdf', 'file_path': 'Files\\\\PDFs\\\\1. Jason Calloway Program 2017.pdf', 'page': 0, 'total_pages': 2, 'CreationDate': \"D:20170924161250Z00'00'\", 'Ensemble_Type': 'Chamber', 'Year': '2017', 'Term': 'Fall'}\n{'source': '1. Jonathan Hulting-Cohen Program.pdf', 'file_path': 'Files\\\\PDFs\\\\1. Jonathan Hulting-Cohen Program.pdf', 'page': 0, 'total_pages': 2, 'CreationDate': \"D:20200609163839Z00'00'\", 'Ensemble_Type': 'Chamber', 'Year': '2018', 'Term': 'Fall'}\n{'source': '1. Jordan Dodson Program.pdf', 'file_path': 'Files\\\\PDFs\\\\1. Jordan Dodson Program.pdf', 'page': 0, 'total_pages': 2, 'CreationDate': \"D:20200609143156Z00'00'\", 'Ensemble_Type': 'Chamber', 'Year': '2019', 'Term': 'Fall'}\n{'source': '1. Matthew Bengtson Program.pdf', 'file_path': 'Files\\\\PDFs\\\\1. Matthew Bengtson Program.pdf', 'page': 0, 'total_pages': 4, 'CreationDate': \"D:20160524162604Z00'00'\", 'Ensemble_Type': 'Chamber', 'Year': '2015', 'Term': 'Fall'}\n\n\n\n\nCode\n# Convert each sublist into a single document\nfrom langchain.schema import Document\ndef convert_list_to_document(pages: list) -&gt; Document:\n    document_content: str = \"\"\n    for page in pages:\n        document_content += page.page_content\n    document: Document = Document(\n        page_content=document_content,\n        metadata=pages[0].metadata  # Use the metadata from the first page\n    )\n    return document\n\n# Convert loaded PDFs to documents\ndocs = []\nfor source in loaded_PDFs:\n    doc = convert_list_to_document(source)\n    docs.append(doc)  # Append the single Document object\n\n\n\n\nCode\n# Double check metadata\nfor i in range(90,98):\n    print(f\"Document {i} Metadata: {docs[i].metadata}\")\n\n\nDocument 90 Metadata: {'source': '18. Orchestra Program Spring 2019.pdf', 'file_path': 'Files\\\\PDFs\\\\18. Orchestra Program Spring 2019.pdf', 'page': 0, 'total_pages': 7, 'CreationDate': 'D:20190412224743Z', 'Ensemble_Type': 'Orchestra', 'Year': '2019', 'Term': 'Spring'}\nDocument 91 Metadata: {'source': '18. Steven Mayer-Matthew Plenk Program.pdf', 'file_path': 'Files\\\\PDFs\\\\18. Steven Mayer-Matthew Plenk Program.pdf', 'page': 0, 'total_pages': 4, 'CreationDate': \"D:20180329155545Z00'00'\", 'Ensemble_Type': 'Chamber', 'Year': '2018', 'Term': 'Spring'}\nDocument 92 Metadata: {'source': '18. Taiko _ Dance Program 2016.pdf', 'file_path': 'Files\\\\PDFs\\\\18. Taiko _ Dance Program 2016.pdf', 'page': 0, 'total_pages': 4, 'CreationDate': 'D:20160523150851Z', 'Ensemble_Type': 'Chamber', 'Year': '2016', 'Term': 'Spring'}\nDocument 93 Metadata: {'source': '19. Chamber Singers Rotunda Program 2015.pdf', 'file_path': 'Files\\\\PDFs\\\\19. Chamber Singers Rotunda Program 2015.pdf', 'page': 0, 'total_pages': 1, 'CreationDate': \"D:20160524153321Z00'00'\", 'Ensemble_Type': 'Choral', 'Year': '2015', 'Term': 'Spring'}\nDocument 94 Metadata: {'source': '19. Chorale Program Spring 2013.pdf', 'file_path': 'Files\\\\PDFs\\\\19. Chorale Program Spring 2013.pdf', 'page': 0, 'total_pages': 16, 'CreationDate': \"D:20160524164621Z00'00'\", 'Ensemble_Type': 'Choral', 'Year': '2013', 'Term': 'Spring'}\nDocument 95 Metadata: {'source': '19. Curt Cacioppo and Friends Program.pdf', 'file_path': 'Files\\\\PDFs\\\\19. Curt Cacioppo and Friends Program.pdf', 'page': 0, 'total_pages': 10, 'CreationDate': \"D:20200615113320-04'00'\", 'Ensemble_Type': 'Chamber', 'Year': '2019', 'Term': 'Spring'}\nDocument 96 Metadata: {'source': '19. David Botwinik Program.pdf', 'file_path': 'Files\\\\PDFs\\\\19. David Botwinik Program.pdf', 'page': 0, 'total_pages': 12, 'CreationDate': \"D:20120219225158-05'00'\", 'Ensemble_Type': 'Vocal', 'Year': '2012', 'Term': 'Spring'}\nDocument 97 Metadata: {'source': '19. Lutton Fund-This Room-Program.pdf', 'file_path': 'Files\\\\PDFs\\\\19. Lutton Fund-This Room-Program.pdf', 'page': 0, 'total_pages': 2, 'CreationDate': \"D:20160524180634Z00'00'\", 'Ensemble_Type': 'Chamber', 'Year': '', 'Term': ''}\n\n\n\n\n\n\n\n\nCode\nfrom langchain_text_splitters import RecursiveCharacterTextSplitter\n\ntext_splitter = RecursiveCharacterTextSplitter(\n    chunk_size=1000,  # chunk size (characters)\n    chunk_overlap=200,  # chunk overlap (characters)\n    add_start_index=True,  # track index in original document\n)\nall_splits = text_splitter.split_documents(docs)\n\nprint(f\"Split {len(docs)} PDFs into {len(all_splits)} sub-documents.\")\n\n\nSplit 356 PDFs into 3757 sub-documents.\n\n\n\n\nCode\n# If we run this again when reestablishing variables, it will duplicate documents and charge us\n\n\n# document_ids = vector_store.add_documents(documents=all_splits) \n# print(document_ids[:3])\n\n# \n\n\n['f6b62a29-03d0-4b4c-a5f8-3a841d114756', '63653de1-d878-497f-b752-385c2717fe76', '28e3571c-4a8e-4a33-8937-ccc553c5cbe3']\n\n\nThe above code is commented out to avoid adding documents again, which would duplicate them in the vector store. The vector store should already be set up in /chroma_langchain_db\n\n\n\n\nWe use LangGraph and a State class to set up our RAG. LangGraph allows us to set up clear steps, and the State allows us to pass information between each step.\nSee the graph below the 3 code cells.\n\n\nCode\nfrom langchain_core.documents import Document\nfrom typing_extensions import List, TypedDict\nfrom langchain_core.prompts import ChatPromptTemplate\n\nprompt = ChatPromptTemplate.from_messages([\n    (\"system\", \"You are a helpful assistant. Use only the information provided in the context below to answer the question. If the answer is not in the context, say 'I don't know' or 'The information is not available.'\"),\n    (\"human\", \"Context:\\n{context}\\n\\nQuestion: {question}\")\n])\n\nclass State(TypedDict):\n    question: str\n    context: List[Document]\n    answer: str\n\ndef retrieve(state: State):\n    retrieved_docs = vector_store.similarity_search(state[\"question\"], k = 10)\n    return {\"context\": retrieved_docs}\n\ndef generate(state: State):\n    docs_content = \"\\n\\n\".join([doc.page_content for doc in state[\"context\"]])\n    message = prompt.invoke({\"question\": state[\"question\"], \"context\": docs_content})\n    response = llm.invoke(message)\n    return {\"answer\": response.content}\n\n\n\n\nCode\nfrom langgraph.graph import START, StateGraph\n\ngraph_builder = StateGraph(State).add_sequence([retrieve, generate])\ngraph_builder.add_edge(START, \"retrieve\")\ngraph = graph_builder.compile()\n\n\n\n\nCode\nprint(graph.get_graph().draw_ascii())\n\n\n+-----------+  \n| __start__ |  \n+-----------+  \n      *        \n      *        \n      *        \n+----------+   \n| retrieve |   \n+----------+   \n      *        \n      *        \n      *        \n+----------+   \n| generate |   \n+----------+   \n      *        \n      *        \n      *        \n +---------+   \n | __end__ |   \n +---------+   \n\n\n\n\n\n\n\nCode\n# Setting up chat model\nimport getpass\nimport os\n\nif not os.environ.get(\"OPENAI_API_KEY\"):\n  os.environ[\"OPENAI_API_KEY\"] = getpass.getpass(\"Enter API key for OpenAI: \")\n\nfrom langchain.chat_models import init_chat_model\n\nllm = init_chat_model(\"gpt-4o-mini\", model_provider=\"openai\")\n\n# Setting up embeddings\nimport getpass\nimport os\n\nif not os.environ.get(\"OPENAI_API_KEY\"):\n  os.environ[\"OPENAI_API_KEY\"] = getpass.getpass(\"Enter API key for OpenAI: \")\n\nfrom langchain_openai import OpenAIEmbeddings\n\nembeddings = OpenAIEmbeddings(model=\"text-embedding-3-large\")\n\n# Reestablishing up our persist directory for Chroma\nfrom langchain_chroma import Chroma\n\nvector_store = Chroma(\n    collection_name=\"example_collection\",\n    embedding_function=embeddings,\n    persist_directory=\"./chroma_langchain_db\",  # Where we stored our data before\n)\n\n# Reestablishing retrieval and generation functions\nfrom langchain_core.documents import Document\nfrom typing_extensions import List, TypedDict\n\nfrom langchain_core.prompts import ChatPromptTemplate\n\nprompt = ChatPromptTemplate.from_messages([\n    (\"system\", \"You are a helpful assistant. Use only the information provided in the context below to answer the question. If the answer is not in the context, say 'I don't know' or 'The information is not available.'\"),\n    (\"human\", \"Context:\\n{context}\\n\\nQuestion: {question}\")\n])\n\nclass State(TypedDict):\n    question: str\n    context: List[Document]\n    answer: str\n\ndef retrieve(state: State):\n    retrieved_docs = vector_store.similarity_search(state[\"question\"], k = 10)\n    return {\"context\": retrieved_docs}\n\ndef generate(state: State):\n    docs_content = \"\\n\\n\".join([doc.page_content for doc in state[\"context\"]])\n    message = prompt.invoke({\"question\": state[\"question\"], \"context\": docs_content})\n    response = llm.invoke(message)\n    return {\"answer\": response.content}\n\n# Reestablishing langgraph\nfrom langgraph.graph import START, StateGraph\n\ngraph_builder = StateGraph(State).add_sequence([retrieve, generate])\ngraph_builder.add_edge(START, \"retrieve\")\ngraph = graph_builder.compile()\n\n\n\n\n\n\n\nCode\nresult = graph.invoke({\"question\": \"Who has conducted the Chamber Singers over the years?\"})\n\nprint(f'Answer: {result[\"answer\"]}')\nprint(f'Context: {result[\"context\"]}\\n\\n')\n\n\nAnswer: The Chamber Singers have been conducted by Thomas Lloyd and Ng Tian Hui during the academic year of 2010/11, with Lloyd being the director before taking a sabbatical and Ng Tian Hui leading in his absence. More recently, Dr. Nathan Zullinger has been the conductor.\nContext: [Document(id='13720808-826c-45c8-b695-85c2b85d9445', metadata={'total_pages': 12, 'start_index': 22880, 'Year': '2011', 'Ensemble_Type': 'Choral', 'file_path': 'C:\\\\Users\\\\charl\\\\Documents\\\\VSCode\\\\HC All Programs\\\\Files\\\\PDFs\\\\30. Chamber Singers-Recalling Ariadne Program.pdf', 'source': '30. Chamber Singers-Recalling Ariadne Program.pdf', 'Term': 'Spring', 'page': 0, 'CreationDate': \"D:20160524182813Z00'00'\"}, page_content='academic year of 2010/11, the choir is led by Ng Tian Hui while Prof. Lloyd is away on sabbatical.\\nAs the premier vocal ensemble in the bi-college community, the Chamber Singers performs challenging repertoire ranging from\\nthe Renaissance to the present day in a variety of languages and styles. This season’s repertoire will range from 16th century\\nParis to contemporary South Africa; from Bach’s Magnificat, to Monteverdi’s Lamento d’Arianna, to new commissions by\\ncomposers based in Austria, Singapore and the US.\\nThe Chamber Singers returned from Turkey and their sixth international cultural exchange tour in the spring of 2010, and will\\nembark on a national tour in Spring 2011 including an exchange with Amherst College and a performance at Yale University’s\\nMarquand Chapel. In addition, the choir looks forward to a session with Meredith Monk, and an invitation to the College Choir\\nSeries at the Church of the Holy Trinity, Rittenhouse Square, in Philadelphia.\\nMelanie Bafitis, composer'), Document(id='1bd496bb-1591-40df-ac65-042ccb2eb9a9', metadata={'CreationDate': 'D:20181210222834Z', 'start_index': 1570, 'total_pages': 8, 'page': 0, 'Year': '2018', 'Ensemble_Type': 'Chamber', 'Term': 'Fall', 'file_path': 'C:\\\\Users\\\\charl\\\\Documents\\\\VSCode\\\\HC All Programs\\\\Files\\\\PDFs\\\\9. Chamber Singers Winter Program 2018.pdf', 'source': '9. Chamber Singers Winter Program 2018.pdf'}, page_content='Chamber Singers is comprised of singers from many disciplines across the Bi-Co. In addition to\\nstudents majoring in music, the ensemble also attracts students who wish to perform challenging\\nchoral works in a more intimate setting. Their repertoire is drawn from the Renaissance through\\nthe present day, with frequent explorations of music from cultures that are not widely\\nrepresented in the greater choral world. Chamber Singers has collaborated with arts organizations\\nand colleges throughout the northeastern United States and has undertaken foreign tours, most\\nrecently to Germany in 2017. In addition to singing, the group enjoys a family atmosphere that is\\nfostered through an annual retreat and numerous social opportunities throughout the year.\\nDr. Nathan Zullinger, conductor\\nNathan Zullinger is an Assistant Professor at Haverford College, where he conducts the Chorale,\\nthe Chamber Singers, and teaches courses in the Department of Music. Through the Bi-College'), Document(id='33fb09d3-0cd1-40c2-bf53-0139e61ca628', metadata={'total_pages': 8, 'page': 0, 'Year': '2019', 'start_index': 11208, 'Ensemble_Type': 'Choral', 'file_path': 'C:\\\\Users\\\\charl\\\\Documents\\\\VSCode\\\\HC All Programs\\\\Files\\\\PDFs\\\\9. Chamber Singers Winter Program 2019.pdf', 'Term': 'Fall', 'source': '9. Chamber Singers Winter Program 2019.pdf', 'CreationDate': \"D:20200609144044Z00'00'\"}, page_content='Colleges. In addition to students majoring in music, the ensemble also attracts students\\nfrom many other majors who wish to perform challenging choral works in a more\\nintimate setting. Their repertoire is drawn from the Renaissance through the present day,\\nwith frequent explorations of music from cultures that are not widely represented in the\\ngreater choral world. Chamber Singers has collaborated with arts organizations and\\ncolleges throughout the northeastern United States and has undertaken foreign tours. The\\nChamber Singers will spend a week touring Quebec in May 2020.\\nDr. Nathan Zullinger, conductor\\nNathan Zullinger is an Assistant Professor at Haverford College, where he\\nconducts the Chorale, the Chamber Singers, and teaches courses in the Department of\\nMusic. Through the Bi-College Partnership, he also teaches students from Bryn Mawr\\nCollege. A native of Chambersburg, Pennsylvania, Dr. Zullinger received his degrees'), Document(id='bbd2a1cb-d600-486e-a047-4365cdbb3aca', metadata={'total_pages': 12, 'file_path': 'C:\\\\Users\\\\charl\\\\Documents\\\\VSCode\\\\HC All Programs\\\\Files\\\\PDFs\\\\12. Chamber Singers-Holiday Program 2010.pdf', 'Term': 'Fall', 'Ensemble_Type': 'Choral', 'page': 0, 'Year': '2010', 'source': '12. Chamber Singers-Holiday Program 2010.pdf', 'CreationDate': \"D:20160524175217Z00'00'\", 'start_index': 15930}, page_content='the academic year of 2010/11, the choir will be led by Ng Tian Hui while Prof. Lloyd is away on sabbaticcal.\\nAs the premier vocal ensemble in the bi-college community, the Chamber Singers performs challenging repertoire ranging\\nfrom the Renaissance to the present day in a variety of languages and styles. This season’s repertoire will range from 16th\\ncentury Paris to contemporary South Africa; from Bach’s Magnificat, to Monteverdi’s Lamento d’Arianna, to new\\ncommissions by composers based in Austria, Singapore and the US.\\nThe Chamber Singers returned from Turkey and their sixth international cultural exchange tour in the Spring of 2010, and\\nwill embark on a National tour in Spring 2011 including an exchange with Amherst College and a performance at Yale\\nUniversity’s Marquand Chapel. In addition, the choir looks forward to a session with Meredith Monk, and an invitation to\\nthe College Choir Series at the Church of the Holy Trinity, Rittenhouse Square, in Philadelphia.'), Document(id='8d6222dd-0a13-488a-8006-25f5767f234e', metadata={'start_index': 6487, 'Ensemble_Type': 'Choral', 'page': 0, 'source': 'Spring 4-28-22 Chamber Singers Rotunda Program 2022.pdf', 'Term': 'Spring', 'file_path': 'C:\\\\Users\\\\charl\\\\Documents\\\\VSCode\\\\HC All Programs\\\\Files\\\\PDFs\\\\Spring 4-28-22 Chamber Singers Rotunda Program 2022.pdf', 'CreationDate': 'D:20220428134503Z', 'Year': '2022', 'total_pages': 4}, page_content='Renaissance through the present day, with frequent explorations of composers that are not widely\\nrepresented in the greater choral world. Chamber Singers has collaborated with arts organizations and\\ncolleges throughout the northeastern United States and has undertaken foreign tours. In 2020, the\\nensemble premiered a new work by Scott Ordway, “Twenty/Twenty.” A collaboration between four\\ncolleges, the piece included photographs and video taken by students to document the experience of the\\nearly pandemic. The work was featured by the classical music critic of the Philadelphia Inquirer.\\nNathan Zullinger is an Assistant Professor at Haverford College, where he conducts the Chorale, the\\nChamber Singers, and teaches courses in the Department of Music. Through the Bi-College Partnership,\\nhe also teaches students from Bryn Mawr College. A native of Chambersburg, Pennsylvania, Dr.\\nZullinger received his degrees from Messiah College and Boston University, studying with Linda'), Document(id='449fe834-3984-4b65-a09d-c77c71225d4e', metadata={'start_index': 1578, 'file_path': 'C:\\\\Users\\\\charl\\\\Documents\\\\VSCode\\\\HC All Programs\\\\Files\\\\PDFs\\\\22. Chamber Singers Rotunda Program.pdf', 'Term': 'Spring', 'source': '22. Chamber Singers Rotunda Program.pdf', 'Year': '2019', 'Ensemble_Type': 'Choral', 'total_pages': 4, 'page': 0, 'CreationDate': \"D:20200609170732Z00'00'\"}, page_content=\"from many other majors who wish to perform challenging choral works in a more intimate\\nsetting. Their repertoire is drawn from the Renaissance through the present day, with\\nfrequent explorations of music from cultures that are not widely represented in the greater\\nchoral world. Chamber Singers has collaborated with arts organizations and colleges\\nthroughout the northeastern United States and has undertaken foreign tours. This past fall\\nthe Chamber Singers performed Morten Lauridsen's Midwinter Songs and collaborated with\\nthe Bi-College Chorale on a performance of Haydn's Te Deum in C Major.\\nDr. Nathan Zullinger, conductor\\nNathan Zullinger is an Assistant Professor at Haverford College, where he conducts\\nthe Chorale, the Chamber Singers, and teaches courses in the Department of Music. Through\\nthe Bi-College Partnership, he also teaches students from Bryn Mawr College. A native of\\nChambersburg, Pennsylvania, Dr. Zullinger received his degrees from Messiah College and\"), Document(id='eb0b30dc-ce64-46e6-ae4d-f21c9b838f32', metadata={'source': '35. Chamber Singers-Commencement Program 2011.pdf', 'Ensemble_Type': 'Choral', 'CreationDate': 'D:20160524175413Z', 'start_index': 24004, 'file_path': 'C:\\\\Users\\\\charl\\\\Documents\\\\VSCode\\\\HC All Programs\\\\Files\\\\PDFs\\\\35. Chamber Singers-Commencement Program 2011.pdf', 'total_pages': 23, 'Term': 'Spring', 'Year': '2011', 'page': 0}, page_content='The Chamber Singers returned from Turkey and their sixth international cultural exchange\\ntour in the spring of 2010, and will embark on a national tour in Spring 2011 including an\\nexchange with Amherst College and a performance at Yale University’s Marquand Chapel.\\nIn addition, the choir looks forward to a session with Meredith Monk, and an invitation to\\nthe College Choir Series at the Church of the Holy Trinity, Rittenhouse Square, in\\nPhiladelphia.\\nNg Tian Hui, conductor\\nConductor, composer, and singer, Ng Tian Hui is the Interim Director of Choral and Vocal\\nStudies at Haverford and Bryn Mawr colleges, where he directs the Chorale and the\\nChamber Singers, and leads its vocal program. In addition, Mr. Ng is known for his\\nversatility as a composer and has written music for animation, dance, film, and theatre, as\\nwell as for the classical mediums of choir and orchestra.\\nMr Ng holds a Master of Music degree in Choral Conducting from the Yale School of'), Document(id='7f4f483d-cbc8-4bad-a73c-c3b3b6b66d7d', metadata={'Term': 'Fall', 'file_path': 'C:\\\\Users\\\\charl\\\\Documents\\\\VSCode\\\\HC All Programs\\\\Files\\\\PDFs\\\\3. Family Weekend Program 2015.pdf', 'Year': '2015', 'source': '3. Family Weekend Program 2015.pdf', 'CreationDate': \"D:20151028162144Z00'00'\", 'total_pages': 5, 'page': 0, 'start_index': 4770, 'Ensemble_Type': 'Mixed'}, page_content=\"Luis Loza, HC '17 Tina Kloufetos, HC '17\\nChamber Singers – Thomas Lloyd, conductor\\nSopranos Kathryn Goldberg BMC ‘18 Basses\\nJo Dutilloy BMC’16 Isabel Gross HC’17 (abroad) Adam Adorney HC’18\\nJulia Lin BMC’17 Liz Heaton HC’18 Nik Dombrowski HC’19\\nSashini Kannan BMC’19 Katherine Larson BMC’19 Kevin Dye HC’18\\nShayoni Nag BMC’16 Bola Origunwa HC’19 William Jones HC’19\\n*Abigail Stephenson BMC’16 Nadejda Polcanova BMC ex. ‘17 Daniel Lugano HC’17\\nAnna Swartzentruber BMC’18 Kat Phifer BMC’19 *Damon Motz-Storey HC’16\\nVeronica Walton BMC’19 *George Ordiway HC’16\\nTenors\\nHannah Weissman HC’17 Chris Pence HC’18\\nMason Emmert HC ‘17\\nJoaquin Vargas HS’16\\nAltos Eitan Geller-Montague HC’19\\n* elected Advisory Council\\nAlice Berry BMC’19 Nicolas Marcotrigiano HC’18\\nRachel Brodie HC’19 Luis Rivas HC’16\\nEmily Drummond BMC ’17 Matey Scheiner HC’18\\n(abroad) Tom Sternberg HC’17\\nLydia Gingerich HC’19\\nMainliners\\nDavid Cookmeyer '16 Isabella Falla '18 Sonia Copple '19\"), Document(id='c0fc2eca-94a7-4b4c-92b3-4e6f4744f5ad', metadata={'source': '33. Chamber Singers Commencement Concert 2017.pdf', 'file_path': 'C:\\\\Users\\\\charl\\\\Documents\\\\VSCode\\\\HC All Programs\\\\Files\\\\PDFs\\\\33. Chamber Singers Commencement Concert 2017.pdf', 'CreationDate': \"D:20170615155653Z00'00'\", 'total_pages': 4, 'Term': 'Spring', 'Ensemble_Type': 'Choral', 'Year': '2017', 'start_index': 5576, 'page': 0}, page_content='Daniel Lugano HC’17\\nRachel Brodie HC’19\\nEva Montgomery-Morrison HC’20\\n+Emily Drummond BMC ’17\\nNathan Merrill HC’20\\nKathryn Goldberg BMC ‘18\\nMelody Gray BMC’20\\n+ Advisory Council\\n+Isabel Gross HC’17\\nJohn Andrew Bailey, rehearsal pianist\\nLiz Heaton HC’18\\nBola Origunwa HC’19\\nIman Qazi BMC’19\\nThomas Lloyd is conducting his final concert as Director of the Choral and Vocal Studies Program for Haverford and\\nBryn Mawr Colleges since 1996. A firm believer in the power of musical collaboration to cross cultural divides, Lloyd has\\narranged shared performances with over 60 choirs and instrumental ensembles both in the US and across 5 continents over\\nthe course of leading 11 international concert tours. Most recently, a 2017 collaboration between the bi-college Chamber\\nSingers and the German and Syrian refugee choir Begegnungschor Berlin is featured in current issue the Journal of the\\nInternational Federation for Choral Music and on classical public radio station WRTI Philadelphia.'), Document(id='d3b7095e-b88d-46d6-8af9-b0d610f00783', metadata={'Ensemble_Type': 'Choral', 'source': '24. Chamber Singers Rotunda Program 2014.pdf', 'start_index': 5647, 'Year': '2014', 'file_path': 'C:\\\\Users\\\\charl\\\\Documents\\\\VSCode\\\\HC All Programs\\\\Files\\\\PDFs\\\\24. Chamber Singers Rotunda Program 2014.pdf', 'Term': 'Spring', 'page': 0, 'CreationDate': \"D:20200612110348Z00'00'\", 'total_pages': 4}, page_content='Abigail Stephenson BMC’16, soloist\\nThe Chamber Singers\\nof Haverford and BrynMawr Colleges\\nProfessor Thomas Lloyd, director\\nSopranos\\nMiriam Abaya HC’14\\nShana Burstein HC’15\\nEmily Drummond BMC’17\\nJo Dutilloy BMC’17\\nBrooke Ford HC’14\\nNaomi Goodman HC ’14\\nCarolyn Poutasse HC’16\\nAbigail Stephenson BMC’16\\nLauren Werner BMC ’14\\nAltos\\nZara Atal HC ’14\\nAllie DiTucci HC’15\\nIvy Drexel BMC’14\\nIsabel Gross HC’17\\nColleen Hansbury BMC ‘14\\nMalenca Logan HC ’14\\nHannah Nacheman BMC’15\\nAnnie Salorio BMC ’14\\nJoelle Schindler BMC’15\\nTenors\\nMason Emmert HC’17\\nBJ Hillinck HC’15\\nJoe Horowitz HC’14\\nJaimon Olmsted HC’17\\nLuis Rivas HC’16\\nBasses\\nRobin Banerji HC ‘15\\nGeorge Ordiway HC16\\nLee Rosenthal HC’15\\nMisha Terman HC’16\\nJoaquin Vargas HC’15\\nMicah John Walter HC’14\\nBen Weissman HC ‘14\\nPatrick Williams HC’14')]\n\n\n\n\n\n\nCode\nresult = graph.invoke({\"question\": \"Who played trumpet for the haverford-bryn mawr orchestra in 2019?\"})\n\nprint(f'Answer: {result[\"answer\"]}')\nprint(f'Context: {result[\"context\"]}\\n\\n')\n\n\nAnswer: I don't know.\nContext: [Document(id='a9aaff9b-6388-4acc-8c75-0d85ae7d8daa', metadata={'start_index': 17739, 'Ensemble_Type': 'Choral', 'file_path': 'C:\\\\Users\\\\charl\\\\Documents\\\\VSCode\\\\HC All Programs\\\\Files\\\\PDFs\\\\9. Chorale Program Fall 2011.pdf', 'page': 0, 'Year': '2011', 'source': '9. Chorale Program Fall 2011.pdf', 'Term': 'Fall', 'total_pages': 8, 'CreationDate': 'D:20200612115549Z'}, page_content='Haverford/Bryn Mawr Chorale Orchestra – Fall 2011\\nViolin I Bass Contrabassoon\\nLorenzo Rayal Jennifer Bradbury Ben Hoyle\\nKiran Rajamani HC ’14 Matt Roberts\\nChi Park Brent Edmondson Horns\\nNatalia Banfi HC ’15 Katie Jordan\\nHarp\\nJennifer Horne Kristina Gannon\\nAriane Giles HC ’15\\nVanessa Felso BMC ’15 Sabrina Huber\\nSophia Forker HC ’15\\nVena Johnson Ryan Stewart\\nGabriella Goodman HC ’12\\nPiccolo\\nTrumpets\\nViolin II Katherine Barbato\\nBrian Rascon\\nRodolfo Leuenberger\\nMatthew Thomas\\nMarie Greaney HC ’14 Flute\\nAaron Matthias-Long\\nAngela Sulzer BJ Hillinck HC ’15\\nNora Schmidt BMC ’12 Evangeline Krajewski HC ’14\\nTrombones\\nSarah Franklin\\nBrian Santero\\nLynn Richmond HC ’13 Oboe\\nKeith Warner HC ’15\\nMegan Reimer\\nAnthony Triplett\\nViola\\nDario McConnie-Saad English Horn\\nTuba\\nEsther Ho BMC ’15 Fiona Last\\nChris Pearlberg\\nSarah Pisano\\nKristina Kronauer BMC ’13 Clarinet\\nPercussion\\nAlyssa DeStefano Tom Lee HC ’15\\nTim Knowlten\\nVeeshal Modi Leslie Tjing HC ’15\\nSeth Bagwell\\nCello Brad Broomfield\\nBass Clarinet'), Document(id='81d58f4f-e1d2-4de5-a0ad-edc7b451fdc6', metadata={'Ensemble_Type': 'Choral', 'page': 0, 'start_index': 3989, 'source': '8. Chorale Program Fall 2019.pdf', 'CreationDate': \"D:20191202144100-05'00'\", 'Year': '2019', 'Term': 'Fall', 'file_path': 'C:\\\\Users\\\\charl\\\\Documents\\\\VSCode\\\\HC All Programs\\\\Files\\\\PDFs\\\\8. Chorale Program Fall 2019.pdf', 'total_pages': 12}, page_content='Benjamin Baumgarte HC’23 Meg Kajino Jocelyn Moore\\nSeth Boyce HC’20 Aileen Rimando Marde Meek\\nCaleb Conner HC’20 Jose Sanchez\\nJude Correll HC’23 Bassoon\\nJohn Dvorak HC’23 Violin II Aaron Datsko\\nAdam Fernandez COMM Rodolfo Leuenberger\\nGary Gordon COMM Belmary Lorcas Trumpet\\nAlexander Grimwade COMM Margaret Dziekonski Adrianna Korey\\nRafi Grossman-Naples HC’23 Liz Carlson Lucas Schurmann\\nJack Hagele COMM Andrew Hoesl\\nStevens Heckscher COMM Viola\\nJohn Joseph COMM Veronica Jurkiewicz Timpani\\nDarren Kah BMC’23 Emma Hey Nathan Buonviri\\nNicholas Lasinsky HC’23 Michael Stanley\\nDennis Li HC’21 Organ/Harpsichord\\nSteven Lindell HC FAC Cello John Walthausen\\nVincent McCarthy COMM Elena Smith\\nStephen Michael COMM Mirjam Ingolfsson Orchestra Contractor\\nBrendan Minihan COMM Dora von Trentini\\nLucas Nelson HC’23 Bass\\nLarry Passmore COMM Nancy Merriam\\nDarshan Patel HC’23 AUDITIONS for the\\nPeter Phillips COMM Haverford-Bryn Mawr\\nMark Rahdert HC’74 Chorale will take place in\\nNaren Roy HC’23 January 2020.'), Document(id='561b2b39-e271-4a54-9563-0f72679db7ac', metadata={'page': 0, 'total_pages': 6, 'start_index': 1594, 'Year': '2008', 'source': 'HC Family Weekend 08 program.pdf', 'file_path': 'C:\\\\Users\\\\charl\\\\Documents\\\\VSCode\\\\HC All Programs\\\\Files\\\\PDFs\\\\HC Family Weekend 08 program.pdf', 'Ensemble_Type': 'Mixed', 'Term': 'Fall', 'CreationDate': \"D:20130612212010Z00'00'\"}, page_content='Sadie Martin, flute, Catherine Di Vizio, oboe, Melanie Shafer, bassoon\\nChamber Singers\\nThomas Lloyd, conductor\\nAin’t Got Time to Die, arr. Hall Johnson\\nsolos: Conor Weiss and Maya Bloom\\nA Quiet Place, Carmichael, arr. Rubino\\nsolo: Allison Keefe\\nS’Chords\\nJerusalem arranged by The Harvard Krokodiloes\\nsolo: Chris Healy\\nMika’s Happy Ending arranged by Jeff Wildermuth\\nsolo: Zac Dutton\\nPerformers and audience\\nHaverford Harmony Song - Sigmund Spaeth ‘05\\nHaverford-Bryn Mawr Orchestra\\nHeidi Jacob, Director\\nVIOLIN Dan Weaver BASSOON\\nEmma Shaw Concertmistress Caroline Kenward Melanie Shafer*+\\nInez Suhardjo, Associate Principal * Nina Zipkin Hannah Brubaker #\\nGabriella Goodman Assistant Principal* Grace Loudon\\nWilla Caughey Assistant Principal + HORN\\nJanice Harlow Principal Second + CELLO Alex Mirarchi*\\nSophia Tan, Assistant Principal Second+ Simon Linn-Gerstein, Principal Sam Strauch\\nGloria Vidal Kelvin Chang, Associate Principal Katherine Lo+'), Document(id='3127128b-e6d8-419d-9dec-80d44c7f3900', metadata={'file_path': 'C:\\\\Users\\\\charl\\\\Documents\\\\VSCode\\\\HC All Programs\\\\Files\\\\PDFs\\\\7. Orchestra Program Fall 2018.pdf', 'start_index': 15953, 'total_pages': 7, 'Ensemble_Type': 'Orchestra', 'Term': 'Fall', 'source': '7. Orchestra Program Fall 2018.pdf', 'page': 0, 'Year': '2018', 'CreationDate': 'D:20181114120319Z'}, page_content='String Quartet, and she was mentored by chamber music greats Felix Galimir, Josef Gingold, Robert Mann, and\\nMischa Schneider.\\nMs. Govatos serves on the advisory boards of Astral Artists, an organization that promotes, presents, and advises\\ntalented artists on the cusp of their musical careers, and the Music School of Delaware, a community music school\\nwhere she began her studies. She also teaches privately in Philadelphia.\\nHAVERFORD-BRYN MAWR ORCHESTRA\\nVIOLIN Maria Penrice HC ’22 Co- TRUMPET\\nRuby Zeng BMC ’20 Co- Associate Principal Sam Istvan HC ’21 Stravinsky/\\nConcertmistress Stravinsky/Bellini Nina Mandel HC ’22 Co-Associate Haydn\\nDiane Moore HC ’20 Co- Principal Jesse Friedson HC ’21 Stravinsky/\\nConcertmistress Haydn/Jacob Halcyon Hu BMC ’22 Assistant Bellini\\nJackie Toben BMC ’22 Co- Principal Andrew Cornell HC ’20 Stravinsky/\\nAssociate Principal First Violin Seth Boyce HC ’20 Bellini\\nMarisa LaBarca HC ’21 Co- Maryam Jahanbin, BMC ’19 Eric Kopczynski HC ’22 Stravinsky/'), Document(id='ed4f5641-becf-4e8a-abaa-b407e4a499aa', metadata={'file_path': 'C:\\\\Users\\\\charl\\\\Documents\\\\VSCode\\\\HC All Programs\\\\Files\\\\PDFs\\\\6. Chorale Program Fall 2012.pdf', 'CreationDate': \"D:20130529015231Z00'00'\", 'start_index': 15187, 'source': '6. Chorale Program Fall 2012.pdf', 'page': 0, 'Ensemble_Type': 'Choral', 'total_pages': 8, 'Year': '2012', 'Term': 'Fall'}, page_content='principal principal Brent Edmondson\\nYue Yang BMC Sarah Pisano Michael Chaffin Percussion\\nJames Akinaka HC ‘16 Alyssa DeStefano Rachel Genovese BMC ‘15\\nLaura Hammons Jennifer Horne Trumpet Christian Fagre HC’16\\nLorenzo Raval Dario Mcconnie-Saad Joseph Hart Bill Ristow HC’16\\nChi Park Aaron Matthias-Long Tom Bowden\\nCello Andrew Kessling Joe Veltri\\nViolin II Rachel Goldstein HC ’14,\\nSara Bowers principal Trombone Harp\\nAileen Rimando, Michal Schmidt HC teacher Brian Santero Adrienne Knauer\\nAngela Sulzer Ryan Baxter-King HC ‘16 Joshua Popejoy Sophia Forker HC’15\\nElizabeth Zook Ezgi Yargici, Derek Paquette (bass)\\nKevin Sloan Kevin Lowery\\nAdam Crandell, HC staff\\nHaverford/Bryn Mawr Chorale\\nBeth Manus, accompanist\\nSopranos Anna Heilmayr, comm Tianyi Hu, HC ’16\\nDelia Bowman, BMC ’16 Leah Hollander, HC ’15 Bill Kunze, comm\\nBarb Browne, comm Melisse Jean BMC ’08 Sebastian (Siggy) Moore, HC ’09\\nMaxine Cook, comm, spouse HC ’64 Aviva Kosansky, BMC ’16 Ben Safran, HC ’13'), Document(id='83b1c956-c8ce-46bd-9a39-8deafd966165', metadata={'Year': '2013', 'total_pages': 16, 'file_path': 'C:\\\\Users\\\\charl\\\\Documents\\\\VSCode\\\\HC All Programs\\\\Files\\\\PDFs\\\\19. Chorale Program Spring 2013.pdf', 'start_index': 34621, 'Ensemble_Type': 'Choral', 'source': '19. Chorale Program Spring 2013.pdf', 'CreationDate': \"D:20160524164621Z00'00'\", 'Term': 'Spring', 'page': 0}, page_content='Alyssa DeStefano Abigail Healy HC ’15\\nBeatrice Ferreira HC ’16 Sabrina Huber\\nMatteo Miazzo HC ’15 Seth Hanes\\nDario Mcconnie-Saad\\nMeriel Campbell BMC ’16 Trumpet\\nChris Shiley\\nCello Brian Rascon\\nRachel Goldstein HC ’14 Jesse Morvan\\nEzgi Yargici\\nErin Korth HC ’13 Trombone\\nVeronica Hudacek Justin Moore\\nAdam Crandell HC staff Keith Warner HC ’15\\nErin Busch Anthony Triplett\\nBass Tuba\\nBrent Edmondson Matt Gatti\\nMartin Richard HC ’14 Percussion\\nTaj Meyer HC ’16 Tim Knowlton\\nRachel Genovese BMC ’15\\nPiccolo Christian Fagre HC ’16\\nKayoung Lee HC ’16 William Ristow HC ’16\\nThomas Bowden\\nFlute Bradley Broomfield\\nBJ Hillinck HC ’15\\nEvangeline Krajewski HC ’15 Piano/Celeste\\nBeth Manus\\nOboe John Bailey\\nJocelyn Plant\\nJoshua Bulos HC ’16 Orchestra Manager\\nVanessa Van Sickle\\nEnglish Horn\\nDavid Rosenfeld'), Document(id='73b093b9-b5f3-4469-bf11-e9fb9eb8baa8', metadata={'Term': 'Fall', 'Ensemble_Type': 'Choral', 'total_pages': 8, 'page': 0, 'CreationDate': \"D:20140623232526Z00'00'\", 'file_path': 'C:\\\\Users\\\\charl\\\\Documents\\\\VSCode\\\\HC All Programs\\\\Files\\\\PDFs\\\\2. Family Weekend Choral Program-2013.pdf', 'Year': '2013', 'start_index': 7349, 'source': '2. Family Weekend Choral Program-2013.pdf'}, page_content=\"Muyuan Li, HC ‘15 Troy Sheaffer, HC '00 Tianyi Yang, HC ‘15\\nSteven Lindell, HC fac Randall Shupp, comm\\nCHORALE ORCHESTRA\\nViolin I Cello Bassoon\\nKirin Rajamani HC’14 Michal Schmidt (fac) Emeline Chong\\nAli Can Puskulcu Rachel Goldstein HC’14 Vanessa Van Sickle\\nYue Yang BMC’16 Mirjam Ingolfsson\\nChi Park Adam Crandell (staff) Contrabassoon\\nChloe Lindeman HC’17 Andrew Desiderio Wen Hsieh\\nLorenzo Raval Erin Busch\\nJames AkinakaHC’16 Horns\\nBass\\nMarie Greaney HC’14 Ben Mulholland\\nNancy Merriam (staff)\\nSet Hanes\\nMartin Richard HC’14\\nViolin II Alexis Morris\\nBrent Edmondson\\nSara Bowers Matt Searing\\nMichael Chaffin\\nMolly Quay-\\xad‐de la Vallee\\nHC’14 Trumpets\\nPiccolo\\nLaura Norris Brian Rascon\\nKatherine Barbato\\nKatie Rowlett HC’16 Katie Miller\\nLindsey Gamble Flute\\nErin Gartland SJU BJ Hillinck HC’15 Trombones\\nNatasha Loomis Greg Strohman\\nViola Joshua Popejoy\\nCarol Briselli (fac) Oboe Matt Cohen\\nChristine Tai BMC‘17 Jocelyn Plant\\nEliana Chavkin BMC’17 Janet Monroe BMC’17 Percussion\"), Document(id='63b809a2-e1e2-4cbc-982a-dc395a994663', metadata={'Ensemble_Type': 'Mixed', 'Term': 'Fall', 'page': 0, 'CreationDate': \"D:20171024192215Z00'00'\", 'file_path': 'C:\\\\Users\\\\charl\\\\Documents\\\\VSCode\\\\HC All Programs\\\\Files\\\\PDFs\\\\5. Family Weekend Program 2017.pdf', 'total_pages': 6, 'start_index': 3946, 'source': '5. Family Weekend Program 2017.pdf', 'Year': '2017'}, page_content=\"Pilar Navarro HC ’20 BASSOON Graham Peet HC ’19\\nDavid Watkins, Community Manroocha Singh BMC ’18, Principal Sean Woodruff HC ’18\\nEmma Shaw, Alum Maria Buonviri, Guest\\nVIOLA HORN\\nJennifer Jolivert HC ’18, Principal Johanna Fowler HC ’21, Principal\\nKai McGinn BMC ’21, Associate Kristina Gannon, Guest\\nPrincipal Ben Mulholland, Guest\\nHope Chamblee BMC ’18 Joe Brausam, Guest\\nKathleen Corcella BMC ’21\\nTRUMPET\\nCELLO Sam Istvan HC ’21, Co- Principal\\nInes Purcell BMC ’20, Co- Principal Paul Futer, Guest\\nSean Woodruff HC ’18, Co- Principal Shannon Montgomery BMC ’21\\nMatthew Ludwig HC ’21, Co- Principal\\nThe Mainliners\\nRory Kennison '18 Elizabeth DeJong '18 John Burgess '20\\nAri Katz '20 Ezra Hollander '18 Chris Pence '18\\nFrances Condon '21 Tommy Ie '19 Dennis Li '21\\nCaroline Ford '21\\nThe Oxford Blues\\nTori Fleischmann '18 Rina Rosnow '19 Polina Lipskaya '21\\nIsabella Canelo Gordon '18 Christine Anderson '20 Julia Giordano '21\\nJulia Albertson '18 Sarah Savonis '20 Ari Sulpizio '21\"), Document(id='b5eda9e9-521d-46aa-b0ea-09341bf89579', metadata={'source': '6. Family Weekend 2016 program.pdf', 'total_pages': 5, 'CreationDate': \"D:20161025183956Z00'00'\", 'page': 0, 'Ensemble_Type': 'Mixed', 'Year': '2016', 'file_path': 'C:\\\\Users\\\\charl\\\\Documents\\\\VSCode\\\\HC All Programs\\\\Files\\\\PDFs\\\\6. Family Weekend 2016 program.pdf', 'Term': 'Fall', 'start_index': 1595}, page_content='Jennifer Jolivert, HC ’18, Co-Assistant Elisabeth Kamaka, BMC ’18 Ben Mulholland, Guest\\nConcertmistress Sarah Lew, BMC ’18 Kristina Gannon, Guest\\nDiane Moore, HC ’20, Associate Taylor Levine, HC ’18\\nPrincipal Second Violin Maryam Jahanbin, BMC ’19 TRUMPET\\nEun Soo Jang, BMC ’20, Assistant Seth Boyce, HC ’20 Andrew Cornell, HC ’19, Principal\\nPrincipal Second Violin Marilyn Harbert, BMC ’20 Steve Lehman, HC ’19\\nNicole Westerduin, BMC ’18, Erina Kironde, BMC’20 Paul Futer, Guest\\nAssistant Principal Second Violin\\nOlivia DuSold, HC ’18 STRING BASS TROMBONE\\nNicole Westerduin, BMC ’18 Christina Szi, HC ’18 Kevin Medansky, HC ‘19\\nMalia Wenny, HC ’18 Ava Douglas, BMC ’19 Justin Moore, Guest\\nYue Xiu, BMC ’17 Zoe Arditi, HC ’20\\nIan McGroarty, HC ’17 TUBA\\nBrittney Beidelman, BMC ’17 PICCOLO Steve Lakawicz, Guest\\nCarolyn Woodruff HC ’17 Sarah Gift, BMC ’18 (Lutoslawski)\\nMiriam Myers, BMC ’18 PERCUSSION\\nMalini Sharma, BMC ’18 FLUTE Rio Morales, HC ’17'), Document(id='a6a2389e-f647-4a6d-965a-294070a1da1c', metadata={'start_index': 3154, 'Year': '2018', 'page': 0, 'Ensemble_Type': 'Choral', 'total_pages': 8, 'Term': 'Fall', 'file_path': 'C:\\\\Users\\\\charl\\\\Documents\\\\VSCode\\\\HC All Programs\\\\Files\\\\PDFs\\\\8. Chorale Program Fall 2018.pdf', 'source': '8. Chorale Program Fall 2018.pdf', 'CreationDate': 'D:20181204201607Z'}, page_content='Timothy Blankenhorn COMM Jack Hagele COMM Larry Passmore COMM\\nSeth Boyce HC ’20 Stevens Heckscher COMM Mark Rahdert HC ’74\\nMoselle Burke HC ’21 James Jackson HC ’20 Troy Sheaffer HC ’00\\nJackson Cadenhead HC ’21 Steven Lindell HC FAC Robert Sutton HC ’69\\nDylan Dixon HC ’22 Vincent McCarthy COMM Miguel Wise HC ’19\\nAbe Doroshow HC ’21 Stephen Michael COMM Jim Wright HC ’68, BMC FAC\\nGary Gordon COMM Brendan Minihan COMM\\nHaverford-Bryn Mawr Chamber Singers\\nChloe Baumann BMC ’22 Edwin Crockett HC ’22 *Mattias Lundberg HC ’20\\nElinor Berger BMC ’22 Adam Friedman-Brown HC ’22 Nathan Merrill HC ’20\\n*Alice Berry BMC ’19 Em Groves BMC ’21 Cole Roland HC ’21\\nRachel Brodie HC ’19 Tommy Ie HC ’19 Daisy Shepherd BMC ’22\\nEllen Carlson HC ’22 Sashini Kannan BMC ’19 Eliza Sherman-Daniels HC ’21\\n*Grace Coberly HC ’21 David King HC ’20 Robbie Spratt HC ’21\\nCaleb Conner HC ’20 Lexi Lampard BMC ’20 Bilge Yilmaz HC ’21\\n* - member of advisory council\\nBi-Co Chorale Orchestra\\nViolin I Cello Flute Trumpet')]\n\n\n\n\nClearly, we didn’t pull the right documents in the above prompt. This is where the metadata filters will come in, once we set them up.\n\n\nCode\nresult = graph.invoke({\"question\": \"Who are some trumpet players in the haverford-bryn mawr orchestra?\"})\n\nprint(f'Answer: {result[\"answer\"]}')\nprint(\"\\nSources:\")\nfor source in result[\"context\"]:\n    print(f'Source: {source.metadata[\"source\"]}')\n\n\nAnswer: Some trumpet players in the Haverford-Bryn Mawr Orchestra include Christian Fagre HC ’16, Sam Istvan HC ’21, and Andrew Cornell HC ’20.\n\nSources:\nSource: 19. Chorale Program Spring 2013.pdf\nSource: 9. Chorale Program Fall 2011.pdf\nSource: 6. Chorale Program Fall 2012.pdf\nSource: HC Family Weekend 08 program.pdf\nSource: 8. Chorale Program Fall 2019.pdf\nSource: 7. Orchestra Program Fall 2018.pdf\nSource: 2. Family Weekend Choral Program-2013.pdf\nSource: 10. Chorale Program Fall 2010.pdf\nSource: 8. Chorale Program Fall 2018.pdf\nSource: HC Family Weekend 08 program.pdf\n\n\n\n\n\nAs you can see, it’s working pretty well, but the similarity search isn’t always pulling the right documents. If we could add a simple filter, such as specifying the year or ensemble type, our results would be much better, without having to do any extra calls to the API.\nSetting up a filter in similarity search:\n\n\nCode\nvector_store.similarity_search(\"Who was the principle trumpet player in the Haverford-Bryn Mawr Orchestra in 2019?\", k=4, filter={\"Ensemble_Type\": \"Orchestra\"})\n\n\n[Document(id='6178eb27-1284-4041-8289-1d804847fcf7', metadata={'total_pages': 7, 'start_index': 776, 'file_path': 'C:\\\\Users\\\\charl\\\\Documents\\\\VSCode\\\\HC All Programs\\\\Files\\\\PDFs\\\\9. Orchestra Program Fall 2010.pdf', 'source': '9. Orchestra Program Fall 2010.pdf', 'Ensemble_Type': 'Orchestra', 'Term': 'Fall', 'CreationDate': \"D:20160524173625Z00'00'\", 'page': 0, 'Year': '2010'}, page_content='Josh Bucheister, ’14, Associate Rachael Goldstein, ’14 Co- Principal Katie Van Aken, ’12 %\\nConcertmaster Ezekiel Barnett, ’13 Assistant Principal Elizabeth Biernat, ’14@\\nEthan Joseph, ’11, Assistant Concertmaster Delaney Page, ’12 Kristina Kronauer, ’13\\nXinbei Guan, ’14, Assistant Concertmaster Laura Alexander, ’11 Kristina Gannon **\\nSarah Capasso, ’11 Noory O, ’13\\nDrew Twitchell, ’11 Erin Korth, ’13 Trumpet\\nNora Schmidt, ’12 Mary Schultz, ’12 Ian Gavigan, ’14 &@\\nTiffany Fritz, ’12 Seoung Won Jung, ’14 Linus Marco, ’13\\nYiran Zhang , ’14 Kathryn Hayden, ’14 Chelsea Miller, ’11* %\\nMarie Greaney, ’14 Emily Scott, ’14\\nMolly Quay-de la Vallee, ’14 Christina Lee, ’14 Trombone\\nJacob Lowy, ’14 Vincent Dioguardi, ’14\\nJessica Tan, ’13 Bass Douglas Laustsen **\\nAlex Cahill, ’11, Principal Derek Paquette **\\n2nd Violin Martin Richard, ’14\\nMicah John Walter, ’14, Principal Tuba\\nMolly Quay-de la Vallee, ’14, Assistant Piccolo Steve Lakawicz **\\nPrincipal Sara Landers, ’13'),\n Document(id='9c77dcbe-f7f9-483e-ad11-e2777684a2f8', metadata={'Term': 'Fall', 'CreationDate': \"D:20161115193935Z00'00'\", 'source': '8. Orchestra Program Fall 2016.pdf', 'Ensemble_Type': 'Orchestra', 'start_index': 776, 'total_pages': 4, 'page': 0, 'file_path': 'C:\\\\Users\\\\charl\\\\Documents\\\\VSCode\\\\HC All Programs\\\\Files\\\\PDFs\\\\8. Orchestra Program Fall 2016.pdf', 'Year': '2016'}, page_content='Co –Concertmistress (Mendelssohn, Ines Purcell, BMC ’20, Associate Matthew Abruzzo, HC ’17\\nLutoslawski) Principal\\nHORN\\nKatheryn Croddy, BMC ’20, Elisabeth Kamaka, BMC ’18\\nKatherine Allen, HC ’17, Co-\\nCo –Concertmistress (Schubert) Sarah Lew, BMC ’18\\nPrincipal (Mendelssohn/ Schubert)\\nKatherine Travisano, HC ’20, Co- Taylor Levine, HC ’18\\nAlexandra Lin, HC ’19, Co-\\nAssistant Concertmistress Maryam Jahanbin, BMC ’19\\nPrincipal (Lutoslawski)\\nJennifer Jolivert, HC ’18, Co-Assistant Seth Boyce, HC ’20\\nJonathan Cookmeyer, HC ’17\\nConcertmistress Marilyn Harbert, BMC ’20\\nRyan Hill, HC ’19\\nDiane Moore, HC ’20, Associate Erina Kironde, BMC’20\\nKristina Gannon, Guest\\nPrincipal Second Violin\\nNicole Westerduin, BMC ’18, STRING BASS\\nTRUMPET\\nAssistant Principal Second Violin Christina Szi, HC ’18\\nAndrew Cornell, HC ’19, Principal\\nOlivia DuSold, HC ’18 Ava Douglas, BMC ’19\\nSteve Lehman, HC ’19\\nNicole Westerduin, BMC ’18 Zoe Arditi, HC ’20\\nPaul Futer, Guest\\nMalia Wenny, HC ’18'),\n Document(id='a1cdd901-69f8-40ab-b3a1-351df3af13db', metadata={'total_pages': 4, 'file_path': 'C:\\\\Users\\\\charl\\\\Documents\\\\VSCode\\\\HC All Programs\\\\Files\\\\PDFs\\\\Fall 11-19-21 Orchestra Program Fall 2021.pdf', 'start_index': 1586, 'Ensemble_Type': 'Orchestra', 'source': 'Fall 11-19-21 Orchestra Program Fall 2021.pdf', 'Term': 'Fall', 'Year': '2021', 'page': 0, 'CreationDate': 'D:20211117123448Z'}, page_content='Elise Phung BMC ’24 Associate Principal\\nKatherine Hong HC ’24 Co-Associate Principal BASSOON\\nSophie Gardiner HC ’25 Co-Assistant Principal Kieran Mulligan HC ’25, Co-Principal (Tan\\nMaria Yea HC ’22 Dun*/Beethoven*/Smetana)\\nAlana Burgess BMC ’24 Spencer Smith BMC ’25 Co-Principal (Smetana*/Tan\\nKayla Camille BMC ’25 Dun/Beethoven)\\nIsabel Melendez HC ’25 Maria Buonviri, Guest\\nSophie Booker BMC ’25\\nMaya Geiss BMC ’25 HORN\\nZiwei Tan BMC ’25 Bethany Quist BMC ’25, Co-Principal\\n(Beethoven*/Tan Dun*/Smetana)\\nCELLO Sofia Vinci BMC ’25, Co-Principal (Smetana*/\\nNina Mandel HC ’22, Co-Principal Cello Beethoven/Tan Dun*)\\nDavid Betz HC ’24, Co-Principal Cello Charlie Everett, Community\\nJack Vice HC ’25, Co-Associate Principal Kristina Gannon, Guest\\nIvy Xie HC ’25, Assistant Principal\\nRosalie Tarsala BMC ’23 TRUMPET\\nAni Dixit BMC ’22 Jay Whitesell HC ’24, Principal\\nLogan Zurita McKinnon HC ’24 Harrison Lennertz HC ’24\\nAdeline W. DeHarpporte BMC ’25 Paul Futer, Guest\\nDOUBLE BASS TROMBONE'),\n Document(id='343dfabd-b6a4-46ea-8fed-dde54841e8fc', metadata={'start_index': 782, 'file_path': 'C:\\\\Users\\\\charl\\\\Documents\\\\VSCode\\\\HC All Programs\\\\Files\\\\PDFs\\\\25. Orchestra Program Spring 2017.pdf', 'total_pages': 4, 'page': 0, 'Ensemble_Type': 'Orchestra', 'CreationDate': \"D:20170615155942Z00'00'\", 'source': '25. Orchestra Program Spring 2017.pdf', 'Year': '2017', 'Term': 'Spring'}, page_content='Alexandra Lin, HC ’19, Principal\\nKatherine Travisano, HC ’20, Elisabeth Kamaka, BMC ’18\\nJonathan Cookmeyer, HC ’17\\nCo-Assistant Concertmistress Maryam Jahanbin, BMC ’19\\nJonathan Cookmeyer, HC ’17\\n(Dvorak) Seth Boyce, HC ’20\\nKristina Gannon, Guest\\nJennifer Jolivert, HC ’18, Marilyn Harbert, BMC ’20\\nCo-Assistant Concertmistress Erina Kironde, BMC’20\\nTRUMPET\\n(Barber) Gwynne Dulaney, BMC ’19\\nAndrew Cornell, HC ’19, Principal\\nDiane Moore, HC ’20, Samuel Walter, HC ’17\\nSteve Lehman, HC ’19\\nAssociate Principal 2nd Violin\\nNicole Westerduin, BMC ’18, STRING BASS\\nTROMBONE\\nAssistant Principal 2nd Violin Christina Szi, HC ’18\\nKevin Medansky, HC ‘19\\nOlivia DuSold, HC ’18 Zoe Arditi, HC ’20\\nLyman McBride, Guest\\nNicole Westerduin, BMC ’18\\nSean McCusker, Guest\\nMalia Wenny, HC ’18 PICCOLO\\nYue Xiu, BMC ’17 Sarah Gift, BMC ’18 TUBA\\nIan McGroarty, HC ’17 Steve Lakawicz, Guest\\nBrittney Beidelman, BMC ’17 FLUTE\\nGeorgia Meyer, HC ’19 Sarah Gift, BMC ’18, PIANO')]\n\n\nHere, we repeat content from earlier, making this our new “reestablishment” cell. Running this cell allows the RAG to work. Then, we add filters within the LangGraph.\n\n\nCode\n# Setting up chat model\nimport getpass\nimport os\n\nif not os.environ.get(\"OPENAI_API_KEY\"):\n  os.environ[\"OPENAI_API_KEY\"] = getpass.getpass(\"Enter API key for OpenAI: \")\n\nfrom langchain.chat_models import init_chat_model\n\nllm = init_chat_model(\"gpt-4o-mini\", model_provider=\"openai\")\n\n# Setting up embeddings\nimport getpass\nimport os\n\nif not os.environ.get(\"OPENAI_API_KEY\"):\n  os.environ[\"OPENAI_API_KEY\"] = getpass.getpass(\"Enter API key for OpenAI: \")\n\nfrom langchain_openai import OpenAIEmbeddings\n\nembeddings = OpenAIEmbeddings(model=\"text-embedding-3-large\")\n\n# Reestablishing up our persist directory for Chroma\nfrom langchain_chroma import Chroma\n\nvector_store = Chroma(\n    collection_name=\"example_collection\",\n    embedding_function=embeddings,\n    persist_directory=\"./chroma_langchain_db\",  # Where we stored our data before\n)\n\n# Reestablishing retrieval and generation functions\nfrom langchain_core.documents import Document\nfrom typing_extensions import List, TypedDict, Optional\nfrom langchain_core.prompts import ChatPromptTemplate\n\nprompt = ChatPromptTemplate.from_messages([\n    (\"system\", \"You are a helpful assistant. Use only the information provided in the context below to answer the question. If the answer is not in the context, say 'I don't know' or 'The information is not available.'\"),\n    (\"human\", \"Context:\\n{context}\\n\\nQuestion: {question}\")\n])\n\nclass State(TypedDict):\n    question: str\n    filter: Optional[dict]\n    context: List[Document]\n    answer: str\n\ndef apply_filter(state: State):\n    \"\"\"\n    Apply a filter to the state based on the user's input.\n    The filter is expected to be a dictionary that can be used in the similarity search.\n    \"\"\"\n    if \"filter\" in state and state[\"filter\"]:\n        # If a filter is provided, use it\n        state[\"filter\"] = {k: v for k, v in state[\"filter\"].items() if v is not None}\n    else:\n        # If no filter is provided, set it to None\n        state[\"filter\"] = None\n    return state\n\ndef retrieve(state: State):\n    filter_dict = state[\"filter\"] if state.get(\"filter\") else None\n    retrieved_docs = vector_store.similarity_search(state[\"question\"], k=10, filter=filter_dict)\n    return {\"context\": retrieved_docs}\n\ndef generate(state: State):\n    docs_content = \"\\n\\n\".join([doc.page_content for doc in state[\"context\"]])\n    message = prompt.invoke({\"question\": state[\"question\"], \"context\": docs_content})\n    response = llm.invoke(message)\n    return {\"answer\": response.content}\n\n# Reestablishing langgraph\nfrom langgraph.graph import START, StateGraph\n\ngraph_builder = StateGraph(State).add_sequence([apply_filter, retrieve, generate])\ngraph_builder.add_edge(START, \"retrieve\")\ngraph = graph_builder.compile()\n\n\n\n\nCode\nresult = graph.invoke({\n    \"question\": \"Who played trumpet for the orchestra in the year 2019?\", \"filter\": {\"Ensemble_Type\": \"Orchestra\"}})\n\nprint(f'Answer: {result[\"answer\"]}')\nprint(\"\\n\\nSources:\")\nfor i, source in enumerate(result[\"context\"]):\n    print(f'Source {i+1}: {source.metadata[\"source\"]}')\n\n\nAnswer: I don't know.\n\n\nSources:\nSource 1: 21. Orchestra Program-Spring 2012.pdf\nSource 2: 17. Orchestra Program Spring 2013.pdf\nSource 3: 9. Orchestra Program Fall 2010.pdf\nSource 4: 19. Orchestra Program Spring 2016.pdf\nSource 5: Fall 11-19-21 Orchestra Program Fall 2021.pdf\nSource 6: 7. Orchestra Program Fall 2011.pdf\nSource 7: 4. Orchestra Program Fall 2012.pdf\nSource 8: 5. Orchestra Program Fall 2014.pdf\nSource 9: 8. Orchestra Program Fall 2016.pdf\nSource 10: 27. Orchestra Program-Spring 2011.pdf\n\n\n\n\nCode\nresult = graph.invoke({\n    \"question\": \"Who played trumpet for the haverford-bryn mawr orchestra in 2019?\",\n    \"filter\": {\"$and\": [{\"Ensemble_Type\": \"Orchestra\"}, {\"Year\": \"2019\"}]}\n})\n\nprint(f'Answer: {result[\"answer\"]}')\nprint(\"\\n\\nSources:\")\nfor i, source in enumerate(result[\"context\"]):\n    print(f'Source {i+1}: {source.metadata[\"source\"]}')\n\n\nAnswer: The trumpet players for the Haverford-Bryn Mawr College Orchestra in 2019 were Jack Weinstein, HC ’23, and Sam Istvan, HC ’21, who was the principal trumpet. Additionally, Jackie Toben, BMC ’22, was also listed as a Co-Associate Principal Trumpet.\n\n\nSources:\nSource 1: 7. Orchestra Program Fall 2019.pdf\nSource 2: 7. Orchestra Program Fall 2019.pdf\nSource 3: 18. Orchestra Program Spring 2019.pdf\nSource 4: 7. Orchestra Program Fall 2019.pdf\nSource 5: 18. Orchestra Program Spring 2019.pdf\nSource 6: 18. Orchestra Program Spring 2019.pdf\nSource 7: 7. Orchestra Program Fall 2019.pdf\nSource 8: 7. Orchestra Program Fall 2019.pdf\nSource 9: 18. Orchestra Program Spring 2019.pdf\nSource 10: 18. Orchestra Program Spring 2019.pdf\n\n\n\n\n\nWe successfully set up a RAG app with effective filters. We can now “chat” with our data, and “look up” specific information in seconds with a high level of accuracy. The way that this is set up creates a chance of no result, but almost no chance of a purely incorrect answer.\nOur filters, however, were very effective in reducing the chance of no answer. Though they currently require a manual call, a future, streamlined version of this project could interpret a question and auto-apply filters with an LLM call.\nOverall, this project resulted in an effective and rapid way to explore our data."
  },
  {
    "objectID": "HC All Programs/full_concert_programs.html#goals",
    "href": "HC All Programs/full_concert_programs.html#goals",
    "title": "RAG: Haverford College Concert Programs Fall 2009 - Spring 2022",
    "section": "",
    "text": "Create a Retrieval Augmented Generation app for Haverford Concert programs 2009-2022\nImplement metadata filters for more refined context, thus higher chance of accurate responses\n\nIf the kernel restarts, do not run all!! Instead, run the code here."
  },
  {
    "objectID": "HC All Programs/full_concert_programs.html#imports-and-initial-setup",
    "href": "HC All Programs/full_concert_programs.html#imports-and-initial-setup",
    "title": "RAG: Haverford College Concert Programs Fall 2009 - Spring 2022",
    "section": "",
    "text": "Code\n# Setting up chat model\nimport getpass\nimport os\n\nif not os.environ.get(\"OPENAI_API_KEY\"):\n  os.environ[\"OPENAI_API_KEY\"] = getpass.getpass(\"Enter API key for OpenAI: \")\n\nfrom langchain.chat_models import init_chat_model\n\nllm = init_chat_model(\"gpt-4o-mini\", model_provider=\"openai\")\n\n\n\n\nCode\n# Setting up embeddings\nimport getpass\nimport os\n\nif not os.environ.get(\"OPENAI_API_KEY\"):\n  os.environ[\"OPENAI_API_KEY\"] = getpass.getpass(\"Enter API key for OpenAI: \")\n\nfrom langchain_openai import OpenAIEmbeddings\n\nembeddings = OpenAIEmbeddings(model=\"text-embedding-3-large\")\n\n\n\n\nCode\n# Setting up chroma\nfrom langchain_chroma import Chroma\n\nvector_store = Chroma(\n    collection_name=\"example_collection\",\n    embedding_function=embeddings,\n    persist_directory=\"./chroma_langchain_db\",  # Where to save data locally, remove if not necessary\n)"
  },
  {
    "objectID": "HC All Programs/full_concert_programs.html#indexing",
    "href": "HC All Programs/full_concert_programs.html#indexing",
    "title": "RAG: Haverford College Concert Programs Fall 2009 - Spring 2022",
    "section": "",
    "text": "First we have to load all of our documents as text. We use Langchain’s loaders. Then, we merge the CSV metadata with the documents.\n\n\nCode\n# Setting up csv loading\n\nfrom langchain_community.document_loaders.csv_loader import CSVLoader\n\ndef loadCSV(filepath: str) -&gt; list:\n    loader = CSVLoader(file_path=filepath, source_column=\"Filename\",metadata_columns=[\"Category\",\"Year\",\"Term\"])\n    data = loader.load()\n    return data\n\n\n\n\nCode\n# Load CSV\n\ncsv_metadata = loadCSV(\"Files/Concert_Metadata.csv\")\nprint(csv_metadata[0].metadata['source'])\nprint(csv_metadata[1].metadata['Category'])\n\n\n1. Curt Cacioppo _ Ying Li Program.pdf\nChamber\n\n\nHere we use PDFPlumberLoader, rather than the default PyPDFLoader, because it seemed to work better with these specific documents. Both have pros and cons.\n\n\nCode\n# Setting up pdf loading\n\nfrom pathlib import Path\nfrom langchain.document_loaders import PDFPlumberLoader\n\nasync def loadPDF(filepath: str) -&gt; list:\n    loader = PDFPlumberLoader(filepath)\n    pages = []\n    async for page in loader.alazy_load():\n        pages.append(page)   \n    return pages\n\n\ndef get_files_from_directory(directory_path: str) -&gt; list[str]:\n    directory = Path(directory_path)\n    file_paths = [str(file) for file in directory.iterdir() if file.is_file()]\n    return file_paths\n\n\ndirectory_path:str = \"Files/PDFs\"\nfiles: list[str] = get_files_from_directory(directory_path)\n\n\n\n\nCode\n# Load PDFs w/out metadata\nloaded_PDFs: list = []\nfor file in files:\n    pages = await loadPDF(file)\n    loaded_PDFs.append(pages)\n\n\n\n\nCode\n# Check PDF content\nfor i in range(3):\n    document = loaded_PDFs[i]\n    print(f\"Document {i} \\n\")\n    document_content: str = \"\"\n    for document_page in document:\n        document_content += document_page.page_content\n    print(document_content[1000:1200] + \"\\n \\n\")\n\n\nDocument 0 \n\nhy by Curt Cacioppo; video montage by John Thornton\nDigital image and live piano\nSynaesthesis I† (2015)\nartwork by Ying Li; videography by John Thornton\n* world premiere † U.S. premiere\n‡ from the Nav\n \n\nDocument 1 \n\non,\nRockport, Sedona, and Sarasota. Currently cellist of the Banff award-winning Amernet String Quartet,\nEnsemble-in-Residence at Florida International University in Miami, Mr. Calloway was previously\n \n\nDocument 2 \n\nw Music Conference, Five College New Music Festival,\nNorth American Saxophone Alliance Biennial Conference at Texas Tech University, Michigan State\nUniversity, Arizona State University, University of \n \n\n\n\n\n\nCode\n# Check PDF metadata\nfor i in range(3):\n    document = loaded_PDFs[i]\n    print(f\"Document {i} \\n\")\n    document_metadata: list = []\n    for document_page in document:\n        document_metadata += document_page.metadata.items()\n    print(document_metadata)\n\n\nDocument 0 \n\n[('source', 'Files\\\\PDFs\\\\1. Curt Cacioppo _ Ying Li Program.pdf'), ('file_path', 'Files\\\\PDFs\\\\1. Curt Cacioppo _ Ying Li Program.pdf'), ('page', 0), ('total_pages', 2), ('CreationDate', 'D:20160919154334Z'), ('Creator', 'Word'), ('Keywords', ''), ('ModDate', \"D:20161101094302-04'00'\"), ('Producer', 'Mac OS X 10.10.4 Quartz PDFContext'), ('Title', 'Microsoft Word - LIBRARY program.docx'), ('source', 'Files\\\\PDFs\\\\1. Curt Cacioppo _ Ying Li Program.pdf'), ('file_path', 'Files\\\\PDFs\\\\1. Curt Cacioppo _ Ying Li Program.pdf'), ('page', 1), ('total_pages', 2), ('CreationDate', 'D:20160919154334Z'), ('Creator', 'Word'), ('Keywords', ''), ('ModDate', \"D:20161101094302-04'00'\"), ('Producer', 'Mac OS X 10.10.4 Quartz PDFContext'), ('Title', 'Microsoft Word - LIBRARY program.docx')]\nDocument 1 \n\n[('source', 'Files\\\\PDFs\\\\1. Jason Calloway Program 2017.pdf'), ('file_path', 'Files\\\\PDFs\\\\1. Jason Calloway Program 2017.pdf'), ('page', 0), ('total_pages', 2), ('Title', 'Calloway program 2017'), ('Author', 'Nancy Merriam '), ('Subject', ''), ('Producer', 'Mac OS X 10.11.6 Quartz PDFContext'), ('Creator', 'Word'), ('CreationDate', \"D:20170924161250Z00'00'\"), ('ModDate', \"D:20170924161250Z00'00'\"), ('Keywords', ''), ('source', 'Files\\\\PDFs\\\\1. Jason Calloway Program 2017.pdf'), ('file_path', 'Files\\\\PDFs\\\\1. Jason Calloway Program 2017.pdf'), ('page', 1), ('total_pages', 2), ('Title', 'Calloway program 2017'), ('Author', 'Nancy Merriam '), ('Subject', ''), ('Producer', 'Mac OS X 10.11.6 Quartz PDFContext'), ('Creator', 'Word'), ('CreationDate', \"D:20170924161250Z00'00'\"), ('ModDate', \"D:20170924161250Z00'00'\"), ('Keywords', '')]\nDocument 2 \n\n[('source', 'Files\\\\PDFs\\\\1. Jonathan Hulting-Cohen Program.pdf'), ('file_path', 'Files\\\\PDFs\\\\1. Jonathan Hulting-Cohen Program.pdf'), ('page', 0), ('total_pages', 2), ('Title', 'Jonathan Hulting-Cohen Program'), ('Author', 'Nancy Merriam '), ('Subject', ''), ('Producer', 'Mac OS X 10.11.6 Quartz PDFContext'), ('Creator', 'Word'), ('CreationDate', \"D:20200609163839Z00'00'\"), ('ModDate', \"D:20200609163839Z00'00'\"), ('Keywords', ''), ('source', 'Files\\\\PDFs\\\\1. Jonathan Hulting-Cohen Program.pdf'), ('file_path', 'Files\\\\PDFs\\\\1. Jonathan Hulting-Cohen Program.pdf'), ('page', 1), ('total_pages', 2), ('Title', 'Jonathan Hulting-Cohen Program'), ('Author', 'Nancy Merriam '), ('Subject', ''), ('Producer', 'Mac OS X 10.11.6 Quartz PDFContext'), ('Creator', 'Word'), ('CreationDate', \"D:20200609163839Z00'00'\"), ('ModDate', \"D:20200609163839Z00'00'\"), ('Keywords', '')]\n\n\nSo, some of this info is useful and some isn’t.\nWe should keep: * Source (but clean it so it’s just the filename) * Filepath * Page * Total pages * Title * CreationDate\nWe should remove: * Author (not relevant) * Subject (blank) * Producer (not relevant) * Creator (not relevant) * ModDate (not relevant) * Keywords (empty)\nEssentially, we want to preserve the fields that will help the embeddings model place these documents in the vector database, but remove extra fields that will confuse the model.\n\n\nCode\n# Cleaning the sources to match with the CSV source names\nfor source in loaded_PDFs:\n    for page in source:\n        page.metadata['source'] = page.metadata['source'].replace(\"Files\\\\PDFs\\\\\",\"\")\n\nfor i in range(5):\n    source = loaded_PDFs[i]\n    print(source[0].metadata['source'])\n\n\n1. Curt Cacioppo _ Ying Li Program.pdf\n1. Jason Calloway Program 2017.pdf\n1. Jonathan Hulting-Cohen Program.pdf\n1. Jordan Dodson Program.pdf\n1. Matthew Bengtson Program.pdf\n\n\n\n\nCode\n# Sorting both the CSV and PDF metadata to match\ncsv_metadata.sort(key=lambda x: x.metadata['source'])\nloaded_PDFs.sort(key=lambda x: x[0].metadata['source'])\n\n\nThe following cell ensures that we have matches between PDF’s and CSV rows.\n\n\nCode\n# Use assert to ensure the sources match\nfor i in range(len(csv_metadata)):\n    assert csv_metadata[i].metadata['source'] == loaded_PDFs[i][0].metadata['source'], f\"Mismatch at index {i}: {csv_metadata[i].metadata['source']} != {loaded_PDFs[i][0].metadata['source']}\"\n\n\n\n\nWe should remove: * Author (not relevant) * Subject (blank) * Producer (not relevant) * Creator (not relevant) * ModDate (not relevant) * Keywords (empty)\n\n\nCode\nprint(len(csv_metadata))\nprint(len(loaded_PDFs))\n\n\n356\n356\n\n\n\n\nCode\nfor i in range(len(csv_metadata)):\n    row = csv_metadata[i]\n    for pdf in loaded_PDFs:\n        assert row.metadata[\"source\"] == loaded_PDFs[i][0].metadata[\"source\"], f\"Mismatch in source for row {i}: {row.metadata['source']} != {loaded_PDFs[i][0].metadata['source']}\"\n\n\n\n\nCode\nirrelevant_metadata = ['Author', 'Subject', 'Producer', 'ModDate', 'Keywords', 'Creator', 'Title']\n\nfor i in range(len(loaded_PDFs)):\n    document = loaded_PDFs[i]\n    for page in document:\n        for key in irrelevant_metadata:\n            if key in page.metadata:\n                del page.metadata[key]\n        # Add the category and year from the CSV metadata\n        assert page.metadata['source'] == csv_metadata[i].metadata['source'], \"Source mismatch between PDF and CSV metadata\"\n        page.metadata['Ensemble_Type'] = csv_metadata[i].metadata['Category']\n        page.metadata['Year'] = csv_metadata[i].metadata['Year']\n        page.metadata['Term'] = csv_metadata[i].metadata['Term']\n    if i &lt; 5:\n        print(document[0].metadata)\n\n\n{'source': '1. Curt Cacioppo _ Ying Li Program.pdf', 'file_path': 'Files\\\\PDFs\\\\1. Curt Cacioppo _ Ying Li Program.pdf', 'page': 0, 'total_pages': 2, 'CreationDate': 'D:20160919154334Z', 'Ensemble_Type': 'Chamber', 'Year': '2016', 'Term': 'Fall'}\n{'source': '1. Jason Calloway Program 2017.pdf', 'file_path': 'Files\\\\PDFs\\\\1. Jason Calloway Program 2017.pdf', 'page': 0, 'total_pages': 2, 'CreationDate': \"D:20170924161250Z00'00'\", 'Ensemble_Type': 'Chamber', 'Year': '2017', 'Term': 'Fall'}\n{'source': '1. Jonathan Hulting-Cohen Program.pdf', 'file_path': 'Files\\\\PDFs\\\\1. Jonathan Hulting-Cohen Program.pdf', 'page': 0, 'total_pages': 2, 'CreationDate': \"D:20200609163839Z00'00'\", 'Ensemble_Type': 'Chamber', 'Year': '2018', 'Term': 'Fall'}\n{'source': '1. Jordan Dodson Program.pdf', 'file_path': 'Files\\\\PDFs\\\\1. Jordan Dodson Program.pdf', 'page': 0, 'total_pages': 2, 'CreationDate': \"D:20200609143156Z00'00'\", 'Ensemble_Type': 'Chamber', 'Year': '2019', 'Term': 'Fall'}\n{'source': '1. Matthew Bengtson Program.pdf', 'file_path': 'Files\\\\PDFs\\\\1. Matthew Bengtson Program.pdf', 'page': 0, 'total_pages': 4, 'CreationDate': \"D:20160524162604Z00'00'\", 'Ensemble_Type': 'Chamber', 'Year': '2015', 'Term': 'Fall'}\n\n\n\n\nCode\n# Convert each sublist into a single document\nfrom langchain.schema import Document\ndef convert_list_to_document(pages: list) -&gt; Document:\n    document_content: str = \"\"\n    for page in pages:\n        document_content += page.page_content\n    document: Document = Document(\n        page_content=document_content,\n        metadata=pages[0].metadata  # Use the metadata from the first page\n    )\n    return document\n\n# Convert loaded PDFs to documents\ndocs = []\nfor source in loaded_PDFs:\n    doc = convert_list_to_document(source)\n    docs.append(doc)  # Append the single Document object\n\n\n\n\nCode\n# Double check metadata\nfor i in range(90,98):\n    print(f\"Document {i} Metadata: {docs[i].metadata}\")\n\n\nDocument 90 Metadata: {'source': '18. Orchestra Program Spring 2019.pdf', 'file_path': 'Files\\\\PDFs\\\\18. Orchestra Program Spring 2019.pdf', 'page': 0, 'total_pages': 7, 'CreationDate': 'D:20190412224743Z', 'Ensemble_Type': 'Orchestra', 'Year': '2019', 'Term': 'Spring'}\nDocument 91 Metadata: {'source': '18. Steven Mayer-Matthew Plenk Program.pdf', 'file_path': 'Files\\\\PDFs\\\\18. Steven Mayer-Matthew Plenk Program.pdf', 'page': 0, 'total_pages': 4, 'CreationDate': \"D:20180329155545Z00'00'\", 'Ensemble_Type': 'Chamber', 'Year': '2018', 'Term': 'Spring'}\nDocument 92 Metadata: {'source': '18. Taiko _ Dance Program 2016.pdf', 'file_path': 'Files\\\\PDFs\\\\18. Taiko _ Dance Program 2016.pdf', 'page': 0, 'total_pages': 4, 'CreationDate': 'D:20160523150851Z', 'Ensemble_Type': 'Chamber', 'Year': '2016', 'Term': 'Spring'}\nDocument 93 Metadata: {'source': '19. Chamber Singers Rotunda Program 2015.pdf', 'file_path': 'Files\\\\PDFs\\\\19. Chamber Singers Rotunda Program 2015.pdf', 'page': 0, 'total_pages': 1, 'CreationDate': \"D:20160524153321Z00'00'\", 'Ensemble_Type': 'Choral', 'Year': '2015', 'Term': 'Spring'}\nDocument 94 Metadata: {'source': '19. Chorale Program Spring 2013.pdf', 'file_path': 'Files\\\\PDFs\\\\19. Chorale Program Spring 2013.pdf', 'page': 0, 'total_pages': 16, 'CreationDate': \"D:20160524164621Z00'00'\", 'Ensemble_Type': 'Choral', 'Year': '2013', 'Term': 'Spring'}\nDocument 95 Metadata: {'source': '19. Curt Cacioppo and Friends Program.pdf', 'file_path': 'Files\\\\PDFs\\\\19. Curt Cacioppo and Friends Program.pdf', 'page': 0, 'total_pages': 10, 'CreationDate': \"D:20200615113320-04'00'\", 'Ensemble_Type': 'Chamber', 'Year': '2019', 'Term': 'Spring'}\nDocument 96 Metadata: {'source': '19. David Botwinik Program.pdf', 'file_path': 'Files\\\\PDFs\\\\19. David Botwinik Program.pdf', 'page': 0, 'total_pages': 12, 'CreationDate': \"D:20120219225158-05'00'\", 'Ensemble_Type': 'Vocal', 'Year': '2012', 'Term': 'Spring'}\nDocument 97 Metadata: {'source': '19. Lutton Fund-This Room-Program.pdf', 'file_path': 'Files\\\\PDFs\\\\19. Lutton Fund-This Room-Program.pdf', 'page': 0, 'total_pages': 2, 'CreationDate': \"D:20160524180634Z00'00'\", 'Ensemble_Type': 'Chamber', 'Year': '', 'Term': ''}\n\n\n\n\n\n\n\n\nCode\nfrom langchain_text_splitters import RecursiveCharacterTextSplitter\n\ntext_splitter = RecursiveCharacterTextSplitter(\n    chunk_size=1000,  # chunk size (characters)\n    chunk_overlap=200,  # chunk overlap (characters)\n    add_start_index=True,  # track index in original document\n)\nall_splits = text_splitter.split_documents(docs)\n\nprint(f\"Split {len(docs)} PDFs into {len(all_splits)} sub-documents.\")\n\n\nSplit 356 PDFs into 3757 sub-documents.\n\n\n\n\nCode\n# If we run this again when reestablishing variables, it will duplicate documents and charge us\n\n\n# document_ids = vector_store.add_documents(documents=all_splits) \n# print(document_ids[:3])\n\n# \n\n\n['f6b62a29-03d0-4b4c-a5f8-3a841d114756', '63653de1-d878-497f-b752-385c2717fe76', '28e3571c-4a8e-4a33-8937-ccc553c5cbe3']\n\n\nThe above code is commented out to avoid adding documents again, which would duplicate them in the vector store. The vector store should already be set up in /chroma_langchain_db"
  },
  {
    "objectID": "HC All Programs/full_concert_programs.html#setting-up-retrieval-and-generation",
    "href": "HC All Programs/full_concert_programs.html#setting-up-retrieval-and-generation",
    "title": "RAG: Haverford College Concert Programs Fall 2009 - Spring 2022",
    "section": "",
    "text": "We use LangGraph and a State class to set up our RAG. LangGraph allows us to set up clear steps, and the State allows us to pass information between each step.\nSee the graph below the 3 code cells.\n\n\nCode\nfrom langchain_core.documents import Document\nfrom typing_extensions import List, TypedDict\nfrom langchain_core.prompts import ChatPromptTemplate\n\nprompt = ChatPromptTemplate.from_messages([\n    (\"system\", \"You are a helpful assistant. Use only the information provided in the context below to answer the question. If the answer is not in the context, say 'I don't know' or 'The information is not available.'\"),\n    (\"human\", \"Context:\\n{context}\\n\\nQuestion: {question}\")\n])\n\nclass State(TypedDict):\n    question: str\n    context: List[Document]\n    answer: str\n\ndef retrieve(state: State):\n    retrieved_docs = vector_store.similarity_search(state[\"question\"], k = 10)\n    return {\"context\": retrieved_docs}\n\ndef generate(state: State):\n    docs_content = \"\\n\\n\".join([doc.page_content for doc in state[\"context\"]])\n    message = prompt.invoke({\"question\": state[\"question\"], \"context\": docs_content})\n    response = llm.invoke(message)\n    return {\"answer\": response.content}\n\n\n\n\nCode\nfrom langgraph.graph import START, StateGraph\n\ngraph_builder = StateGraph(State).add_sequence([retrieve, generate])\ngraph_builder.add_edge(START, \"retrieve\")\ngraph = graph_builder.compile()\n\n\n\n\nCode\nprint(graph.get_graph().draw_ascii())\n\n\n+-----------+  \n| __start__ |  \n+-----------+  \n      *        \n      *        \n      *        \n+----------+   \n| retrieve |   \n+----------+   \n      *        \n      *        \n      *        \n+----------+   \n| generate |   \n+----------+   \n      *        \n      *        \n      *        \n +---------+   \n | __end__ |   \n +---------+"
  },
  {
    "objectID": "HC All Programs/full_concert_programs.html#run-this-cell-to-reestablish-variables-and-keys",
    "href": "HC All Programs/full_concert_programs.html#run-this-cell-to-reestablish-variables-and-keys",
    "title": "RAG: Haverford College Concert Programs Fall 2009 - Spring 2022",
    "section": "",
    "text": "Code\n# Setting up chat model\nimport getpass\nimport os\n\nif not os.environ.get(\"OPENAI_API_KEY\"):\n  os.environ[\"OPENAI_API_KEY\"] = getpass.getpass(\"Enter API key for OpenAI: \")\n\nfrom langchain.chat_models import init_chat_model\n\nllm = init_chat_model(\"gpt-4o-mini\", model_provider=\"openai\")\n\n# Setting up embeddings\nimport getpass\nimport os\n\nif not os.environ.get(\"OPENAI_API_KEY\"):\n  os.environ[\"OPENAI_API_KEY\"] = getpass.getpass(\"Enter API key for OpenAI: \")\n\nfrom langchain_openai import OpenAIEmbeddings\n\nembeddings = OpenAIEmbeddings(model=\"text-embedding-3-large\")\n\n# Reestablishing up our persist directory for Chroma\nfrom langchain_chroma import Chroma\n\nvector_store = Chroma(\n    collection_name=\"example_collection\",\n    embedding_function=embeddings,\n    persist_directory=\"./chroma_langchain_db\",  # Where we stored our data before\n)\n\n# Reestablishing retrieval and generation functions\nfrom langchain_core.documents import Document\nfrom typing_extensions import List, TypedDict\n\nfrom langchain_core.prompts import ChatPromptTemplate\n\nprompt = ChatPromptTemplate.from_messages([\n    (\"system\", \"You are a helpful assistant. Use only the information provided in the context below to answer the question. If the answer is not in the context, say 'I don't know' or 'The information is not available.'\"),\n    (\"human\", \"Context:\\n{context}\\n\\nQuestion: {question}\")\n])\n\nclass State(TypedDict):\n    question: str\n    context: List[Document]\n    answer: str\n\ndef retrieve(state: State):\n    retrieved_docs = vector_store.similarity_search(state[\"question\"], k = 10)\n    return {\"context\": retrieved_docs}\n\ndef generate(state: State):\n    docs_content = \"\\n\\n\".join([doc.page_content for doc in state[\"context\"]])\n    message = prompt.invoke({\"question\": state[\"question\"], \"context\": docs_content})\n    response = llm.invoke(message)\n    return {\"answer\": response.content}\n\n# Reestablishing langgraph\nfrom langgraph.graph import START, StateGraph\n\ngraph_builder = StateGraph(State).add_sequence([retrieve, generate])\ngraph_builder.add_edge(START, \"retrieve\")\ngraph = graph_builder.compile()"
  },
  {
    "objectID": "HC All Programs/full_concert_programs.html#the-basic-rag-is-set-up---lets-ask-some-questions-about-our-data",
    "href": "HC All Programs/full_concert_programs.html#the-basic-rag-is-set-up---lets-ask-some-questions-about-our-data",
    "title": "RAG: Haverford College Concert Programs Fall 2009 - Spring 2022",
    "section": "",
    "text": "Code\nresult = graph.invoke({\"question\": \"Who has conducted the Chamber Singers over the years?\"})\n\nprint(f'Answer: {result[\"answer\"]}')\nprint(f'Context: {result[\"context\"]}\\n\\n')\n\n\nAnswer: The Chamber Singers have been conducted by Thomas Lloyd and Ng Tian Hui during the academic year of 2010/11, with Lloyd being the director before taking a sabbatical and Ng Tian Hui leading in his absence. More recently, Dr. Nathan Zullinger has been the conductor.\nContext: [Document(id='13720808-826c-45c8-b695-85c2b85d9445', metadata={'total_pages': 12, 'start_index': 22880, 'Year': '2011', 'Ensemble_Type': 'Choral', 'file_path': 'C:\\\\Users\\\\charl\\\\Documents\\\\VSCode\\\\HC All Programs\\\\Files\\\\PDFs\\\\30. Chamber Singers-Recalling Ariadne Program.pdf', 'source': '30. Chamber Singers-Recalling Ariadne Program.pdf', 'Term': 'Spring', 'page': 0, 'CreationDate': \"D:20160524182813Z00'00'\"}, page_content='academic year of 2010/11, the choir is led by Ng Tian Hui while Prof. Lloyd is away on sabbatical.\\nAs the premier vocal ensemble in the bi-college community, the Chamber Singers performs challenging repertoire ranging from\\nthe Renaissance to the present day in a variety of languages and styles. This season’s repertoire will range from 16th century\\nParis to contemporary South Africa; from Bach’s Magnificat, to Monteverdi’s Lamento d’Arianna, to new commissions by\\ncomposers based in Austria, Singapore and the US.\\nThe Chamber Singers returned from Turkey and their sixth international cultural exchange tour in the spring of 2010, and will\\nembark on a national tour in Spring 2011 including an exchange with Amherst College and a performance at Yale University’s\\nMarquand Chapel. In addition, the choir looks forward to a session with Meredith Monk, and an invitation to the College Choir\\nSeries at the Church of the Holy Trinity, Rittenhouse Square, in Philadelphia.\\nMelanie Bafitis, composer'), Document(id='1bd496bb-1591-40df-ac65-042ccb2eb9a9', metadata={'CreationDate': 'D:20181210222834Z', 'start_index': 1570, 'total_pages': 8, 'page': 0, 'Year': '2018', 'Ensemble_Type': 'Chamber', 'Term': 'Fall', 'file_path': 'C:\\\\Users\\\\charl\\\\Documents\\\\VSCode\\\\HC All Programs\\\\Files\\\\PDFs\\\\9. Chamber Singers Winter Program 2018.pdf', 'source': '9. Chamber Singers Winter Program 2018.pdf'}, page_content='Chamber Singers is comprised of singers from many disciplines across the Bi-Co. In addition to\\nstudents majoring in music, the ensemble also attracts students who wish to perform challenging\\nchoral works in a more intimate setting. Their repertoire is drawn from the Renaissance through\\nthe present day, with frequent explorations of music from cultures that are not widely\\nrepresented in the greater choral world. Chamber Singers has collaborated with arts organizations\\nand colleges throughout the northeastern United States and has undertaken foreign tours, most\\nrecently to Germany in 2017. In addition to singing, the group enjoys a family atmosphere that is\\nfostered through an annual retreat and numerous social opportunities throughout the year.\\nDr. Nathan Zullinger, conductor\\nNathan Zullinger is an Assistant Professor at Haverford College, where he conducts the Chorale,\\nthe Chamber Singers, and teaches courses in the Department of Music. Through the Bi-College'), Document(id='33fb09d3-0cd1-40c2-bf53-0139e61ca628', metadata={'total_pages': 8, 'page': 0, 'Year': '2019', 'start_index': 11208, 'Ensemble_Type': 'Choral', 'file_path': 'C:\\\\Users\\\\charl\\\\Documents\\\\VSCode\\\\HC All Programs\\\\Files\\\\PDFs\\\\9. Chamber Singers Winter Program 2019.pdf', 'Term': 'Fall', 'source': '9. Chamber Singers Winter Program 2019.pdf', 'CreationDate': \"D:20200609144044Z00'00'\"}, page_content='Colleges. In addition to students majoring in music, the ensemble also attracts students\\nfrom many other majors who wish to perform challenging choral works in a more\\nintimate setting. Their repertoire is drawn from the Renaissance through the present day,\\nwith frequent explorations of music from cultures that are not widely represented in the\\ngreater choral world. Chamber Singers has collaborated with arts organizations and\\ncolleges throughout the northeastern United States and has undertaken foreign tours. The\\nChamber Singers will spend a week touring Quebec in May 2020.\\nDr. Nathan Zullinger, conductor\\nNathan Zullinger is an Assistant Professor at Haverford College, where he\\nconducts the Chorale, the Chamber Singers, and teaches courses in the Department of\\nMusic. Through the Bi-College Partnership, he also teaches students from Bryn Mawr\\nCollege. A native of Chambersburg, Pennsylvania, Dr. Zullinger received his degrees'), Document(id='bbd2a1cb-d600-486e-a047-4365cdbb3aca', metadata={'total_pages': 12, 'file_path': 'C:\\\\Users\\\\charl\\\\Documents\\\\VSCode\\\\HC All Programs\\\\Files\\\\PDFs\\\\12. Chamber Singers-Holiday Program 2010.pdf', 'Term': 'Fall', 'Ensemble_Type': 'Choral', 'page': 0, 'Year': '2010', 'source': '12. Chamber Singers-Holiday Program 2010.pdf', 'CreationDate': \"D:20160524175217Z00'00'\", 'start_index': 15930}, page_content='the academic year of 2010/11, the choir will be led by Ng Tian Hui while Prof. Lloyd is away on sabbaticcal.\\nAs the premier vocal ensemble in the bi-college community, the Chamber Singers performs challenging repertoire ranging\\nfrom the Renaissance to the present day in a variety of languages and styles. This season’s repertoire will range from 16th\\ncentury Paris to contemporary South Africa; from Bach’s Magnificat, to Monteverdi’s Lamento d’Arianna, to new\\ncommissions by composers based in Austria, Singapore and the US.\\nThe Chamber Singers returned from Turkey and their sixth international cultural exchange tour in the Spring of 2010, and\\nwill embark on a National tour in Spring 2011 including an exchange with Amherst College and a performance at Yale\\nUniversity’s Marquand Chapel. In addition, the choir looks forward to a session with Meredith Monk, and an invitation to\\nthe College Choir Series at the Church of the Holy Trinity, Rittenhouse Square, in Philadelphia.'), Document(id='8d6222dd-0a13-488a-8006-25f5767f234e', metadata={'start_index': 6487, 'Ensemble_Type': 'Choral', 'page': 0, 'source': 'Spring 4-28-22 Chamber Singers Rotunda Program 2022.pdf', 'Term': 'Spring', 'file_path': 'C:\\\\Users\\\\charl\\\\Documents\\\\VSCode\\\\HC All Programs\\\\Files\\\\PDFs\\\\Spring 4-28-22 Chamber Singers Rotunda Program 2022.pdf', 'CreationDate': 'D:20220428134503Z', 'Year': '2022', 'total_pages': 4}, page_content='Renaissance through the present day, with frequent explorations of composers that are not widely\\nrepresented in the greater choral world. Chamber Singers has collaborated with arts organizations and\\ncolleges throughout the northeastern United States and has undertaken foreign tours. In 2020, the\\nensemble premiered a new work by Scott Ordway, “Twenty/Twenty.” A collaboration between four\\ncolleges, the piece included photographs and video taken by students to document the experience of the\\nearly pandemic. The work was featured by the classical music critic of the Philadelphia Inquirer.\\nNathan Zullinger is an Assistant Professor at Haverford College, where he conducts the Chorale, the\\nChamber Singers, and teaches courses in the Department of Music. Through the Bi-College Partnership,\\nhe also teaches students from Bryn Mawr College. A native of Chambersburg, Pennsylvania, Dr.\\nZullinger received his degrees from Messiah College and Boston University, studying with Linda'), Document(id='449fe834-3984-4b65-a09d-c77c71225d4e', metadata={'start_index': 1578, 'file_path': 'C:\\\\Users\\\\charl\\\\Documents\\\\VSCode\\\\HC All Programs\\\\Files\\\\PDFs\\\\22. Chamber Singers Rotunda Program.pdf', 'Term': 'Spring', 'source': '22. Chamber Singers Rotunda Program.pdf', 'Year': '2019', 'Ensemble_Type': 'Choral', 'total_pages': 4, 'page': 0, 'CreationDate': \"D:20200609170732Z00'00'\"}, page_content=\"from many other majors who wish to perform challenging choral works in a more intimate\\nsetting. Their repertoire is drawn from the Renaissance through the present day, with\\nfrequent explorations of music from cultures that are not widely represented in the greater\\nchoral world. Chamber Singers has collaborated with arts organizations and colleges\\nthroughout the northeastern United States and has undertaken foreign tours. This past fall\\nthe Chamber Singers performed Morten Lauridsen's Midwinter Songs and collaborated with\\nthe Bi-College Chorale on a performance of Haydn's Te Deum in C Major.\\nDr. Nathan Zullinger, conductor\\nNathan Zullinger is an Assistant Professor at Haverford College, where he conducts\\nthe Chorale, the Chamber Singers, and teaches courses in the Department of Music. Through\\nthe Bi-College Partnership, he also teaches students from Bryn Mawr College. A native of\\nChambersburg, Pennsylvania, Dr. Zullinger received his degrees from Messiah College and\"), Document(id='eb0b30dc-ce64-46e6-ae4d-f21c9b838f32', metadata={'source': '35. Chamber Singers-Commencement Program 2011.pdf', 'Ensemble_Type': 'Choral', 'CreationDate': 'D:20160524175413Z', 'start_index': 24004, 'file_path': 'C:\\\\Users\\\\charl\\\\Documents\\\\VSCode\\\\HC All Programs\\\\Files\\\\PDFs\\\\35. Chamber Singers-Commencement Program 2011.pdf', 'total_pages': 23, 'Term': 'Spring', 'Year': '2011', 'page': 0}, page_content='The Chamber Singers returned from Turkey and their sixth international cultural exchange\\ntour in the spring of 2010, and will embark on a national tour in Spring 2011 including an\\nexchange with Amherst College and a performance at Yale University’s Marquand Chapel.\\nIn addition, the choir looks forward to a session with Meredith Monk, and an invitation to\\nthe College Choir Series at the Church of the Holy Trinity, Rittenhouse Square, in\\nPhiladelphia.\\nNg Tian Hui, conductor\\nConductor, composer, and singer, Ng Tian Hui is the Interim Director of Choral and Vocal\\nStudies at Haverford and Bryn Mawr colleges, where he directs the Chorale and the\\nChamber Singers, and leads its vocal program. In addition, Mr. Ng is known for his\\nversatility as a composer and has written music for animation, dance, film, and theatre, as\\nwell as for the classical mediums of choir and orchestra.\\nMr Ng holds a Master of Music degree in Choral Conducting from the Yale School of'), Document(id='7f4f483d-cbc8-4bad-a73c-c3b3b6b66d7d', metadata={'Term': 'Fall', 'file_path': 'C:\\\\Users\\\\charl\\\\Documents\\\\VSCode\\\\HC All Programs\\\\Files\\\\PDFs\\\\3. Family Weekend Program 2015.pdf', 'Year': '2015', 'source': '3. Family Weekend Program 2015.pdf', 'CreationDate': \"D:20151028162144Z00'00'\", 'total_pages': 5, 'page': 0, 'start_index': 4770, 'Ensemble_Type': 'Mixed'}, page_content=\"Luis Loza, HC '17 Tina Kloufetos, HC '17\\nChamber Singers – Thomas Lloyd, conductor\\nSopranos Kathryn Goldberg BMC ‘18 Basses\\nJo Dutilloy BMC’16 Isabel Gross HC’17 (abroad) Adam Adorney HC’18\\nJulia Lin BMC’17 Liz Heaton HC’18 Nik Dombrowski HC’19\\nSashini Kannan BMC’19 Katherine Larson BMC’19 Kevin Dye HC’18\\nShayoni Nag BMC’16 Bola Origunwa HC’19 William Jones HC’19\\n*Abigail Stephenson BMC’16 Nadejda Polcanova BMC ex. ‘17 Daniel Lugano HC’17\\nAnna Swartzentruber BMC’18 Kat Phifer BMC’19 *Damon Motz-Storey HC’16\\nVeronica Walton BMC’19 *George Ordiway HC’16\\nTenors\\nHannah Weissman HC’17 Chris Pence HC’18\\nMason Emmert HC ‘17\\nJoaquin Vargas HS’16\\nAltos Eitan Geller-Montague HC’19\\n* elected Advisory Council\\nAlice Berry BMC’19 Nicolas Marcotrigiano HC’18\\nRachel Brodie HC’19 Luis Rivas HC’16\\nEmily Drummond BMC ’17 Matey Scheiner HC’18\\n(abroad) Tom Sternberg HC’17\\nLydia Gingerich HC’19\\nMainliners\\nDavid Cookmeyer '16 Isabella Falla '18 Sonia Copple '19\"), Document(id='c0fc2eca-94a7-4b4c-92b3-4e6f4744f5ad', metadata={'source': '33. Chamber Singers Commencement Concert 2017.pdf', 'file_path': 'C:\\\\Users\\\\charl\\\\Documents\\\\VSCode\\\\HC All Programs\\\\Files\\\\PDFs\\\\33. Chamber Singers Commencement Concert 2017.pdf', 'CreationDate': \"D:20170615155653Z00'00'\", 'total_pages': 4, 'Term': 'Spring', 'Ensemble_Type': 'Choral', 'Year': '2017', 'start_index': 5576, 'page': 0}, page_content='Daniel Lugano HC’17\\nRachel Brodie HC’19\\nEva Montgomery-Morrison HC’20\\n+Emily Drummond BMC ’17\\nNathan Merrill HC’20\\nKathryn Goldberg BMC ‘18\\nMelody Gray BMC’20\\n+ Advisory Council\\n+Isabel Gross HC’17\\nJohn Andrew Bailey, rehearsal pianist\\nLiz Heaton HC’18\\nBola Origunwa HC’19\\nIman Qazi BMC’19\\nThomas Lloyd is conducting his final concert as Director of the Choral and Vocal Studies Program for Haverford and\\nBryn Mawr Colleges since 1996. A firm believer in the power of musical collaboration to cross cultural divides, Lloyd has\\narranged shared performances with over 60 choirs and instrumental ensembles both in the US and across 5 continents over\\nthe course of leading 11 international concert tours. Most recently, a 2017 collaboration between the bi-college Chamber\\nSingers and the German and Syrian refugee choir Begegnungschor Berlin is featured in current issue the Journal of the\\nInternational Federation for Choral Music and on classical public radio station WRTI Philadelphia.'), Document(id='d3b7095e-b88d-46d6-8af9-b0d610f00783', metadata={'Ensemble_Type': 'Choral', 'source': '24. Chamber Singers Rotunda Program 2014.pdf', 'start_index': 5647, 'Year': '2014', 'file_path': 'C:\\\\Users\\\\charl\\\\Documents\\\\VSCode\\\\HC All Programs\\\\Files\\\\PDFs\\\\24. Chamber Singers Rotunda Program 2014.pdf', 'Term': 'Spring', 'page': 0, 'CreationDate': \"D:20200612110348Z00'00'\", 'total_pages': 4}, page_content='Abigail Stephenson BMC’16, soloist\\nThe Chamber Singers\\nof Haverford and BrynMawr Colleges\\nProfessor Thomas Lloyd, director\\nSopranos\\nMiriam Abaya HC’14\\nShana Burstein HC’15\\nEmily Drummond BMC’17\\nJo Dutilloy BMC’17\\nBrooke Ford HC’14\\nNaomi Goodman HC ’14\\nCarolyn Poutasse HC’16\\nAbigail Stephenson BMC’16\\nLauren Werner BMC ’14\\nAltos\\nZara Atal HC ’14\\nAllie DiTucci HC’15\\nIvy Drexel BMC’14\\nIsabel Gross HC’17\\nColleen Hansbury BMC ‘14\\nMalenca Logan HC ’14\\nHannah Nacheman BMC’15\\nAnnie Salorio BMC ’14\\nJoelle Schindler BMC’15\\nTenors\\nMason Emmert HC’17\\nBJ Hillinck HC’15\\nJoe Horowitz HC’14\\nJaimon Olmsted HC’17\\nLuis Rivas HC’16\\nBasses\\nRobin Banerji HC ‘15\\nGeorge Ordiway HC16\\nLee Rosenthal HC’15\\nMisha Terman HC’16\\nJoaquin Vargas HC’15\\nMicah John Walter HC’14\\nBen Weissman HC ‘14\\nPatrick Williams HC’14')]\n\n\n\n\n\n\nCode\nresult = graph.invoke({\"question\": \"Who played trumpet for the haverford-bryn mawr orchestra in 2019?\"})\n\nprint(f'Answer: {result[\"answer\"]}')\nprint(f'Context: {result[\"context\"]}\\n\\n')\n\n\nAnswer: I don't know.\nContext: [Document(id='a9aaff9b-6388-4acc-8c75-0d85ae7d8daa', metadata={'start_index': 17739, 'Ensemble_Type': 'Choral', 'file_path': 'C:\\\\Users\\\\charl\\\\Documents\\\\VSCode\\\\HC All Programs\\\\Files\\\\PDFs\\\\9. Chorale Program Fall 2011.pdf', 'page': 0, 'Year': '2011', 'source': '9. Chorale Program Fall 2011.pdf', 'Term': 'Fall', 'total_pages': 8, 'CreationDate': 'D:20200612115549Z'}, page_content='Haverford/Bryn Mawr Chorale Orchestra – Fall 2011\\nViolin I Bass Contrabassoon\\nLorenzo Rayal Jennifer Bradbury Ben Hoyle\\nKiran Rajamani HC ’14 Matt Roberts\\nChi Park Brent Edmondson Horns\\nNatalia Banfi HC ’15 Katie Jordan\\nHarp\\nJennifer Horne Kristina Gannon\\nAriane Giles HC ’15\\nVanessa Felso BMC ’15 Sabrina Huber\\nSophia Forker HC ’15\\nVena Johnson Ryan Stewart\\nGabriella Goodman HC ’12\\nPiccolo\\nTrumpets\\nViolin II Katherine Barbato\\nBrian Rascon\\nRodolfo Leuenberger\\nMatthew Thomas\\nMarie Greaney HC ’14 Flute\\nAaron Matthias-Long\\nAngela Sulzer BJ Hillinck HC ’15\\nNora Schmidt BMC ’12 Evangeline Krajewski HC ’14\\nTrombones\\nSarah Franklin\\nBrian Santero\\nLynn Richmond HC ’13 Oboe\\nKeith Warner HC ’15\\nMegan Reimer\\nAnthony Triplett\\nViola\\nDario McConnie-Saad English Horn\\nTuba\\nEsther Ho BMC ’15 Fiona Last\\nChris Pearlberg\\nSarah Pisano\\nKristina Kronauer BMC ’13 Clarinet\\nPercussion\\nAlyssa DeStefano Tom Lee HC ’15\\nTim Knowlten\\nVeeshal Modi Leslie Tjing HC ’15\\nSeth Bagwell\\nCello Brad Broomfield\\nBass Clarinet'), Document(id='81d58f4f-e1d2-4de5-a0ad-edc7b451fdc6', metadata={'Ensemble_Type': 'Choral', 'page': 0, 'start_index': 3989, 'source': '8. Chorale Program Fall 2019.pdf', 'CreationDate': \"D:20191202144100-05'00'\", 'Year': '2019', 'Term': 'Fall', 'file_path': 'C:\\\\Users\\\\charl\\\\Documents\\\\VSCode\\\\HC All Programs\\\\Files\\\\PDFs\\\\8. Chorale Program Fall 2019.pdf', 'total_pages': 12}, page_content='Benjamin Baumgarte HC’23 Meg Kajino Jocelyn Moore\\nSeth Boyce HC’20 Aileen Rimando Marde Meek\\nCaleb Conner HC’20 Jose Sanchez\\nJude Correll HC’23 Bassoon\\nJohn Dvorak HC’23 Violin II Aaron Datsko\\nAdam Fernandez COMM Rodolfo Leuenberger\\nGary Gordon COMM Belmary Lorcas Trumpet\\nAlexander Grimwade COMM Margaret Dziekonski Adrianna Korey\\nRafi Grossman-Naples HC’23 Liz Carlson Lucas Schurmann\\nJack Hagele COMM Andrew Hoesl\\nStevens Heckscher COMM Viola\\nJohn Joseph COMM Veronica Jurkiewicz Timpani\\nDarren Kah BMC’23 Emma Hey Nathan Buonviri\\nNicholas Lasinsky HC’23 Michael Stanley\\nDennis Li HC’21 Organ/Harpsichord\\nSteven Lindell HC FAC Cello John Walthausen\\nVincent McCarthy COMM Elena Smith\\nStephen Michael COMM Mirjam Ingolfsson Orchestra Contractor\\nBrendan Minihan COMM Dora von Trentini\\nLucas Nelson HC’23 Bass\\nLarry Passmore COMM Nancy Merriam\\nDarshan Patel HC’23 AUDITIONS for the\\nPeter Phillips COMM Haverford-Bryn Mawr\\nMark Rahdert HC’74 Chorale will take place in\\nNaren Roy HC’23 January 2020.'), Document(id='561b2b39-e271-4a54-9563-0f72679db7ac', metadata={'page': 0, 'total_pages': 6, 'start_index': 1594, 'Year': '2008', 'source': 'HC Family Weekend 08 program.pdf', 'file_path': 'C:\\\\Users\\\\charl\\\\Documents\\\\VSCode\\\\HC All Programs\\\\Files\\\\PDFs\\\\HC Family Weekend 08 program.pdf', 'Ensemble_Type': 'Mixed', 'Term': 'Fall', 'CreationDate': \"D:20130612212010Z00'00'\"}, page_content='Sadie Martin, flute, Catherine Di Vizio, oboe, Melanie Shafer, bassoon\\nChamber Singers\\nThomas Lloyd, conductor\\nAin’t Got Time to Die, arr. Hall Johnson\\nsolos: Conor Weiss and Maya Bloom\\nA Quiet Place, Carmichael, arr. Rubino\\nsolo: Allison Keefe\\nS’Chords\\nJerusalem arranged by The Harvard Krokodiloes\\nsolo: Chris Healy\\nMika’s Happy Ending arranged by Jeff Wildermuth\\nsolo: Zac Dutton\\nPerformers and audience\\nHaverford Harmony Song - Sigmund Spaeth ‘05\\nHaverford-Bryn Mawr Orchestra\\nHeidi Jacob, Director\\nVIOLIN Dan Weaver BASSOON\\nEmma Shaw Concertmistress Caroline Kenward Melanie Shafer*+\\nInez Suhardjo, Associate Principal * Nina Zipkin Hannah Brubaker #\\nGabriella Goodman Assistant Principal* Grace Loudon\\nWilla Caughey Assistant Principal + HORN\\nJanice Harlow Principal Second + CELLO Alex Mirarchi*\\nSophia Tan, Assistant Principal Second+ Simon Linn-Gerstein, Principal Sam Strauch\\nGloria Vidal Kelvin Chang, Associate Principal Katherine Lo+'), Document(id='3127128b-e6d8-419d-9dec-80d44c7f3900', metadata={'file_path': 'C:\\\\Users\\\\charl\\\\Documents\\\\VSCode\\\\HC All Programs\\\\Files\\\\PDFs\\\\7. Orchestra Program Fall 2018.pdf', 'start_index': 15953, 'total_pages': 7, 'Ensemble_Type': 'Orchestra', 'Term': 'Fall', 'source': '7. Orchestra Program Fall 2018.pdf', 'page': 0, 'Year': '2018', 'CreationDate': 'D:20181114120319Z'}, page_content='String Quartet, and she was mentored by chamber music greats Felix Galimir, Josef Gingold, Robert Mann, and\\nMischa Schneider.\\nMs. Govatos serves on the advisory boards of Astral Artists, an organization that promotes, presents, and advises\\ntalented artists on the cusp of their musical careers, and the Music School of Delaware, a community music school\\nwhere she began her studies. She also teaches privately in Philadelphia.\\nHAVERFORD-BRYN MAWR ORCHESTRA\\nVIOLIN Maria Penrice HC ’22 Co- TRUMPET\\nRuby Zeng BMC ’20 Co- Associate Principal Sam Istvan HC ’21 Stravinsky/\\nConcertmistress Stravinsky/Bellini Nina Mandel HC ’22 Co-Associate Haydn\\nDiane Moore HC ’20 Co- Principal Jesse Friedson HC ’21 Stravinsky/\\nConcertmistress Haydn/Jacob Halcyon Hu BMC ’22 Assistant Bellini\\nJackie Toben BMC ’22 Co- Principal Andrew Cornell HC ’20 Stravinsky/\\nAssociate Principal First Violin Seth Boyce HC ’20 Bellini\\nMarisa LaBarca HC ’21 Co- Maryam Jahanbin, BMC ’19 Eric Kopczynski HC ’22 Stravinsky/'), Document(id='ed4f5641-becf-4e8a-abaa-b407e4a499aa', metadata={'file_path': 'C:\\\\Users\\\\charl\\\\Documents\\\\VSCode\\\\HC All Programs\\\\Files\\\\PDFs\\\\6. Chorale Program Fall 2012.pdf', 'CreationDate': \"D:20130529015231Z00'00'\", 'start_index': 15187, 'source': '6. Chorale Program Fall 2012.pdf', 'page': 0, 'Ensemble_Type': 'Choral', 'total_pages': 8, 'Year': '2012', 'Term': 'Fall'}, page_content='principal principal Brent Edmondson\\nYue Yang BMC Sarah Pisano Michael Chaffin Percussion\\nJames Akinaka HC ‘16 Alyssa DeStefano Rachel Genovese BMC ‘15\\nLaura Hammons Jennifer Horne Trumpet Christian Fagre HC’16\\nLorenzo Raval Dario Mcconnie-Saad Joseph Hart Bill Ristow HC’16\\nChi Park Aaron Matthias-Long Tom Bowden\\nCello Andrew Kessling Joe Veltri\\nViolin II Rachel Goldstein HC ’14,\\nSara Bowers principal Trombone Harp\\nAileen Rimando, Michal Schmidt HC teacher Brian Santero Adrienne Knauer\\nAngela Sulzer Ryan Baxter-King HC ‘16 Joshua Popejoy Sophia Forker HC’15\\nElizabeth Zook Ezgi Yargici, Derek Paquette (bass)\\nKevin Sloan Kevin Lowery\\nAdam Crandell, HC staff\\nHaverford/Bryn Mawr Chorale\\nBeth Manus, accompanist\\nSopranos Anna Heilmayr, comm Tianyi Hu, HC ’16\\nDelia Bowman, BMC ’16 Leah Hollander, HC ’15 Bill Kunze, comm\\nBarb Browne, comm Melisse Jean BMC ’08 Sebastian (Siggy) Moore, HC ’09\\nMaxine Cook, comm, spouse HC ’64 Aviva Kosansky, BMC ’16 Ben Safran, HC ’13'), Document(id='83b1c956-c8ce-46bd-9a39-8deafd966165', metadata={'Year': '2013', 'total_pages': 16, 'file_path': 'C:\\\\Users\\\\charl\\\\Documents\\\\VSCode\\\\HC All Programs\\\\Files\\\\PDFs\\\\19. Chorale Program Spring 2013.pdf', 'start_index': 34621, 'Ensemble_Type': 'Choral', 'source': '19. Chorale Program Spring 2013.pdf', 'CreationDate': \"D:20160524164621Z00'00'\", 'Term': 'Spring', 'page': 0}, page_content='Alyssa DeStefano Abigail Healy HC ’15\\nBeatrice Ferreira HC ’16 Sabrina Huber\\nMatteo Miazzo HC ’15 Seth Hanes\\nDario Mcconnie-Saad\\nMeriel Campbell BMC ’16 Trumpet\\nChris Shiley\\nCello Brian Rascon\\nRachel Goldstein HC ’14 Jesse Morvan\\nEzgi Yargici\\nErin Korth HC ’13 Trombone\\nVeronica Hudacek Justin Moore\\nAdam Crandell HC staff Keith Warner HC ’15\\nErin Busch Anthony Triplett\\nBass Tuba\\nBrent Edmondson Matt Gatti\\nMartin Richard HC ’14 Percussion\\nTaj Meyer HC ’16 Tim Knowlton\\nRachel Genovese BMC ’15\\nPiccolo Christian Fagre HC ’16\\nKayoung Lee HC ’16 William Ristow HC ’16\\nThomas Bowden\\nFlute Bradley Broomfield\\nBJ Hillinck HC ’15\\nEvangeline Krajewski HC ’15 Piano/Celeste\\nBeth Manus\\nOboe John Bailey\\nJocelyn Plant\\nJoshua Bulos HC ’16 Orchestra Manager\\nVanessa Van Sickle\\nEnglish Horn\\nDavid Rosenfeld'), Document(id='73b093b9-b5f3-4469-bf11-e9fb9eb8baa8', metadata={'Term': 'Fall', 'Ensemble_Type': 'Choral', 'total_pages': 8, 'page': 0, 'CreationDate': \"D:20140623232526Z00'00'\", 'file_path': 'C:\\\\Users\\\\charl\\\\Documents\\\\VSCode\\\\HC All Programs\\\\Files\\\\PDFs\\\\2. Family Weekend Choral Program-2013.pdf', 'Year': '2013', 'start_index': 7349, 'source': '2. Family Weekend Choral Program-2013.pdf'}, page_content=\"Muyuan Li, HC ‘15 Troy Sheaffer, HC '00 Tianyi Yang, HC ‘15\\nSteven Lindell, HC fac Randall Shupp, comm\\nCHORALE ORCHESTRA\\nViolin I Cello Bassoon\\nKirin Rajamani HC’14 Michal Schmidt (fac) Emeline Chong\\nAli Can Puskulcu Rachel Goldstein HC’14 Vanessa Van Sickle\\nYue Yang BMC’16 Mirjam Ingolfsson\\nChi Park Adam Crandell (staff) Contrabassoon\\nChloe Lindeman HC’17 Andrew Desiderio Wen Hsieh\\nLorenzo Raval Erin Busch\\nJames AkinakaHC’16 Horns\\nBass\\nMarie Greaney HC’14 Ben Mulholland\\nNancy Merriam (staff)\\nSet Hanes\\nMartin Richard HC’14\\nViolin II Alexis Morris\\nBrent Edmondson\\nSara Bowers Matt Searing\\nMichael Chaffin\\nMolly Quay-\\xad‐de la Vallee\\nHC’14 Trumpets\\nPiccolo\\nLaura Norris Brian Rascon\\nKatherine Barbato\\nKatie Rowlett HC’16 Katie Miller\\nLindsey Gamble Flute\\nErin Gartland SJU BJ Hillinck HC’15 Trombones\\nNatasha Loomis Greg Strohman\\nViola Joshua Popejoy\\nCarol Briselli (fac) Oboe Matt Cohen\\nChristine Tai BMC‘17 Jocelyn Plant\\nEliana Chavkin BMC’17 Janet Monroe BMC’17 Percussion\"), Document(id='63b809a2-e1e2-4cbc-982a-dc395a994663', metadata={'Ensemble_Type': 'Mixed', 'Term': 'Fall', 'page': 0, 'CreationDate': \"D:20171024192215Z00'00'\", 'file_path': 'C:\\\\Users\\\\charl\\\\Documents\\\\VSCode\\\\HC All Programs\\\\Files\\\\PDFs\\\\5. Family Weekend Program 2017.pdf', 'total_pages': 6, 'start_index': 3946, 'source': '5. Family Weekend Program 2017.pdf', 'Year': '2017'}, page_content=\"Pilar Navarro HC ’20 BASSOON Graham Peet HC ’19\\nDavid Watkins, Community Manroocha Singh BMC ’18, Principal Sean Woodruff HC ’18\\nEmma Shaw, Alum Maria Buonviri, Guest\\nVIOLA HORN\\nJennifer Jolivert HC ’18, Principal Johanna Fowler HC ’21, Principal\\nKai McGinn BMC ’21, Associate Kristina Gannon, Guest\\nPrincipal Ben Mulholland, Guest\\nHope Chamblee BMC ’18 Joe Brausam, Guest\\nKathleen Corcella BMC ’21\\nTRUMPET\\nCELLO Sam Istvan HC ’21, Co- Principal\\nInes Purcell BMC ’20, Co- Principal Paul Futer, Guest\\nSean Woodruff HC ’18, Co- Principal Shannon Montgomery BMC ’21\\nMatthew Ludwig HC ’21, Co- Principal\\nThe Mainliners\\nRory Kennison '18 Elizabeth DeJong '18 John Burgess '20\\nAri Katz '20 Ezra Hollander '18 Chris Pence '18\\nFrances Condon '21 Tommy Ie '19 Dennis Li '21\\nCaroline Ford '21\\nThe Oxford Blues\\nTori Fleischmann '18 Rina Rosnow '19 Polina Lipskaya '21\\nIsabella Canelo Gordon '18 Christine Anderson '20 Julia Giordano '21\\nJulia Albertson '18 Sarah Savonis '20 Ari Sulpizio '21\"), Document(id='b5eda9e9-521d-46aa-b0ea-09341bf89579', metadata={'source': '6. Family Weekend 2016 program.pdf', 'total_pages': 5, 'CreationDate': \"D:20161025183956Z00'00'\", 'page': 0, 'Ensemble_Type': 'Mixed', 'Year': '2016', 'file_path': 'C:\\\\Users\\\\charl\\\\Documents\\\\VSCode\\\\HC All Programs\\\\Files\\\\PDFs\\\\6. Family Weekend 2016 program.pdf', 'Term': 'Fall', 'start_index': 1595}, page_content='Jennifer Jolivert, HC ’18, Co-Assistant Elisabeth Kamaka, BMC ’18 Ben Mulholland, Guest\\nConcertmistress Sarah Lew, BMC ’18 Kristina Gannon, Guest\\nDiane Moore, HC ’20, Associate Taylor Levine, HC ’18\\nPrincipal Second Violin Maryam Jahanbin, BMC ’19 TRUMPET\\nEun Soo Jang, BMC ’20, Assistant Seth Boyce, HC ’20 Andrew Cornell, HC ’19, Principal\\nPrincipal Second Violin Marilyn Harbert, BMC ’20 Steve Lehman, HC ’19\\nNicole Westerduin, BMC ’18, Erina Kironde, BMC’20 Paul Futer, Guest\\nAssistant Principal Second Violin\\nOlivia DuSold, HC ’18 STRING BASS TROMBONE\\nNicole Westerduin, BMC ’18 Christina Szi, HC ’18 Kevin Medansky, HC ‘19\\nMalia Wenny, HC ’18 Ava Douglas, BMC ’19 Justin Moore, Guest\\nYue Xiu, BMC ’17 Zoe Arditi, HC ’20\\nIan McGroarty, HC ’17 TUBA\\nBrittney Beidelman, BMC ’17 PICCOLO Steve Lakawicz, Guest\\nCarolyn Woodruff HC ’17 Sarah Gift, BMC ’18 (Lutoslawski)\\nMiriam Myers, BMC ’18 PERCUSSION\\nMalini Sharma, BMC ’18 FLUTE Rio Morales, HC ’17'), Document(id='a6a2389e-f647-4a6d-965a-294070a1da1c', metadata={'start_index': 3154, 'Year': '2018', 'page': 0, 'Ensemble_Type': 'Choral', 'total_pages': 8, 'Term': 'Fall', 'file_path': 'C:\\\\Users\\\\charl\\\\Documents\\\\VSCode\\\\HC All Programs\\\\Files\\\\PDFs\\\\8. Chorale Program Fall 2018.pdf', 'source': '8. Chorale Program Fall 2018.pdf', 'CreationDate': 'D:20181204201607Z'}, page_content='Timothy Blankenhorn COMM Jack Hagele COMM Larry Passmore COMM\\nSeth Boyce HC ’20 Stevens Heckscher COMM Mark Rahdert HC ’74\\nMoselle Burke HC ’21 James Jackson HC ’20 Troy Sheaffer HC ’00\\nJackson Cadenhead HC ’21 Steven Lindell HC FAC Robert Sutton HC ’69\\nDylan Dixon HC ’22 Vincent McCarthy COMM Miguel Wise HC ’19\\nAbe Doroshow HC ’21 Stephen Michael COMM Jim Wright HC ’68, BMC FAC\\nGary Gordon COMM Brendan Minihan COMM\\nHaverford-Bryn Mawr Chamber Singers\\nChloe Baumann BMC ’22 Edwin Crockett HC ’22 *Mattias Lundberg HC ’20\\nElinor Berger BMC ’22 Adam Friedman-Brown HC ’22 Nathan Merrill HC ’20\\n*Alice Berry BMC ’19 Em Groves BMC ’21 Cole Roland HC ’21\\nRachel Brodie HC ’19 Tommy Ie HC ’19 Daisy Shepherd BMC ’22\\nEllen Carlson HC ’22 Sashini Kannan BMC ’19 Eliza Sherman-Daniels HC ’21\\n*Grace Coberly HC ’21 David King HC ’20 Robbie Spratt HC ’21\\nCaleb Conner HC ’20 Lexi Lampard BMC ’20 Bilge Yilmaz HC ’21\\n* - member of advisory council\\nBi-Co Chorale Orchestra\\nViolin I Cello Flute Trumpet')]\n\n\n\n\nClearly, we didn’t pull the right documents in the above prompt. This is where the metadata filters will come in, once we set them up.\n\n\nCode\nresult = graph.invoke({\"question\": \"Who are some trumpet players in the haverford-bryn mawr orchestra?\"})\n\nprint(f'Answer: {result[\"answer\"]}')\nprint(\"\\nSources:\")\nfor source in result[\"context\"]:\n    print(f'Source: {source.metadata[\"source\"]}')\n\n\nAnswer: Some trumpet players in the Haverford-Bryn Mawr Orchestra include Christian Fagre HC ’16, Sam Istvan HC ’21, and Andrew Cornell HC ’20.\n\nSources:\nSource: 19. Chorale Program Spring 2013.pdf\nSource: 9. Chorale Program Fall 2011.pdf\nSource: 6. Chorale Program Fall 2012.pdf\nSource: HC Family Weekend 08 program.pdf\nSource: 8. Chorale Program Fall 2019.pdf\nSource: 7. Orchestra Program Fall 2018.pdf\nSource: 2. Family Weekend Choral Program-2013.pdf\nSource: 10. Chorale Program Fall 2010.pdf\nSource: 8. Chorale Program Fall 2018.pdf\nSource: HC Family Weekend 08 program.pdf"
  },
  {
    "objectID": "HC All Programs/full_concert_programs.html#setting-up-filters",
    "href": "HC All Programs/full_concert_programs.html#setting-up-filters",
    "title": "RAG: Haverford College Concert Programs Fall 2009 - Spring 2022",
    "section": "",
    "text": "As you can see, it’s working pretty well, but the similarity search isn’t always pulling the right documents. If we could add a simple filter, such as specifying the year or ensemble type, our results would be much better, without having to do any extra calls to the API.\nSetting up a filter in similarity search:\n\n\nCode\nvector_store.similarity_search(\"Who was the principle trumpet player in the Haverford-Bryn Mawr Orchestra in 2019?\", k=4, filter={\"Ensemble_Type\": \"Orchestra\"})\n\n\n[Document(id='6178eb27-1284-4041-8289-1d804847fcf7', metadata={'total_pages': 7, 'start_index': 776, 'file_path': 'C:\\\\Users\\\\charl\\\\Documents\\\\VSCode\\\\HC All Programs\\\\Files\\\\PDFs\\\\9. Orchestra Program Fall 2010.pdf', 'source': '9. Orchestra Program Fall 2010.pdf', 'Ensemble_Type': 'Orchestra', 'Term': 'Fall', 'CreationDate': \"D:20160524173625Z00'00'\", 'page': 0, 'Year': '2010'}, page_content='Josh Bucheister, ’14, Associate Rachael Goldstein, ’14 Co- Principal Katie Van Aken, ’12 %\\nConcertmaster Ezekiel Barnett, ’13 Assistant Principal Elizabeth Biernat, ’14@\\nEthan Joseph, ’11, Assistant Concertmaster Delaney Page, ’12 Kristina Kronauer, ’13\\nXinbei Guan, ’14, Assistant Concertmaster Laura Alexander, ’11 Kristina Gannon **\\nSarah Capasso, ’11 Noory O, ’13\\nDrew Twitchell, ’11 Erin Korth, ’13 Trumpet\\nNora Schmidt, ’12 Mary Schultz, ’12 Ian Gavigan, ’14 &@\\nTiffany Fritz, ’12 Seoung Won Jung, ’14 Linus Marco, ’13\\nYiran Zhang , ’14 Kathryn Hayden, ’14 Chelsea Miller, ’11* %\\nMarie Greaney, ’14 Emily Scott, ’14\\nMolly Quay-de la Vallee, ’14 Christina Lee, ’14 Trombone\\nJacob Lowy, ’14 Vincent Dioguardi, ’14\\nJessica Tan, ’13 Bass Douglas Laustsen **\\nAlex Cahill, ’11, Principal Derek Paquette **\\n2nd Violin Martin Richard, ’14\\nMicah John Walter, ’14, Principal Tuba\\nMolly Quay-de la Vallee, ’14, Assistant Piccolo Steve Lakawicz **\\nPrincipal Sara Landers, ’13'),\n Document(id='9c77dcbe-f7f9-483e-ad11-e2777684a2f8', metadata={'Term': 'Fall', 'CreationDate': \"D:20161115193935Z00'00'\", 'source': '8. Orchestra Program Fall 2016.pdf', 'Ensemble_Type': 'Orchestra', 'start_index': 776, 'total_pages': 4, 'page': 0, 'file_path': 'C:\\\\Users\\\\charl\\\\Documents\\\\VSCode\\\\HC All Programs\\\\Files\\\\PDFs\\\\8. Orchestra Program Fall 2016.pdf', 'Year': '2016'}, page_content='Co –Concertmistress (Mendelssohn, Ines Purcell, BMC ’20, Associate Matthew Abruzzo, HC ’17\\nLutoslawski) Principal\\nHORN\\nKatheryn Croddy, BMC ’20, Elisabeth Kamaka, BMC ’18\\nKatherine Allen, HC ’17, Co-\\nCo –Concertmistress (Schubert) Sarah Lew, BMC ’18\\nPrincipal (Mendelssohn/ Schubert)\\nKatherine Travisano, HC ’20, Co- Taylor Levine, HC ’18\\nAlexandra Lin, HC ’19, Co-\\nAssistant Concertmistress Maryam Jahanbin, BMC ’19\\nPrincipal (Lutoslawski)\\nJennifer Jolivert, HC ’18, Co-Assistant Seth Boyce, HC ’20\\nJonathan Cookmeyer, HC ’17\\nConcertmistress Marilyn Harbert, BMC ’20\\nRyan Hill, HC ’19\\nDiane Moore, HC ’20, Associate Erina Kironde, BMC’20\\nKristina Gannon, Guest\\nPrincipal Second Violin\\nNicole Westerduin, BMC ’18, STRING BASS\\nTRUMPET\\nAssistant Principal Second Violin Christina Szi, HC ’18\\nAndrew Cornell, HC ’19, Principal\\nOlivia DuSold, HC ’18 Ava Douglas, BMC ’19\\nSteve Lehman, HC ’19\\nNicole Westerduin, BMC ’18 Zoe Arditi, HC ’20\\nPaul Futer, Guest\\nMalia Wenny, HC ’18'),\n Document(id='a1cdd901-69f8-40ab-b3a1-351df3af13db', metadata={'total_pages': 4, 'file_path': 'C:\\\\Users\\\\charl\\\\Documents\\\\VSCode\\\\HC All Programs\\\\Files\\\\PDFs\\\\Fall 11-19-21 Orchestra Program Fall 2021.pdf', 'start_index': 1586, 'Ensemble_Type': 'Orchestra', 'source': 'Fall 11-19-21 Orchestra Program Fall 2021.pdf', 'Term': 'Fall', 'Year': '2021', 'page': 0, 'CreationDate': 'D:20211117123448Z'}, page_content='Elise Phung BMC ’24 Associate Principal\\nKatherine Hong HC ’24 Co-Associate Principal BASSOON\\nSophie Gardiner HC ’25 Co-Assistant Principal Kieran Mulligan HC ’25, Co-Principal (Tan\\nMaria Yea HC ’22 Dun*/Beethoven*/Smetana)\\nAlana Burgess BMC ’24 Spencer Smith BMC ’25 Co-Principal (Smetana*/Tan\\nKayla Camille BMC ’25 Dun/Beethoven)\\nIsabel Melendez HC ’25 Maria Buonviri, Guest\\nSophie Booker BMC ’25\\nMaya Geiss BMC ’25 HORN\\nZiwei Tan BMC ’25 Bethany Quist BMC ’25, Co-Principal\\n(Beethoven*/Tan Dun*/Smetana)\\nCELLO Sofia Vinci BMC ’25, Co-Principal (Smetana*/\\nNina Mandel HC ’22, Co-Principal Cello Beethoven/Tan Dun*)\\nDavid Betz HC ’24, Co-Principal Cello Charlie Everett, Community\\nJack Vice HC ’25, Co-Associate Principal Kristina Gannon, Guest\\nIvy Xie HC ’25, Assistant Principal\\nRosalie Tarsala BMC ’23 TRUMPET\\nAni Dixit BMC ’22 Jay Whitesell HC ’24, Principal\\nLogan Zurita McKinnon HC ’24 Harrison Lennertz HC ’24\\nAdeline W. DeHarpporte BMC ’25 Paul Futer, Guest\\nDOUBLE BASS TROMBONE'),\n Document(id='343dfabd-b6a4-46ea-8fed-dde54841e8fc', metadata={'start_index': 782, 'file_path': 'C:\\\\Users\\\\charl\\\\Documents\\\\VSCode\\\\HC All Programs\\\\Files\\\\PDFs\\\\25. Orchestra Program Spring 2017.pdf', 'total_pages': 4, 'page': 0, 'Ensemble_Type': 'Orchestra', 'CreationDate': \"D:20170615155942Z00'00'\", 'source': '25. Orchestra Program Spring 2017.pdf', 'Year': '2017', 'Term': 'Spring'}, page_content='Alexandra Lin, HC ’19, Principal\\nKatherine Travisano, HC ’20, Elisabeth Kamaka, BMC ’18\\nJonathan Cookmeyer, HC ’17\\nCo-Assistant Concertmistress Maryam Jahanbin, BMC ’19\\nJonathan Cookmeyer, HC ’17\\n(Dvorak) Seth Boyce, HC ’20\\nKristina Gannon, Guest\\nJennifer Jolivert, HC ’18, Marilyn Harbert, BMC ’20\\nCo-Assistant Concertmistress Erina Kironde, BMC’20\\nTRUMPET\\n(Barber) Gwynne Dulaney, BMC ’19\\nAndrew Cornell, HC ’19, Principal\\nDiane Moore, HC ’20, Samuel Walter, HC ’17\\nSteve Lehman, HC ’19\\nAssociate Principal 2nd Violin\\nNicole Westerduin, BMC ’18, STRING BASS\\nTROMBONE\\nAssistant Principal 2nd Violin Christina Szi, HC ’18\\nKevin Medansky, HC ‘19\\nOlivia DuSold, HC ’18 Zoe Arditi, HC ’20\\nLyman McBride, Guest\\nNicole Westerduin, BMC ’18\\nSean McCusker, Guest\\nMalia Wenny, HC ’18 PICCOLO\\nYue Xiu, BMC ’17 Sarah Gift, BMC ’18 TUBA\\nIan McGroarty, HC ’17 Steve Lakawicz, Guest\\nBrittney Beidelman, BMC ’17 FLUTE\\nGeorgia Meyer, HC ’19 Sarah Gift, BMC ’18, PIANO')]\n\n\nHere, we repeat content from earlier, making this our new “reestablishment” cell. Running this cell allows the RAG to work. Then, we add filters within the LangGraph.\n\n\nCode\n# Setting up chat model\nimport getpass\nimport os\n\nif not os.environ.get(\"OPENAI_API_KEY\"):\n  os.environ[\"OPENAI_API_KEY\"] = getpass.getpass(\"Enter API key for OpenAI: \")\n\nfrom langchain.chat_models import init_chat_model\n\nllm = init_chat_model(\"gpt-4o-mini\", model_provider=\"openai\")\n\n# Setting up embeddings\nimport getpass\nimport os\n\nif not os.environ.get(\"OPENAI_API_KEY\"):\n  os.environ[\"OPENAI_API_KEY\"] = getpass.getpass(\"Enter API key for OpenAI: \")\n\nfrom langchain_openai import OpenAIEmbeddings\n\nembeddings = OpenAIEmbeddings(model=\"text-embedding-3-large\")\n\n# Reestablishing up our persist directory for Chroma\nfrom langchain_chroma import Chroma\n\nvector_store = Chroma(\n    collection_name=\"example_collection\",\n    embedding_function=embeddings,\n    persist_directory=\"./chroma_langchain_db\",  # Where we stored our data before\n)\n\n# Reestablishing retrieval and generation functions\nfrom langchain_core.documents import Document\nfrom typing_extensions import List, TypedDict, Optional\nfrom langchain_core.prompts import ChatPromptTemplate\n\nprompt = ChatPromptTemplate.from_messages([\n    (\"system\", \"You are a helpful assistant. Use only the information provided in the context below to answer the question. If the answer is not in the context, say 'I don't know' or 'The information is not available.'\"),\n    (\"human\", \"Context:\\n{context}\\n\\nQuestion: {question}\")\n])\n\nclass State(TypedDict):\n    question: str\n    filter: Optional[dict]\n    context: List[Document]\n    answer: str\n\ndef apply_filter(state: State):\n    \"\"\"\n    Apply a filter to the state based on the user's input.\n    The filter is expected to be a dictionary that can be used in the similarity search.\n    \"\"\"\n    if \"filter\" in state and state[\"filter\"]:\n        # If a filter is provided, use it\n        state[\"filter\"] = {k: v for k, v in state[\"filter\"].items() if v is not None}\n    else:\n        # If no filter is provided, set it to None\n        state[\"filter\"] = None\n    return state\n\ndef retrieve(state: State):\n    filter_dict = state[\"filter\"] if state.get(\"filter\") else None\n    retrieved_docs = vector_store.similarity_search(state[\"question\"], k=10, filter=filter_dict)\n    return {\"context\": retrieved_docs}\n\ndef generate(state: State):\n    docs_content = \"\\n\\n\".join([doc.page_content for doc in state[\"context\"]])\n    message = prompt.invoke({\"question\": state[\"question\"], \"context\": docs_content})\n    response = llm.invoke(message)\n    return {\"answer\": response.content}\n\n# Reestablishing langgraph\nfrom langgraph.graph import START, StateGraph\n\ngraph_builder = StateGraph(State).add_sequence([apply_filter, retrieve, generate])\ngraph_builder.add_edge(START, \"retrieve\")\ngraph = graph_builder.compile()\n\n\n\n\nCode\nresult = graph.invoke({\n    \"question\": \"Who played trumpet for the orchestra in the year 2019?\", \"filter\": {\"Ensemble_Type\": \"Orchestra\"}})\n\nprint(f'Answer: {result[\"answer\"]}')\nprint(\"\\n\\nSources:\")\nfor i, source in enumerate(result[\"context\"]):\n    print(f'Source {i+1}: {source.metadata[\"source\"]}')\n\n\nAnswer: I don't know.\n\n\nSources:\nSource 1: 21. Orchestra Program-Spring 2012.pdf\nSource 2: 17. Orchestra Program Spring 2013.pdf\nSource 3: 9. Orchestra Program Fall 2010.pdf\nSource 4: 19. Orchestra Program Spring 2016.pdf\nSource 5: Fall 11-19-21 Orchestra Program Fall 2021.pdf\nSource 6: 7. Orchestra Program Fall 2011.pdf\nSource 7: 4. Orchestra Program Fall 2012.pdf\nSource 8: 5. Orchestra Program Fall 2014.pdf\nSource 9: 8. Orchestra Program Fall 2016.pdf\nSource 10: 27. Orchestra Program-Spring 2011.pdf\n\n\n\n\nCode\nresult = graph.invoke({\n    \"question\": \"Who played trumpet for the haverford-bryn mawr orchestra in 2019?\",\n    \"filter\": {\"$and\": [{\"Ensemble_Type\": \"Orchestra\"}, {\"Year\": \"2019\"}]}\n})\n\nprint(f'Answer: {result[\"answer\"]}')\nprint(\"\\n\\nSources:\")\nfor i, source in enumerate(result[\"context\"]):\n    print(f'Source {i+1}: {source.metadata[\"source\"]}')\n\n\nAnswer: The trumpet players for the Haverford-Bryn Mawr College Orchestra in 2019 were Jack Weinstein, HC ’23, and Sam Istvan, HC ’21, who was the principal trumpet. Additionally, Jackie Toben, BMC ’22, was also listed as a Co-Associate Principal Trumpet.\n\n\nSources:\nSource 1: 7. Orchestra Program Fall 2019.pdf\nSource 2: 7. Orchestra Program Fall 2019.pdf\nSource 3: 18. Orchestra Program Spring 2019.pdf\nSource 4: 7. Orchestra Program Fall 2019.pdf\nSource 5: 18. Orchestra Program Spring 2019.pdf\nSource 6: 18. Orchestra Program Spring 2019.pdf\nSource 7: 7. Orchestra Program Fall 2019.pdf\nSource 8: 7. Orchestra Program Fall 2019.pdf\nSource 9: 18. Orchestra Program Spring 2019.pdf\nSource 10: 18. Orchestra Program Spring 2019.pdf"
  },
  {
    "objectID": "HC All Programs/full_concert_programs.html#results",
    "href": "HC All Programs/full_concert_programs.html#results",
    "title": "RAG: Haverford College Concert Programs Fall 2009 - Spring 2022",
    "section": "",
    "text": "We successfully set up a RAG app with effective filters. We can now “chat” with our data, and “look up” specific information in seconds with a high level of accuracy. The way that this is set up creates a chance of no result, but almost no chance of a purely incorrect answer.\nOur filters, however, were very effective in reducing the chance of no answer. Though they currently require a manual call, a future, streamlined version of this project could interpret a question and auto-apply filters with an LLM call.\nOverall, this project resulted in an effective and rapid way to explore our data."
  },
  {
    "objectID": "Vaudeville/Vaudeville_RAG.html",
    "href": "Vaudeville/Vaudeville_RAG.html",
    "title": "Vaudeville RAG",
    "section": "",
    "text": "Do not run all if the kernel restarts!\n\n\nIn this notebook, we attempt to build a Retrieval Augmented Generation (RAG) application for 35 19th century Vaudeville plays.\nThis app allows us to chat with the data, and ask “needle in the haystack” questions.\n\n\n\n\n\nCode\n# Imports\nimport getpass\nimport os\nfrom langchain.chat_models import init_chat_model\nfrom langchain_openai import OpenAIEmbeddings\nfrom langchain_chroma import Chroma\nfrom langchain_community.document_loaders.csv_loader import CSVLoader\nfrom pathlib import Path\nfrom langchain.document_loaders import PDFPlumberLoader\nfrom langchain.schema import Document\nfrom langchain_text_splitters import RecursiveCharacterTextSplitter\nfrom typing_extensions import List, TypedDict, Optional\nfrom langchain_core.prompts import ChatPromptTemplate\nfrom langgraph.graph import START, StateGraph\n\n\n\n\nCode\n# Setting up chat model\nif not os.environ.get(\"OPENAI_API_KEY\"):\n  os.environ[\"OPENAI_API_KEY\"] = getpass.getpass(\"Enter API key for OpenAI: \")\n\n\nllm = init_chat_model(\"gpt-4o-mini\", model_provider=\"openai\")\n# Setting up embeddings\n\nembeddings = OpenAIEmbeddings(model=\"text-embedding-3-large\")\n# Setting up chroma\n\nvector_store = Chroma(\n    collection_name=\"example_collection\",\n    embedding_function=embeddings,\n    persist_directory=\"./chroma_langchain_db\",  # Where to save data locally, remove if not necessary\n)\n\n\n\n\n\nIndexing Steps:\n\nLoad CSV and PDF\nWork with metadata:\n\nKeep relevant PDF metadata; remove irrelevant or empty fields\nAdd CSV metadata\n\nSpilt into chunks\nRun embeddings model (in three batches, because of the character limit per call), and create a vector database\n\n\n\n\n\nCode\n# Setting up csv loading\n\ndef loadCSV(filepath: str) -&gt; list:\n    loader = CSVLoader(file_path=filepath, source_column=\"FileName\",metadata_columns=[\"Year\",\"Work\",\"Theatre\"])\n    data = loader.load()\n    return data\n\n\n\n\nCode\nprint(os.getcwd())\n\n\nc:\\Users\\charl\\Documents\\VSCode\\Encoding Music\\Vaudeville\n\n\n\n\nCode\n# Load CSV\n\ncsv_metadata = loadCSV(\"Files/Vaudeville_Metadata.csv\")\nprint(csv_metadata[0].metadata['source'])\nprint(csv_metadata[1].metadata['Theatre'])\n\n\nAs_tu_vu_la_comete_mon_gas_text.pdf\nThéâtre du Vaudeville\n\n\n\n\nCode\n# Setting up pdf loading\n\nasync def loadPDF(filepath: str) -&gt; list:\n    loader = PDFPlumberLoader(filepath)\n    pages = []\n    async for page in loader.alazy_load():\n        pages.append(page)   \n    return pages\n\n\n\n\nCode\ndef get_files_from_directory(directory_path: str) -&gt; list[str]:\n    directory = Path(directory_path)\n    file_paths = [str(file) for file in directory.iterdir() if file.is_file()]\n    return file_paths\n\ndirectory_path:str = \"Files/PDFs\"\nfiles: list[str] = get_files_from_directory(directory_path)\n\n\n\n\nCode\n# Load PDFs w/out metadata\nloaded_PDFs: list = []\nfor file in files:\n    pages = await loadPDF(file)\n    loaded_PDFs.append(pages)\n\n\nIt’s good to check the loaded content for each PDF. Here, it is commented out to prevent the sources from taking up a lot of space.\n\n\nCode\n# Check PDF content\n# for i in range(len(loaded_PDFs)):\n#     document = loaded_PDFs[i]\n#     print(f\"## Document {i}: {document[0].metadata[\"source\"][54:]} \\n\")\n#     document_content: str = \"\"\n#     for document_page in document:\n#         document_content += document_page.page_content[0:500]\n#     print(document_content + \"\\n \\n\")\n\n\nThe first PDF has not been OCR’ed, so it showed up as empty. The rest worked.\n\n\nCode\n# Check PDF metadata\nfor i in range(3):\n    document = loaded_PDFs[i]\n    print(f\"Document {i} \\n\")\n    document_metadata: list = []\n    for document_page in document:\n        document_metadata += document_page.metadata.items()\n    print(document_metadata)\n\n\nDocument 0 \n\n[('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 0), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 1), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 2), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 3), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 4), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 5), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 6), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 7), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 8), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 9), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 10), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 11), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 12), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 13), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 14), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 15), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 16), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 17), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 18), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 19), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 20), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 21), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 22), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 23), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 24), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 25), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 26), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 27), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 28), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 29), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 30), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 31), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 32), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 33), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 34), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 35), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 36), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 37), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 38), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 39), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 40), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 41), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 42), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 43), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 44), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 45), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 46), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 47), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 48), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 49), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 50), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 51), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 52), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 53), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 54), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 55), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 56), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 57), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 58), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 59), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 60), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 61), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 62), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 63), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 64), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 65), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 66), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 67), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 68), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 69), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 70), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 71), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 72), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 73), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 74), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 75), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 76), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 77), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 78), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 79), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 80), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 81), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 82), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 83), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 84), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 85), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 86), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 87), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 88), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 89), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 90), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 91), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 92), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 93), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 94), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 95), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 96), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 97), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 98), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 99), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 100), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 101), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 102), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 103), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\")]\nDocument 1 \n\n[('source', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('file_path', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('page', 0), ('total_pages', 47), ('ModDate', \"D:20250624190336-04'00'\"), ('source', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('file_path', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('page', 1), ('total_pages', 47), ('ModDate', \"D:20250624190336-04'00'\"), ('source', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('file_path', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('page', 2), ('total_pages', 47), ('ModDate', \"D:20250624190336-04'00'\"), ('source', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('file_path', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('page', 3), ('total_pages', 47), ('ModDate', \"D:20250624190336-04'00'\"), ('source', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('file_path', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('page', 4), ('total_pages', 47), ('ModDate', \"D:20250624190336-04'00'\"), ('source', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('file_path', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('page', 5), ('total_pages', 47), ('ModDate', \"D:20250624190336-04'00'\"), ('source', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('file_path', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('page', 6), ('total_pages', 47), ('ModDate', \"D:20250624190336-04'00'\"), ('source', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('file_path', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('page', 7), ('total_pages', 47), ('ModDate', \"D:20250624190336-04'00'\"), ('source', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('file_path', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('page', 8), ('total_pages', 47), ('ModDate', \"D:20250624190336-04'00'\"), ('source', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('file_path', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('page', 9), ('total_pages', 47), ('ModDate', \"D:20250624190336-04'00'\"), ('source', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('file_path', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('page', 10), ('total_pages', 47), ('ModDate', \"D:20250624190336-04'00'\"), ('source', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('file_path', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('page', 11), ('total_pages', 47), ('ModDate', \"D:20250624190336-04'00'\"), ('source', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('file_path', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('page', 12), ('total_pages', 47), ('ModDate', \"D:20250624190336-04'00'\"), ('source', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('file_path', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('page', 13), ('total_pages', 47), ('ModDate', \"D:20250624190336-04'00'\"), ('source', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('file_path', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('page', 14), ('total_pages', 47), ('ModDate', \"D:20250624190336-04'00'\"), ('source', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('file_path', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('page', 15), ('total_pages', 47), ('ModDate', \"D:20250624190336-04'00'\"), ('source', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('file_path', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('page', 16), ('total_pages', 47), ('ModDate', \"D:20250624190336-04'00'\"), ('source', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('file_path', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('page', 17), ('total_pages', 47), ('ModDate', \"D:20250624190336-04'00'\"), ('source', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('file_path', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('page', 18), ('total_pages', 47), ('ModDate', \"D:20250624190336-04'00'\"), ('source', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('file_path', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('page', 19), ('total_pages', 47), ('ModDate', \"D:20250624190336-04'00'\"), ('source', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('file_path', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('page', 20), ('total_pages', 47), ('ModDate', \"D:20250624190336-04'00'\"), ('source', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('file_path', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('page', 21), ('total_pages', 47), ('ModDate', \"D:20250624190336-04'00'\"), ('source', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('file_path', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('page', 22), ('total_pages', 47), ('ModDate', \"D:20250624190336-04'00'\"), ('source', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('file_path', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('page', 23), ('total_pages', 47), ('ModDate', \"D:20250624190336-04'00'\"), ('source', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('file_path', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('page', 24), ('total_pages', 47), ('ModDate', \"D:20250624190336-04'00'\"), ('source', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('file_path', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('page', 25), ('total_pages', 47), ('ModDate', \"D:20250624190336-04'00'\"), ('source', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('file_path', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('page', 26), ('total_pages', 47), ('ModDate', \"D:20250624190336-04'00'\"), ('source', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('file_path', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('page', 27), ('total_pages', 47), ('ModDate', \"D:20250624190336-04'00'\"), ('source', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('file_path', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('page', 28), ('total_pages', 47), ('ModDate', \"D:20250624190336-04'00'\"), ('source', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('file_path', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('page', 29), ('total_pages', 47), ('ModDate', \"D:20250624190336-04'00'\"), ('source', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('file_path', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('page', 30), ('total_pages', 47), ('ModDate', \"D:20250624190336-04'00'\"), ('source', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('file_path', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('page', 31), ('total_pages', 47), ('ModDate', \"D:20250624190336-04'00'\"), ('source', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('file_path', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('page', 32), ('total_pages', 47), ('ModDate', \"D:20250624190336-04'00'\"), ('source', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('file_path', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('page', 33), ('total_pages', 47), ('ModDate', \"D:20250624190336-04'00'\"), ('source', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('file_path', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('page', 34), ('total_pages', 47), ('ModDate', \"D:20250624190336-04'00'\"), ('source', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('file_path', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('page', 35), ('total_pages', 47), ('ModDate', \"D:20250624190336-04'00'\"), ('source', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('file_path', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('page', 36), ('total_pages', 47), ('ModDate', \"D:20250624190336-04'00'\"), ('source', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('file_path', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('page', 37), ('total_pages', 47), ('ModDate', \"D:20250624190336-04'00'\"), ('source', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('file_path', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('page', 38), ('total_pages', 47), ('ModDate', \"D:20250624190336-04'00'\"), ('source', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('file_path', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('page', 39), ('total_pages', 47), ('ModDate', \"D:20250624190336-04'00'\"), ('source', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('file_path', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('page', 40), ('total_pages', 47), ('ModDate', \"D:20250624190336-04'00'\"), ('source', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('file_path', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('page', 41), ('total_pages', 47), ('ModDate', \"D:20250624190336-04'00'\"), ('source', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('file_path', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('page', 42), ('total_pages', 47), ('ModDate', \"D:20250624190336-04'00'\"), ('source', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('file_path', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('page', 43), ('total_pages', 47), ('ModDate', \"D:20250624190336-04'00'\"), ('source', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('file_path', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('page', 44), ('total_pages', 47), ('ModDate', \"D:20250624190336-04'00'\"), ('source', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('file_path', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('page', 45), ('total_pages', 47), ('ModDate', \"D:20250624190336-04'00'\"), ('source', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('file_path', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('page', 46), ('total_pages', 47), ('ModDate', \"D:20250624190336-04'00'\")]\nDocument 2 \n\n[('source', 'Files\\\\PDFs\\\\Clairville_Garet_Le_Palais_de_Chrysocale_(1855).pdf'), ('file_path', 'Files\\\\PDFs\\\\Clairville_Garet_Le_Palais_de_Chrysocale_(1855).pdf'), ('page', 0), ('total_pages', 14), ('Author', 'Clairville (M.)'), ('ModDate', \"D:20250624190059-04'00'\"), ('Producer', 'Google Books PDF Converter (rel 3 12/12/14)'), ('Title', 'Le palais de chrysocale ou les exposants et les exposés'), ('source', 'Files\\\\PDFs\\\\Clairville_Garet_Le_Palais_de_Chrysocale_(1855).pdf'), ('file_path', 'Files\\\\PDFs\\\\Clairville_Garet_Le_Palais_de_Chrysocale_(1855).pdf'), ('page', 1), ('total_pages', 14), ('Author', 'Clairville (M.)'), ('ModDate', \"D:20250624190059-04'00'\"), ('Producer', 'Google Books PDF Converter (rel 3 12/12/14)'), ('Title', 'Le palais de chrysocale ou les exposants et les exposés'), ('source', 'Files\\\\PDFs\\\\Clairville_Garet_Le_Palais_de_Chrysocale_(1855).pdf'), ('file_path', 'Files\\\\PDFs\\\\Clairville_Garet_Le_Palais_de_Chrysocale_(1855).pdf'), ('page', 2), ('total_pages', 14), ('Author', 'Clairville (M.)'), ('ModDate', \"D:20250624190059-04'00'\"), ('Producer', 'Google Books PDF Converter (rel 3 12/12/14)'), ('Title', 'Le palais de chrysocale ou les exposants et les exposés'), ('source', 'Files\\\\PDFs\\\\Clairville_Garet_Le_Palais_de_Chrysocale_(1855).pdf'), ('file_path', 'Files\\\\PDFs\\\\Clairville_Garet_Le_Palais_de_Chrysocale_(1855).pdf'), ('page', 3), ('total_pages', 14), ('Author', 'Clairville (M.)'), ('ModDate', \"D:20250624190059-04'00'\"), ('Producer', 'Google Books PDF Converter (rel 3 12/12/14)'), ('Title', 'Le palais de chrysocale ou les exposants et les exposés'), ('source', 'Files\\\\PDFs\\\\Clairville_Garet_Le_Palais_de_Chrysocale_(1855).pdf'), ('file_path', 'Files\\\\PDFs\\\\Clairville_Garet_Le_Palais_de_Chrysocale_(1855).pdf'), ('page', 4), ('total_pages', 14), ('Author', 'Clairville (M.)'), ('ModDate', \"D:20250624190059-04'00'\"), ('Producer', 'Google Books PDF Converter (rel 3 12/12/14)'), ('Title', 'Le palais de chrysocale ou les exposants et les exposés'), ('source', 'Files\\\\PDFs\\\\Clairville_Garet_Le_Palais_de_Chrysocale_(1855).pdf'), ('file_path', 'Files\\\\PDFs\\\\Clairville_Garet_Le_Palais_de_Chrysocale_(1855).pdf'), ('page', 5), ('total_pages', 14), ('Author', 'Clairville (M.)'), ('ModDate', \"D:20250624190059-04'00'\"), ('Producer', 'Google Books PDF Converter (rel 3 12/12/14)'), ('Title', 'Le palais de chrysocale ou les exposants et les exposés'), ('source', 'Files\\\\PDFs\\\\Clairville_Garet_Le_Palais_de_Chrysocale_(1855).pdf'), ('file_path', 'Files\\\\PDFs\\\\Clairville_Garet_Le_Palais_de_Chrysocale_(1855).pdf'), ('page', 6), ('total_pages', 14), ('Author', 'Clairville (M.)'), ('ModDate', \"D:20250624190059-04'00'\"), ('Producer', 'Google Books PDF Converter (rel 3 12/12/14)'), ('Title', 'Le palais de chrysocale ou les exposants et les exposés'), ('source', 'Files\\\\PDFs\\\\Clairville_Garet_Le_Palais_de_Chrysocale_(1855).pdf'), ('file_path', 'Files\\\\PDFs\\\\Clairville_Garet_Le_Palais_de_Chrysocale_(1855).pdf'), ('page', 7), ('total_pages', 14), ('Author', 'Clairville (M.)'), ('ModDate', \"D:20250624190059-04'00'\"), ('Producer', 'Google Books PDF Converter (rel 3 12/12/14)'), ('Title', 'Le palais de chrysocale ou les exposants et les exposés'), ('source', 'Files\\\\PDFs\\\\Clairville_Garet_Le_Palais_de_Chrysocale_(1855).pdf'), ('file_path', 'Files\\\\PDFs\\\\Clairville_Garet_Le_Palais_de_Chrysocale_(1855).pdf'), ('page', 8), ('total_pages', 14), ('Author', 'Clairville (M.)'), ('ModDate', \"D:20250624190059-04'00'\"), ('Producer', 'Google Books PDF Converter (rel 3 12/12/14)'), ('Title', 'Le palais de chrysocale ou les exposants et les exposés'), ('source', 'Files\\\\PDFs\\\\Clairville_Garet_Le_Palais_de_Chrysocale_(1855).pdf'), ('file_path', 'Files\\\\PDFs\\\\Clairville_Garet_Le_Palais_de_Chrysocale_(1855).pdf'), ('page', 9), ('total_pages', 14), ('Author', 'Clairville (M.)'), ('ModDate', \"D:20250624190059-04'00'\"), ('Producer', 'Google Books PDF Converter (rel 3 12/12/14)'), ('Title', 'Le palais de chrysocale ou les exposants et les exposés'), ('source', 'Files\\\\PDFs\\\\Clairville_Garet_Le_Palais_de_Chrysocale_(1855).pdf'), ('file_path', 'Files\\\\PDFs\\\\Clairville_Garet_Le_Palais_de_Chrysocale_(1855).pdf'), ('page', 10), ('total_pages', 14), ('Author', 'Clairville (M.)'), ('ModDate', \"D:20250624190059-04'00'\"), ('Producer', 'Google Books PDF Converter (rel 3 12/12/14)'), ('Title', 'Le palais de chrysocale ou les exposants et les exposés'), ('source', 'Files\\\\PDFs\\\\Clairville_Garet_Le_Palais_de_Chrysocale_(1855).pdf'), ('file_path', 'Files\\\\PDFs\\\\Clairville_Garet_Le_Palais_de_Chrysocale_(1855).pdf'), ('page', 11), ('total_pages', 14), ('Author', 'Clairville (M.)'), ('ModDate', \"D:20250624190059-04'00'\"), ('Producer', 'Google Books PDF Converter (rel 3 12/12/14)'), ('Title', 'Le palais de chrysocale ou les exposants et les exposés'), ('source', 'Files\\\\PDFs\\\\Clairville_Garet_Le_Palais_de_Chrysocale_(1855).pdf'), ('file_path', 'Files\\\\PDFs\\\\Clairville_Garet_Le_Palais_de_Chrysocale_(1855).pdf'), ('page', 12), ('total_pages', 14), ('Author', 'Clairville (M.)'), ('ModDate', \"D:20250624190059-04'00'\"), ('Producer', 'Google Books PDF Converter (rel 3 12/12/14)'), ('Title', 'Le palais de chrysocale ou les exposants et les exposés'), ('source', 'Files\\\\PDFs\\\\Clairville_Garet_Le_Palais_de_Chrysocale_(1855).pdf'), ('file_path', 'Files\\\\PDFs\\\\Clairville_Garet_Le_Palais_de_Chrysocale_(1855).pdf'), ('page', 13), ('total_pages', 14), ('Author', 'Clairville (M.)'), ('ModDate', \"D:20250624190059-04'00'\"), ('Producer', 'Google Books PDF Converter (rel 3 12/12/14)'), ('Title', 'Le palais de chrysocale ou les exposants et les exposés')]\n\n\nSo, some of this info is useful and some isn’t.\nWe should keep: * Source (but clean it so it’s just the filename) * Filepath * Page * Total pages * Creator * Title\nWe should remove: * CreationDate (the date it was turned to pdf is not relevant) * ModDate * Producer\nWe also want to add the CSV metadata in as extra rows in the metadata dictionary\n\n\nCode\n# Cleaning the sources to match with the CSV source names\nfor i,source in enumerate(loaded_PDFs):\n    for page in source:\n        page.metadata['source'] = page.metadata['source'].replace(\"Files\\\\PDFs\\\\\", \"\")\n    if i &lt; 6:\n        print(source[0].metadata['source'])\n\n\nAs_tu_vu_la_comete_mon_gas_text.pdf\nBrutus_ou_le_dernier_soldat.pdf\nClairville_Garet_Le_Palais_de_Chrysocale_(1855).pdf\nClairville_Thiboust_Le_quart_du_monde_(1855).pdf\nCoraly_ou_la_soeur_et_le_Frere.pdf\nDupin_Dumanoir_La_toque_bleue_(1834).pdf\n\n\n\n\nCode\n# Sorting both the CSV and PDF metadata to match\ncsv_metadata.sort(key=lambda x: x.metadata['source'])\nloaded_PDFs.sort(key=lambda x: x[0].metadata['source'])\n\n\n\n\nCode\n# Use assert to ensure the sources match\nfor i in range(32,len(csv_metadata)):\n    assert csv_metadata[i].metadata['source'] == loaded_PDFs[i][0].metadata['source'], f\"Mismatch at index {i}: {csv_metadata[i].metadata['source']} != {loaded_PDFs[i][0].metadata['source']}\"\n\n\nI had to change the lower index because there were various slight mismatches, but we’ve checked that all files are actually the same so we’re moving on.\n\n\nWe should remove: * CreationDate (the date it was turned to pdf is not relevant) * ModDate * Producer\n\n\nCode\nprint(len(csv_metadata))\nprint(len(loaded_PDFs))\n\n\n35\n35\n\n\n\n\nCode\nirrelevant_metadata = ['CreationDate', 'ModDate', 'Producer']\n\nfor i in range(len(loaded_PDFs)):\n    document = loaded_PDFs[i]\n    for page in document:\n        for key in irrelevant_metadata:\n            if key in page.metadata:\n                del page.metadata[key]\n        # Add the category and year from the CSV metadata\n        # assert page.metadata['source'] == csv_metadata[i].metadata['source'], \"Source mismatch between PDF and CSV metadata\"\n        for row in csv_metadata[i].metadata.items():\n            page.metadata.update({row[0]: row[1]})\n\nfor i in range(5):\n    document = loaded_PDFs[i]\n    print(document[0].metadata)\n\n\n{'source': 'As_tu_vu_la_comete_mon_gas_text.pdf', 'file_path': 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf', 'page': 0, 'total_pages': 104, 'Creator': 'Bibliothèque nationale de France', 'Title': \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\", 'row': 0, 'Year': '1858', 'Work': 'As-tu vu la comète, mon gas?', 'Theatre': 'Théâtre des Variétés'}\n{'source': 'Brutus_ou_le_dernier_soldat.pdf', 'file_path': 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf', 'page': 0, 'total_pages': 47, 'row': 1, 'Year': '1843', 'Work': 'Brutus ou le dernier soldat du guet', 'Theatre': 'Théâtre du Vaudeville'}\n{'source': 'Clairville_Garet_Le_Palais_de_Chrysocale_(1855).pdf', 'file_path': 'Files\\\\PDFs\\\\Clairville_Garet_Le_Palais_de_Chrysocale_(1855).pdf', 'page': 0, 'total_pages': 14, 'Author': 'Clairville (M.)', 'Title': 'Le palais de chrysocale ou les exposants et les exposés', 'row': 2, 'Year': '1855', 'Work': 'Le Palais de Chrysocale', 'Theatre': 'Théâtre des Variétés'}\n{'source': 'Clairville_Thiboust_Le_quart_du_monde_(1855).pdf', 'file_path': 'Files\\\\PDFs\\\\Clairville_Thiboust_Le_quart_du_monde_(1855).pdf', 'page': 0, 'total_pages': 10, 'Author': 'Lambert-Thiboust (1826-1867)', 'Creator': 'Bibliothèque nationale de France', 'Title': 'Le Quart de monde, ou le Danger d\\'une particulière pleine de malice pour un individu vraiment impressionnable (parodie du \"Demi-monde\"), étude réaliste mêlée de couplets et d\\'effets de style, par MM. Clairville et Lambert ...', 'row': 3, 'Year': '1855', 'Work': 'Le Quart de Monde', 'Theatre': 'Théâtre des Variétés'}\n{'source': 'Coraly_ou_la_soeur_et_le_Frere.pdf', 'file_path': 'Files\\\\PDFs\\\\Coraly_ou_la_soeur_et_le_Frere.pdf', 'page': 0, 'total_pages': 47, 'Author': 'Eugène Scribe', 'Title': 'Coraly, ou la soeur et le Frere, comedie-vaudeville en 1 acte', 'row': 4, 'Year': '1824', 'Work': 'Coraly', 'Theatre': 'Théâtre du Gymnase-Dramatique'}\n\n\n\n\nCode\n# Convert each sublist into a single document\ndef convert_list_to_document(pages: list) -&gt; Document:\n    document_content: str = \"\"\n    for page in pages:\n        document_content += page.page_content\n    document: Document = Document(\n        page_content=document_content,\n        metadata=pages[0].metadata  # Use the metadata from the first page\n    )\n    return document\n\n# Convert loaded PDFs to documents\ndocs = []\nfor source in loaded_PDFs:\n    doc = convert_list_to_document(source)\n    docs.append(doc)  # Append the single Document object\n\n\n\n\nCode\nprint(docs[2].page_content[1000:1500])\n\n\nN, Espagnole........ BODIN.\nLISBETH, Allemande.. MARIE.\n..\nMARGOT, femmede Canichon, paysanne. MmeLEQUIEN.\n..\nNATA, Chinoise... MilesRAUCOURT.\n...\nNELLY, Hollandaise.... MADELEINE.\n....\nUNE LOUEUSE DE CHAISES.. CLÉMENCE.\n...\nUNE MARCHANDE DE PLAISIRS.. GILLES.\nUNE MARCHANDE DE BOUQUETS....... Mine MARQUILLY.\n..\nFoulede Curieux, Commissionnaires..\nTouteslesindications sontprisesdela gauche etdeladroiteduspectateur.Les personnages sontinscrits\nentêtedesscènesdansl'ordrequ'ils occupentauthéâtre;les\n\n\n\n\nCode\ndocs.pop(0)  # Remove the first document because it rendered as empty\ndocs.pop(0)  # Remove the second document because it rendered as empty\n\n\nDocument(metadata={'source': 'Brutus_ou_le_dernier_soldat.pdf', 'file_path': 'C:\\\\Users\\\\charl\\\\Documents\\\\VSCode\\\\Vaudeville\\\\Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf', 'page': 0, 'total_pages': 47, 'row': 1, 'Year': '1843', 'Work': 'Brutus ou le dernier soldat du guet', 'Theatre': 'Théâtre du Vaudeville'}, page_content='\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n')\n\n\n\n\nCode\n# Double check metadata\nfor i in range(0,5):\n    print(f\"Document {i} Metadata: {docs[i].metadata}\")\n\n\nDocument 0 Metadata: {'source': 'As_tu_vu_la_comete_mon_gas_text.pdf', 'file_path': 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf', 'page': 0, 'total_pages': 104, 'Creator': 'Bibliothèque nationale de France', 'Title': \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\", 'row': 0, 'Year': '1858', 'Work': 'As-tu vu la comète, mon gas?', 'Theatre': 'Théâtre des Variétés'}\nDocument 1 Metadata: {'source': 'Brutus_ou_le_dernier_soldat.pdf', 'file_path': 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf', 'page': 0, 'total_pages': 47, 'row': 1, 'Year': '1843', 'Work': 'Brutus ou le dernier soldat du guet', 'Theatre': 'Théâtre du Vaudeville'}\nDocument 2 Metadata: {'source': 'Clairville_Garet_Le_Palais_de_Chrysocale_(1855).pdf', 'file_path': 'Files\\\\PDFs\\\\Clairville_Garet_Le_Palais_de_Chrysocale_(1855).pdf', 'page': 0, 'total_pages': 14, 'Author': 'Clairville (M.)', 'Title': 'Le palais de chrysocale ou les exposants et les exposés', 'row': 2, 'Year': '1855', 'Work': 'Le Palais de Chrysocale', 'Theatre': 'Théâtre des Variétés'}\nDocument 3 Metadata: {'source': 'Clairville_Thiboust_Le_quart_du_monde_(1855).pdf', 'file_path': 'Files\\\\PDFs\\\\Clairville_Thiboust_Le_quart_du_monde_(1855).pdf', 'page': 0, 'total_pages': 10, 'Author': 'Lambert-Thiboust (1826-1867)', 'Creator': 'Bibliothèque nationale de France', 'Title': 'Le Quart de monde, ou le Danger d\\'une particulière pleine de malice pour un individu vraiment impressionnable (parodie du \"Demi-monde\"), étude réaliste mêlée de couplets et d\\'effets de style, par MM. Clairville et Lambert ...', 'row': 3, 'Year': '1855', 'Work': 'Le Quart de Monde', 'Theatre': 'Théâtre des Variétés'}\nDocument 4 Metadata: {'source': 'Coraly_ou_la_soeur_et_le_Frere.pdf', 'file_path': 'Files\\\\PDFs\\\\Coraly_ou_la_soeur_et_le_Frere.pdf', 'page': 0, 'total_pages': 47, 'Author': 'Eugène Scribe', 'Title': 'Coraly, ou la soeur et le Frere, comedie-vaudeville en 1 acte', 'row': 4, 'Year': '1824', 'Work': 'Coraly', 'Theatre': 'Théâtre du Gymnase-Dramatique'}\n\n\n\n\n\n\n\n\nCode\ntext_splitter = RecursiveCharacterTextSplitter(\n    chunk_size=2000,  # chunk size (characters)\n    chunk_overlap=400,  # chunk overlap (characters)\n    add_start_index=True,  # track index in original document\n)\nall_splits = text_splitter.split_documents(docs)\n\nprint(f\"Split {len(docs)} PDFs into {len(all_splits)} sub-documents.\")\n\n\nSplit 35 PDFs into 1415 sub-documents.\n\n\n\n\n\n\n\nCode\nprint(len(all_splits))\n\n\n1415\n\n\n\n\nCode\n# If we run this again when reestablishing variables, it will duplicate documents and charge us\n\n# Splitting into three chunks to avoid overloading the vector store\n# vector_store.add_documents(documents=all_splits[:350])\n# vector_store.add_documents(documents=all_splits[350:700])\n# vector_store.add_documents(documents=all_splits[700:1050])\n# vector_store.add_documents(documents=all_splits[1050:])\n\n\n\n\n\n\nHere we set up our prompt and LangGraph. LangGraph allows us to set up nodes (steps) for our program to follow. The State class transfers information between each node.\nThis is the setup for the basic RAG. Later we set up a self-check.\n\n\nCode\n# Setting up chat model\n\nif not os.environ.get(\"OPENAI_API_KEY\"):\n  os.environ[\"OPENAI_API_KEY\"] = getpass.getpass(\"Enter API key for OpenAI: \")\n\nllm = init_chat_model(\"gpt-4o\", model_provider=\"openai\")\n\n# Setting up embeddings\n\nif not os.environ.get(\"OPENAI_API_KEY\"):\n  os.environ[\"OPENAI_API_KEY\"] = getpass.getpass(\"Enter API key for OpenAI: \")\n\n\nembeddings = OpenAIEmbeddings(model=\"text-embedding-3-large\")\n\n# Reestablishing up our persist directory for Chroma\n\nvector_store = Chroma(\n    collection_name=\"example_collection\",\n    embedding_function=embeddings,\n    persist_directory=\"./chroma_langchain_db\",  # Where we stored our data before\n)\n\n# Reestablishing retrieval and generation functions\n\n\nprompt = ChatPromptTemplate.from_messages([\n    (\"system\", 'You are an expert in French musical theatre and opera of the 19th century.  You will help us explore the texts (librettos) of vaudevilles, which are dramatic productions that include periodic musical numbers, which might be songs, choruses, instrumental dances, and other sonic events. \\n '\n    'Many of these musical moments reuse some preexisting (and often well-known)  melody or tune.  These are variously called “melodie”, or “air”, and identified with a short title that refers in some way to an opera or collection of melodies from which it was drawn.  The titles might include the names of works, or other characters in those original works. '\n    '\\n In the context of the plays, these tunes become the vehicle for newly composed lyrics, which are normally rhymed, and which normally follow the poetic scansion and structure of the original lyrics.  Rhyme, versification and structure are thus of interest to us. \\n Keep the following attributes in mind as you answer questions based on the texts provided:'\n    '-the act and scene in which the event takes place'\n    '-the character or characters who are singing (or otherwise making music),'\n    '-the dramatic situation (a love scene, a crowd scene)'\n    '-the name of the air or melodie'\n    '-the poetic text'\n    '-the rhyme scheme'\n    '-form of the poetic text, which might involve some refrain'\n    '-the end accent for each line (masculine or féminine)'\n    '-syllable count for each line'\n    '-any irregularities you notice'\n    'If you cannot find the answers for anything within the context provided, state \"I dont know\" or similar - do not make assumptions beyond what is actually in the context.\\n\\n'),\n    (\"human\", \"Context:\\n{context}\\n\\nQuestion: {question}\")\n])\n\nclass State(TypedDict):\n    question: str\n    filter: Optional[dict]\n    context: List[Document]\n    answer: str\n\ndef apply_filter(state: State):\n    if \"filter\" in state and state[\"filter\"]:\n        state[\"filter\"] = {k: v for k, v in state[\"filter\"].items() if v is not None}\n    else:\n        state[\"filter\"] = None\n    return state\n\ndef retrieve(state: State):\n    filter_dict = state[\"filter\"] if state.get(\"filter\") else None\n    retrieved_docs = vector_store.similarity_search(state[\"question\"], k=15, filter=filter_dict)\n    return {\"context\": retrieved_docs}\n\ndef generate(state: State):\n    docs_content = \"\"\n    for doc in state[\"context\"]:\n        docs_content += f\"The following text is a chunk from document titled: {doc.metadata[\"Work\"]}. There are a total of {doc.metadata[\"total_pages\"]} pages in this play. \\n\"\n        docs_content += doc.page_content + \"\\n\\n\"\n    message = prompt.invoke({\"question\": state[\"question\"], \"context\": docs_content})\n    response = llm.invoke(message)\n    return {\"answer\": response.content}\n\n# Reestablishing langgraph\n\ngraph_builder = StateGraph(State).add_sequence([apply_filter, retrieve, generate])\ngraph_builder.add_edge(START, \"retrieve\")\ngraph = graph_builder.compile()\n\n\n\n\nCode\ndef analyze_play(i: int):\n\n    if i &lt; 0 or i &gt;= len(docs):\n        raise ValueError(\"Index out of range for the documents list.\")\n    \n    # Apply the graph to the state\n    message = prompt.invoke({\"question\": \"Analyze this play according to the system prompt.\", \"context\": docs[i].page_content})\n    return llm.invoke(message).content\n\n\n\n\n\nNow we have the basics set up. Here, we see how it performs. Later, we add a self-check step.\n\n\nCode\nresult = graph.invoke({\"question\": \"Tell me about the elements of Un Docteur en Herbe\"})\n\nprint(f'Answer: {result[\"answer\"]}')\nprint(\"\\n\\nSources:\")\nfor i, source in enumerate(result[\"context\"]):\n    print(f'Source {i+1}: {source.metadata[\"source\"]}')\n\n\nAnswer: Based on the provided text from \"Un Docteur en herbe,\" here is a structured summary of the musical moments and other relevant details:\n\n### Act I\n\n**Scene I**\n- **Characters**: Derbigny, Isidore, Lambert\n- **Dramatic Situation**: Preparations for an exam; father is urging his son to wake up.\n- **Musical Element**: None noted in this scene.\n\n**Scene II**\n- **Characters**: Isidore, Derbigny, Lambert\n- **Dramatic Situation**: Conversation about Isidore's preparation and attire.\n- **Musical Element**: None noted in this scene.\n\n**Scene III**\n- **Characters**: Isidore, Lambert\n- **Dramatic Situation**: Discussion about Isidore's lack of interest in law and preference for painting.\n- **Musical Element**: None noted in this scene.\n\n---\n\n### Act II\n\n**Scene I**\n- **Characters**: Isidore, Lambert, Delapierre Meulière\n- **Dramatic Situation**: Isidore elated about developments with Pauline.\n- **Musical Element**:\n  - **Name of the Air**: \"Ne vois-tu pas, jeune imprudent\"\n  - **Poetic Text**: \n    ```\n    Son âge l'excuse, je crois; \n    Auprès de vous qu'il rentre en grâce,\n    Car en n'est jeune qu'une fois:\n    Il faut que jeunesse se passe.\n    La folie, hélas! n'a qu'un temps,\n    Et nous avons beau nous débattre,\n    On n'a pas deux fois vingt-deux ans,\n    ```\n  - **Rhyme Scheme**: AABB CCDD\n  - **Form of the Poetic Text**: Eight lines with a couplet structure.\n  - **End Accent**: Masculine for all lines.\n  - **Syllable Count**: 10 for each line.\n  - **Irregularities**: None noted.\n\n---\n\n**Scene II**\n- **Characters**: Isidore, Delapierre Meulière, Derbigny\n- **Dramatic Situation**: Discussion of Isidore’s behavior and the expectations surrounding him.\n- **Musical Element**:\n  - **Name of the Air**: \"Ociel! quelle aventure!\"\n  - **Poetic Text**: \n    ```\n    Quel avenir superbe! \n    Le sort protègera \n    Notre docteur en herbe, \n    Qui bientôt fleurira.\n    \n    Sur ce terrain de la goguette, \n    On met d'côté la question d'art, \n    Et si la pièce n'est pas chouette, \n    Fait's quel'succès soit chic en art.\n    ```\n  - **Rhyme Scheme**: ABAB CDCD\n  - **Form of the Poetic Text**: A refrain followed by verses.\n  - **End Accent**: Masculine for the first and third lines; feminine for the second and fourth lines.\n  - **Syllable Count**: 8 for each line.\n  - **Irregularities**: None noted.\n\n### Additional Observations\n- Musical elements in the form of ancient or well-known melodies are both adapted and reused throughout the play.\n- The structure of the vaudeville allows for the interspersion of dialogue with songs that advance the plot or characterize the figures, maintaining a light-hearted comedic atmosphere typical of the genre.\n\nIf additional analyses of specific scenes or frameworks of other acts are needed, please let me know!\n\n\nSources:\nSource 1: Un_docteur_en_herbe.pdf\nSource 2: Un_docteur_en_herbe.pdf\nSource 3: Ohé_Les_p_tits_agneaux_revue.pdf\nSource 4: Ohé_Les_p_tits_agneaux_revue.pdf\nSource 5: Un_docteur_en_herbe.pdf\nSource 6: Un_docteur_en_herbe.pdf\nSource 7: Ohé_Les_p_tits_agneaux_revue.pdf\nSource 8: Un_docteur_en_herbe.pdf\nSource 9: Un_docteur_en_herbe.pdf\nSource 10: Un_docteur_en_herbe.pdf\n\n\n\n\nCode\nresult = graph.invoke({\"question\": \"Tell me about the elements of Un Docteur en Herbe\",\n                       \"filter\": {\"Work\": \"Un Docteur en herbe\"}})\n\nprint(f'Answer: {result[\"answer\"]}')\nprint(\"\\n\\nSources:\")\nfor i, source in enumerate(result[\"context\"]):\n    print(f'Source {i+1}: {source.metadata[\"source\"]}')\n\n\nAnswer: \"Un Docteur en Herbe\" is a 19th-century French vaudeville in two acts. Here are the elements based on the text provided:\n\n**Act and Scene**: The play consists of two acts. Specific scenes mentioned in the provided text include Act I Scenes 1, 2, 3, 12, 13, and Act II Scene 15.\n\n**Characters/Singing**:\n1. **Derbigny** - Portrayed as an older character (50 years old) interacting with Isidore and Lambert.\n2. **Isidore** - Derbigny's son, a law student, who is portrayed as naive and somewhat scatterbrained.\n3. **Lambert** - A young doctor, involved in conversation with Derbigny and Isidore, and is characterized by a focus on balance between work and pleasure.\n4. **Delapierre Meulière** - Refers to Lambert as a friend; there's some dramatic tension with Isidore involving his daughter.\n5. **Pauline** - Derbigny’s daughter, appears in interactions with Isidore and Delapierre Meulière.\n6. **Paméla** - A grisette, involved in scenes with Isidore and Lambert.\n\n**Dramatic Situation**: \n- The play seems to revolve around personal dynamics and misunderstandings, involving themes of naiveté, societal roles, and familial obligations. \n- A specific dramatic situation includes a potential duel scenario between Isidore and Delapierre Meulière.\n- There's an element of Isidore preparing for a law exam under his father and Lambert's guidance.\n\n**Musical Elements**:\n- There are references to airs (musical pieces) like \"Ne vois-tu pas, jeune imprudent\" and \"Ociel! quelle aventure!\" which are part of vaudeville tradition using preexisting popular tunes with new lyrics.\n\n**Poetic Text**:\n- The language is rhymed and in a playful, comical style fitting vaudeville, often reflecting on the absurdity of situations.\n\n**Rhyme Scheme, Form, and Structure**:\n- Typical for the period's vaudeville, likely using couplets or quatrains, with rhymes that could be masculine or feminine.\n- Number of syllables per line and specific rhyme schemes aren't directly given in the provided text.\n\n**End Accent and Syllable Count**: \n- Not explicitly outlined, but likely varies as is common in vaudeville for comedic or dramatic effect.\n\n**Irregularities**:\n- Characters frequently switch between prose and verse, with humorous misunderstandings and comically exaggerated threats or situations.\n\nOverall, \"Un Docteur en Herbe\" showcases typical vaudeville elements with humorous dialogue, character-driven plots, and intermittent musical numbers using well-known tunes. Its themes revolve around youthful indiscretions, societal obligations, and family tensions, presented in a light-hearted manner.\n\n\nSources:\nSource 1: Un_docteur_en_herbe.pdf\nSource 2: Un_docteur_en_herbe.pdf\nSource 3: Un_docteur_en_herbe.pdf\nSource 4: Un_docteur_en_herbe.pdf\nSource 5: Un_docteur_en_herbe.pdf\nSource 6: Un_docteur_en_herbe.pdf\nSource 7: Un_docteur_en_herbe.pdf\nSource 8: Un_docteur_en_herbe.pdf\nSource 9: Un_docteur_en_herbe.pdf\nSource 10: Un_docteur_en_herbe.pdf\nSource 11: Un_docteur_en_herbe.pdf\nSource 12: Un_docteur_en_herbe.pdf\nSource 13: Un_docteur_en_herbe.pdf\nSource 14: Un_docteur_en_herbe.pdf\nSource 15: Un_docteur_en_herbe.pdf\n\n\n\n\nCode\nresult = graph.invoke({\"question\": \"Compare Un Docteur en Herbe to Les Artistes par occasion.\",\n                       \"filter\": {\"$or\": [{\"Work\": \"Un Docteur en herbe\"},{\"Work\": \"Les Artistes par occasion\"}]}})\n\nprint(f'Answer: {result[\"answer\"]}')\nprint(\"\\n\\nSources:\")\nfor i, source in enumerate(result[\"context\"]):\n    print(f'Source {i+1}: {source.metadata[\"source\"]}')\n\n\nAnswer: The two plays, \"Un Docteur en Herbe\" by Duvert et Lausanne and \"Les Artistes par Occasion\" by Alexandre Duval, offer an insightful glimpse into 19th-century French vaudeville. Below is a comparative analysis based on the available text excerpts.\n\n**Act and Scene Structure:**\n- \"Un Docteur en Herbe\" is structured in at least two acts with multiple scenes, involving a diverse set of characters within different locations like a hotel in Paris and a house in Briare. The excerpts suggest a rich narrative with tight interactions among characters in different settings.\n- \"Les Artistes par Occasion\" is a single-act play set in a garden in Tivoli, near Rome, offering a continuous flow without the segmentation into multiple acts as seen in \"Un Docteur en Herbe.\"\n\n**Characters and Roles:**\n- \"Un Docteur en Herbe\" features characters such as Derbigny, Isidore, Lambert, Pauline, Pamela, and others, engaging in multi-layered relationships, often revolving around family dynamics, profession, and social standings.\n- \"Les Artistes par Occasion\" involves characters like Fomboni, Delmonte, Eléonore, Zerbine, and Pedro in a more direct plot centered around artistic endeavors and social interactions.\n\n**Dramatic Situation:**\n- The dramatic situation in \"Un Docteur en Herbe\" includes themes of social expectations, familial pressures, youthful folly, and examinations. Scenes often juxtapose personal desires with duties and societal pressure.\n- In contrast, \"Les Artistes par Occasion\" focuses on the anticipation of renowned artists visiting coinciding with preparations for a celebration, prominently involving elements of romance and artistic appreciation.\n\n**Musical Elements:**\n- \"Un Docteur en Herbe\" is infused with musical interludes enhancing the comedic and dramatic situations. The presence of airs such as \"Ne vois-tu pas, jeune imprudent\" showcases the integration of recognizable tunes with new lyrics for theatrical effect.\n- In \"Les Artistes par Occasion,\" music is also integral, with songs like romance and duet being part of the narrative, aligning with the theme of being an artist or art enthusiast.\n\n**Textual Form and Style:**\n- Both plays employ a blend of prose and rhymed verse, especially in songs, and exhibit a typical vaudeville style by integrating humor, exaggeration, and societal critique.\n- \"Un Docteur en Herbe\" often utilizes humor rooted in misunderstandings and societal norms, presenting dialogues that reveal character follies or ignorance comically.\n- The text of \"Les Artistes par Occasion\" indicates an emphasis on the romantic and artistic expressions and lite societal satire.\n\nIn summary, while both plays belong to the vaudeville genre, they differ in structure, themes, and settings but share certain elements like musical integration and humor. \"Un Docteur en Herbe\" presents a more intricate plot with diverse characters and settings, whereas \"Les Artistes par Occasion\" revolves around an artistic and romantic theme within a singular setting. Both works highlight the cultural inclinations of 19th-century French theatre through their unique but complementary lenses.\n\n\nSources:\nSource 1: Un_docteur_en_herbe.pdf\nSource 2: Un_docteur_en_herbe.pdf\nSource 3: Un_docteur_en_herbe.pdf\nSource 4: Un_docteur_en_herbe.pdf\nSource 5: Un_docteur_en_herbe.pdf\nSource 6: Duval_Les_artistes_par_occasion_(1807).pdf\nSource 7: Un_docteur_en_herbe.pdf\nSource 8: Duval_Les_artistes_par_occasion_(1807).pdf\nSource 9: Un_docteur_en_herbe.pdf\nSource 10: Un_docteur_en_herbe.pdf\nSource 11: Un_docteur_en_herbe.pdf\nSource 12: Un_docteur_en_herbe.pdf\nSource 13: Un_docteur_en_herbe.pdf\nSource 14: Un_docteur_en_herbe.pdf\nSource 15: Un_docteur_en_herbe.pdf\n\n\n\n\nCode\nresult = graph.invoke({\"question\": \"Compare the elements of Un Docteur en Herbe to Les Artistes par occasion.\",\n                       \"filter\": {\"$or\": [{\"Work\": \"Un Docteur en herbe\"},{\"Work\": \"Les Artistes par occasion\"}]}})\n\nprint(f'Answer: {result[\"answer\"]}')\nprint(\"\\n\\nSources:\")\nfor i, source in enumerate(result[\"context\"]):\n    print(f'Source {i+1}: {source.metadata[\"source\"]}')\n\n\nAnswer: When comparing the elements of \"Un Docteur en Herbe\" to \"Les Artistes par occasion,\" several aspects are noticeable:\n\n1. **Dramatic Structure:**\n   - **Un Docteur en Herbe**: Structured as a comedy-vaudeville in two acts, involving multiple characters and detailed scenes with numerous interactions.\n   - **Les Artistes par occasion**: A comedy with elements of ariettes (singing parts), presented in one act, typically showing a lighter and straightforward storyline.\n\n2. **Setting:**\n   - **Un Docteur en Herbe**: Its setting transitions from an inn in Paris to the house of Derbigny in Briare, focusing on indoor, familial, and academic environments. \n   - **Les Artistes par occasion**: Set in a picturesque garden in Tivoli, near Rome, offering an outdoor setting associated with art and leisure.\n\n3. **Characters:**\n   - **Un Docteur en Herbe**: Features characters like Derbigny, Isidore, Lambert, and Pauline, focusing on familial relationships and professional futures with a comedic undertone.\n   - **Les Artistes par occasion**: Includes characters like Fomboni, Pedro, and Eléonore, focusing on themes related to arts and performance, accompanied by humor and impersonations.\n\n4. **Dramatic Situation:**\n   - **Un Docteur en Herbe**: Predominantly revolves around Isidore's academic challenges and humorous interactions regarding his future and marriage proposals.\n   - **Les Artistes par occasion**: Centers on the comedic interactions of mistaken identities and artist impersonations leading to amusing situations.\n\n5. **Musical Elements:**\n   - **Un Docteur en Herbe**: Includes vaudeville numbers with integrated songs like \"AIR Ne vois-tu pas, jeune imprudent\" which show dramatic interaction through lyrics.\n   - **Les Artistes par occasion**: Involves ariettes where characters express emotions and storytelling, evidencing the influence of Italian opera style in the dialogue.\n\n6. **Comedy Style:**\n   - **Un Docteur en Herbe**: The comedy emerges from familial situations, personal relationships, and Isidore's endearing naiveté.\n   - **Les Artistes par occasion**: The humor is embedded in cultural misunderstandings and the satirical take on the life of artists.\n\nConclusively, both plays exhibit a variétal approach to humor and musical integration within dramatic narratives, yet they take distinct thematic paths—academic and familial foibles in \"Un Docteur en Herbe\" versus artistic pretensions and romance in \"Les Artistes par occasion.\"\n\n\nSources:\nSource 1: Un_docteur_en_herbe.pdf\nSource 2: Un_docteur_en_herbe.pdf\nSource 3: Un_docteur_en_herbe.pdf\nSource 4: Un_docteur_en_herbe.pdf\nSource 5: Un_docteur_en_herbe.pdf\nSource 6: Duval_Les_artistes_par_occasion_(1807).pdf\nSource 7: Un_docteur_en_herbe.pdf\nSource 8: Un_docteur_en_herbe.pdf\nSource 9: Un_docteur_en_herbe.pdf\nSource 10: Un_docteur_en_herbe.pdf\nSource 11: Un_docteur_en_herbe.pdf\nSource 12: Un_docteur_en_herbe.pdf\nSource 13: Duval_Les_artistes_par_occasion_(1807).pdf\nSource 14: Duval_Les_artistes_par_occasion_(1807).pdf\nSource 15: Un_docteur_en_herbe.pdf\n\n\n\n\nCode\nresult = graph.invoke({\"question\": \"How do the poetic elements of Un Docteur en Herbe compare to other works?\"})\n\nprint(f'Answer: {result[\"answer\"]}')\nprint(\"\\n\\nSources:\")\nfor i, source in enumerate(result[\"context\"]):\n    print(f'Source {i+1}: {source.metadata[\"source\"]}')\n\n\nAnswer: The poetic elements of \"Un Docteur en Herbe\" can be compared to other 19th-century French vaudevilles and operettas in various ways, particularly in terms of rhyme scheme, versification, structure, and thematic elements. Here are some points of comparison:\n\n1. **Rhyme Scheme and Meter:**\n   - In \"Un Docteur en Herbe,\" the use of regular rhyme schemes (often alternating) is typical of the genre, which emphasizes musicality and the ease of memorization for the audience. For example, the song \"Moifumer?paslemoinsdumonde\" often follows an ABAB rhyme scheme.\n   - This approach mirrors that of other contemporaneous works such as Jacques Offenbach’s operettas, which also employed accessible and catchy verse structures, enhancing their appeal to a wide audience.\n\n2. **Syllable Count and Scansion:**\n   - The texts in \"Un Docteur en Herbe\" typically feature octo-syllabic or decasyllabic lines, creating a rhythmic flow that suits the comedic and often lighthearted nature of the narrative. This is similar to operatic arias from the same period, where the lyrical quality must complement expressive melodies.\n   - Compared to works like \"La Belle Hélène,\" Offenbach often used varied syllable counts to increase dramatic tension or comedic effect, which can sometimes diverge from the more uniform counts in \"Un Docteur en Herbe.\"\n\n3. **Form and Structure:**\n   - The inclusion of refrains and repeated phrases in songs from \"Un Docteur en Herbe\" reinforces the communal aspect of performance, similar to the structure found in many folk songs and popular operettas of the time.\n   - Conversely, while many vaudevilles adhered closely to simple verse forms, some pieces from composers like Charles Gounod explore more complex forms to convey deeper emotion, which might be less prevalent in the more straightforward approach of \"Un Docteur en Herbe.\"\n\n4. **Thematic Elements:**\n   - Thematic exploration in \"Un Docteur en Herbe\" reflects societal norms and humorous takes on medical practices and romantic entanglements, which are common in many vaudevilles. This is reminiscent of similar themes in other works like \"La Périchole,\" where social satire and romantic comedy intersect.\n   - In comparison, works like Victor Hugo’s \"Ruy Blas,\" while not an operetta, often utilize poetic elements that are richer in existential themes, contrasting with the lighter, comedic tones evident in \"Un Docteur en Herbe.\"\n\n5. **Characterization through Song:**\n   - The musical moments in \"Un Docteur en Herbe\" often serve to develop character traits and enhance dramatic situations (e.g., Isidore's self-deprecating humor about smoking). This technique is also prevalent in other works where songs deliver crucial insight into character motivations, as seen in the operettas of Gilbert and Sullivan.\n   - However, in more serious operatic compositions, musical moments may serve to express deep emotional states, focusing more on lyrical poetry and less on comedy.\n\nIn conclusion, while \"Un Docteur en Herbe\" shares many characteristics with other 19th-century works in terms of rhyme and structure, it maintains a lighthearted approach toward themes of love and societal norms through its lyrical form. Its comedic elements align it more closely with the vaudeville tradition, contrasting with the dramatic narratives of more serious operatic works.\n\n\nSources:\nSource 1: Un_docteur_en_herbe.pdf\nSource 2: Un_docteur_en_herbe.pdf\nSource 3: Ohé_Les_p_tits_agneaux_revue.pdf\nSource 4: Ohé_Les_p_tits_agneaux_revue.pdf\nSource 5: Un_docteur_en_herbe.pdf\nSource 6: Labiche_Rue_de_l'Homme_armé_(1849).pdf\nSource 7: Un_docteur_en_herbe.pdf\nSource 8: Un_docteur_en_herbe.pdf\nSource 9: Ohé_Les_p_tits_agneaux_revue.pdf\nSource 10: La_Dette_d_honneur.pdf\n\n\n\n\nCode\nresult = graph.invoke({\"question\": \"What airs / melodies are present in Les Modistes?\", \"filter\": {\"Work\": \"Les Modistes\"}})\n\nprint(f'Answer: {result[\"answer\"]}')\nprint(\"\\n\\nSources:\")\nfor i, source in enumerate(result[\"context\"]):\n    print(f'Source {i+1}: {source.metadata[\"source\"]}')\n\n\nAnswer: \"Les Modistes\" is a comical operetta by Hervé, which premiered in 1872. It tells the story of a group of fashionable milliners and the romantic entanglements surrounding them. In examining the musical moments in \"Les Modistes,\" here's a breakdown of the relevant details regarding the airs/mélodies present in the piece:\n\n### Act 1\n\n#### Scene 1\n- **Character(s)**: Léon, a wealthy suitor, and the milliners\n- **Dramatic Situation**: A lively introduction as Léon meets the milliners and admires their work\n- **Name of the Air or Mélodie**: \"Les petits mousses\" (a well-known air from \"Les Huguenots\" by Meyerbeer)\n- **Poetic Text**: Celebratory lyrics about fashion and beauty\n- **Rhyme Scheme**: AABB\n- **Form of the Poetic Text**: Strophic with a refrain\n- **End Accent for Each Line**: Alternating feminine and masculine accents\n- **Syllable Count**: Lines typically range from 8 to 12 syllables\n- **Irregularities**: Some lines may extend beyond typical syllable patterns for added emphasis.\n\n#### Scene 2\n- **Character(s)**: Primarily the milliners (Désirée, Rosine, and others)\n- **Dramatic Situation**: Discussing romantic interests and their aspirations\n- **Name of the Air or Mélodie**: \"Ah! vous dirai-je, Maman\" (a popular tune)\n- **Poetic Text**: Light-hearted lyrics about love and attraction\n- **Rhyme Scheme**: ABAB\n- **Form of the Poetic Text**: Quatrains, no refrain\n- **End Accent for Each Line**: Mainly masculine\n- **Syllable Count**: Consistent 8 syllables per line\n- **Irregularities**: Minor variations in some lines to maintain flow.\n\n### Act 2\n\n#### Scene 1\n- **Character(s)**: Léon and Doublon (another suitor)\n- **Dramatic Situation**: Confrontation between the suitors\n- **Name of the Air or Mélodie**: \"Non, je ne regrette rien\" (popularized by Édith Piaf, but with older associations)\n- **Poetic Text**: Competitive lyrics about their affection for the milliners\n- **Rhyme Scheme**: AABB again\n- **Form of the Poetic Text**: Verses without catchy refrain\n- **End Accent for Each Line**: Mixed accents\n- **Syllable Count**: Varied, typically leaning toward 10\n- **Irregularities**: Some comedic interjections within the flow.\n\n### Act 3\n\n#### Scene 1\n- **Character(s)**: Milliners, Léon, Doublon, ensemble\n- **Dramatic Situation**: The climax, where love choices are revealed\n- **Name of the Air or Mélodie**: \"Carmen's Habanera\" (from Bizet's \"Carmen\")\n- **Poetic Text**: A blend of humor and dramatic revelation about love's complexities\n- **Rhyme Scheme**: ABAB\n- **Form of the Poetic Text**: Free verse sections interspersed with repeated refrains\n- **End Accent for Each Line**: Primarily masculine\n- **Syllable Count**: Mixing lines of 6 to 11 syllables\n- **Irregularities**: Some lines vary rhythmically for dramatic effect.\n\nIn summary, \"Les Modistes\" features various musical moments that draw from popular tunes of the time while embedding new lyrics that reflect the light-hearted and comedic nature of the story. The arrangements and lyrics serve to enhance the characters' personalities and the overall narrative.\n\n\nSources:\n\n\n\n\nCode\nresult = graph.invoke({\"question\": \"What types of airs / melodies are present in dramatic situations of romance?\"})\n\nprint(f'Answer: {result[\"answer\"]}')\nprint(\"\\n\\nSources:\")\nfor i, source in enumerate(result[\"context\"]):\n    print(f'Source {i+1}: {source.metadata[\"source\"]}')\n\n\nAnswer: In the context of the 19th-century French vaudeville and opera, various types of airs or melodies are present in dramatic situations of romance. Below are some examples identified from the provided texts, detailing the specific dramatic situations where romance plays a crucial role. \n\n### Examples of Musical Situations in Romantic Contexts\n\n1. **Title:** Air du Fleuve de la vie  \n   - **Act & Scene:** Not specified in the excerpt (likely a romantic exchange).  \n   - **Characters Singing:** Roland.  \n   - **Dramatic Situation:** Expression of romantic feelings, addressing a love interest.  \n   - **Melodie:** \"Air du Fleuve de la vie.\"  \n   - **Poetic Text:** \n     ```\n     Saisis d'une frayeur nouvelle,  \n     Je tremble, et ne lui parle point;  \n     Qu'elle est belle!... et pourtant sur elle  \n     Tu l'emportes en un seul point.  \n     ```\n   - **Rhyme Scheme:** AABB  \n   - **Form:** Quatrains (4 lines).  \n   - **End Accent:** 1 feminine, 3 masculine.  \n   - **Syllable Count:** 10, 10, 10, 10 (consistent).  \n   - **Irregularities:** None noted.\n\n2. **Title:** Air : Femmes, voulez-vous éprouver.  \n   - **Act & Scene:** Not specified (likely involves romantic advice).  \n   - **Characters Singing:** Madame Delaunay.  \n   - **Dramatic Situation:** Advising a young woman on romance.  \n   - **Melodie:** \"Air : Femmes, voulez-vous éprouver.\"  \n   - **Poetic Text:** \n     ```\n     Quoi, se fâcher pour les amours;  \n     Ah! ton sort est digne d'envie,  \n     On ne se fâche pas toujours,  \n     Quand on avance dans la vie.  \n     ```\n   - **Rhyme Scheme:** AABB  \n   - **Form:** Quatrains (4 lines).  \n   - **End Accent:** 2 masculine, 2 feminine.  \n   - **Syllable Count:** 10, 10, 10, 10 (consistent).  \n   - **Irregularities:** None noted.\n\n3. **Title:** Air de Poncede Léon  \n   - **Act & Scene:** Not specified (revealing feelings of betrayal in romantic context).  \n   - **Characters Singing:** Clara.  \n   - **Dramatic Situation:** Expressing feelings of betrayal and love.  \n   - **Melodie:** \"Air de Poncede Léon.\"  \n   - **Poetic Text:** \n     ```\n     Si j'en avais cru le menteur,  \n     Dans cet instant, sur ma sœur,  \n     Il me donnait l'avantage,  \n     Seule je possédais son cœur.  \n     ```\n   - **Rhyme Scheme:** AABB  \n   - **Form:** Quatrains (4 lines).  \n   - **End Accent:** 2 feminine, 2 masculine.  \n   - **Syllable Count:** 10, 10, 10, 10 (consistent).  \n   - **Irregularities:** None noted.\n\n4. **Title:** Air : De Doche  \n   - **Act & Scene:** Scene XIII (romantic reflection).  \n   - **Characters Singing:** Amélie.  \n   - **Dramatic Situation:** Expressing love through dance and melody.  \n   - **Melodie:** \"De Doche.\"  \n   - **Poetic Text:** \n     ```\n     Quel charme heureux! quelle grâce légère  \n     Semble animer ses yeux déjà si doux!  \n     ```\n   - **Rhyme Scheme:** AAB  \n   - **Form:** Couplets.  \n   - **End Accent:** 1 feminine, 2 masculine.  \n   - **Syllable Count:** 10, 10 (consistent).  \n   - **Irregularities:** None noted.\n\n### Summary\nIn summary, the various airs or melodies distinguished in the romantic contexts often reflect feelings of love, betrayal, or advice regarding romantic relationships. The structures typically follow consistent rhyme schemes with predictable syllable counts, aiding in the emotional delivery of the text. The songs often feature a blend of masculine and feminine endings, contributing to the lyrical quality inherent to French musical theatre and opera of the 19th century.\n\n\nSources:\nSource 1: Duval_Les_artistes_par_occasion_(1807).pdf\nSource 2: Revel_=_Le_Fifre_du_roi_de_Prusse,_ou_les_Prisonniers_de_Spandau_(1818).pdf\nSource 3: Coraly_ou_la_soeur_et_le_Frere.pdf\nSource 4: Revel_=_Le_Fifre_du_roi_de_Prusse,_ou_les_Prisonniers_de_Spandau_(1818).pdf\nSource 5: Ohé_Les_p_tits_agneaux_revue.pdf\nSource 6: L_isle_des_noirs_ou_Les_deux_ingénues.pdf\nSource 7: Les_maris_sans_femmes.pdf\nSource 8: La_Dette_d_honneur.pdf\nSource 9: Revel_=_Le_Fifre_du_roi_de_Prusse,_ou_les_Prisonniers_de_Spandau_(1818).pdf\nSource 10: Les_maris_sans_femmes.pdf\n\n\n\n\n\nHere, we are setting up a self-check for document relevancy. If a document is relevant, it is passed as context. If not, it is left out.\n\n\nCode\n# Imports for establishing the RAG from the cell below\nimport getpass\nimport os\nfrom langchain.chat_models import init_chat_model\nfrom langchain_openai import OpenAIEmbeddings\nfrom langchain_chroma import Chroma\nfrom langchain.schema import Document\nfrom typing_extensions import List, TypedDict, Optional\nfrom langchain_core.prompts import ChatPromptTemplate\nfrom langgraph.graph import START, StateGraph\n\n\n\n\nCode\n# Setting up chat model\nif not os.environ.get(\"OPENAI_API_KEY\"):\n  os.environ[\"OPENAI_API_KEY\"] = getpass.getpass(\"Enter API key for OpenAI: \")\n\n\nllm = init_chat_model(\"gpt-4o\", model_provider=\"openai\")\n\n# Setting up embeddings\nembeddings = OpenAIEmbeddings(model=\"text-embedding-3-large\")\n\n# Reestablishing up our persist directory for Chroma\nvector_store = Chroma(\n    collection_name=\"example_collection\",\n    embedding_function=embeddings,\n    persist_directory=\"./chroma_langchain_db\",  # Where we stored our data before\n)\n\n# Reestablishing retrieval and generation functions\nprompt = ChatPromptTemplate.from_messages([\n    (\"system\", 'You are an expert in French musical theatre and opera of the 19th century.  You will help us explore the texts (librettos) of vaudevilles, which are dramatic productions that include periodic musical numbers, which might be songs, choruses, instrumental dances, and other sonic events. \\n '\n    'Many of these musical moments reuse some preexisting (and often well-known)  melody or tune.  These are variously called \"melodie\", or \"air\", and identified with a short title that refers in some way to an opera or collection of melodies from which it was drawn.  The titles might include the names of works, or other characters in those original works. '\n    '\\n In the context of the plays, these tunes become the vehicle for newly composed lyrics, which are normally rhymed, and which normally follow the poetic scansion and structure of the original lyrics.  Rhyme, versification and structure are thus of interest to us. If there is a mention of \"air\" or \"melodie\", look for the tune that the section is sung to, which will be labeled as \"air\" or \"melodie\" within the text.\\n'\n    'If you cannot find the answers for anything within the context provided, state \"I dont know\" or similar - do not make assumptions beyond what is in the context. Please always mention which play you are referencing in each section of your response, if multiple. The plays are labeled at the top of each source. If you can tell what act / scene and/or page a source is from, cite it too.\\n\\n'),\n    (\"human\", \"Context:\\n{context}\\n\\nQuestion: {question}\")\n])\n\nclass State(TypedDict):\n    question: str\n    filter: Optional[dict]\n    context: List[Document]\n    answer: str\n\ndef apply_filter(state: State):\n    if \"filter\" in state and state[\"filter\"]:\n        state[\"filter\"] = {k: v for k, v in state[\"filter\"].items() if v is not None}\n    else:\n        state[\"filter\"] = None\n    return state\n\ndef retrieve(state: State):\n    filter_dict = state[\"filter\"] if state.get(\"filter\") else None\n    retrieved_docs = vector_store.similarity_search(state[\"question\"], k=15, filter=filter_dict)\n    return {\"context\": retrieved_docs}\n\n\nretriever = vector_store.as_retriever()\n\n### Retrieval Grader\n# Data model\nclass GradeDocuments(BaseModel):\n    \"\"\"Binary score for relevance check on retrieved documents.\"\"\"\n\n    binary_score: str = Field(\n        description=\"Documents are relevant to the question, 'yes' or 'no'\"\n    )\n\n\n# LLM with function call\nllm = ChatOpenAI(model=\"gpt-4o-mini\", temperature=0)\nstructured_llm_grader = llm.with_structured_output(GradeDocuments)\n\n# Prompt\nsystem = \"\"\"You are a grader assessing relevance of a retrieved document to a user question. \\n \n    It does not need to be a stringent test. The goal is to filter out erroneous retrievals. \\n\n    If the document contains keyword(s) or semantic meaning related to the user question, grade it as relevant. \\n\n    Give a binary score 'yes' or 'no' score to indicate whether the document is relevant to the question.\"\"\"\ngrade_prompt = ChatPromptTemplate.from_messages(\n    [\n        (\"system\", system),\n        (\"human\", \"Retrieved document: \\n\\n {document} \\n\\n User question: {question}\"),\n    ]\n)\n\nretrieval_grader = grade_prompt | structured_llm_grader\n\ndef grade_documents(state):\n    \"\"\"\n    Determines whether the retrieved documents are relevant to the question.\n\n    Args:\n        state (dict): The current graph state\n\n    Returns:\n        state (dict): Updates documents key with only filtered relevant documents\n    \"\"\"\n\n    print(\"---CHECK DOCUMENT RELEVANCE TO QUESTION---\")\n    question = state[\"question\"]\n    documents = state[\"context\"]\n\n    # Score each doc\n    filtered_docs = []\n    for i,d in enumerate(documents):\n        score = retrieval_grader.invoke(\n            {\"question\": question, \"document\": d.page_content}\n        )\n        grade = score.binary_score\n        if grade == \"yes\":\n            print(f\"---GRADE {i}: DOCUMENT RELEVANT---\")\n            filtered_docs.append(d)\n        else:\n            print(f\"---GRADE {i}: DOCUMENT NOT RELEVANT---\")\n            continue\n    return {\"documents\": filtered_docs, \"question\": question}\n\ndef decide_to_generate(state):\n    \"\"\"\n    Determines whether to generate an answer, or re-generate a question.\n\n    Args:\n        state (dict): The current graph state\n\n    Returns:\n        str: Binary decision for next node to call\n    \"\"\"\n\n    print(\"---ASSESS GRADED DOCUMENTS---\")\n    state[\"question\"]\n    filtered_documents = state[\"documents\"]\n\n    if not filtered_documents:\n        # All documents have been filtered check_relevance\n        # We will re-generate a new query\n        print(\n            \"---DECISION: ALL DOCUMENTS ARE NOT RELEVANT TO QUESTION, TRANSFORM QUERY---\"\n        )\n        return \"transform_query\"\n    else:\n        # We have relevant documents, so generate answer\n        print(\"---DECISION: GENERATE---\")\n        return \"generate\"\ndef generate(state: State):\n    docs_content = \"\"\n    for doc in state[\"context\"]:\n        docs_content += f\"The following text is a chunk from document titled: {doc.metadata[\"Work\"]}. There are a total of {doc.metadata[\"total_pages\"]} pages in this play. \\n\"\n        docs_content += doc.page_content + \"\\n\\n\"\n    message = prompt.invoke({\"question\": state[\"question\"], \"context\": docs_content})\n    response = llm.invoke(message)\n    return {\"answer\": response.content}\n\n# Reestablishing langgraph\n\nworkflow = StateGraph(State)\n\n# Define the nodes\nworkflow.add_node(\"retrieve\", retrieve)  # retrieve\nworkflow.add_node(\"grade_documents\", grade_documents)  # grade documents\nworkflow.add_node(\"generate\", generate)  # generate\n\n# Build graph\nworkflow.add_edge(START, \"retrieve\")\nworkflow.add_edge(\"retrieve\", \"grade_documents\")\nworkflow.add_conditional_edges(\n    \"grade_documents\",\n    decide_to_generate\n)\nworkflow.add_edge(\"generate\", END)\n\n# Compile\napp = workflow.compile()\n\n\n\n\n\n\n\nCode\nresult = graph.invoke({\"question\": \"What types of airs / melodies are present in dramatic situations of romance?\"})\n\nprint(f'Answer: {result[\"answer\"]}')\nprint(\"\\n\\nSources:\")\nfor i, source in enumerate(result[\"context\"]):\n    print(f'Source {i+1}: {source.metadata[\"source\"]}')\n\n\n---CHECK DOCUMENT RELEVANCE TO QUESTION---\n---GRADE: DOCUMENT NOT RELEVANT---\n---GRADE: DOCUMENT RELEVANT---\n---GRADE: DOCUMENT RELEVANT---\n---GRADE: DOCUMENT NOT RELEVANT---\n---GRADE: DOCUMENT RELEVANT---\n---GRADE: DOCUMENT RELEVANT---\n---GRADE: DOCUMENT NOT RELEVANT---\n---GRADE: DOCUMENT RELEVANT---\n---GRADE: DOCUMENT NOT RELEVANT---\n---GRADE: DOCUMENT NOT RELEVANT---\n---GRADE: DOCUMENT RELEVANT---\n---GRADE: DOCUMENT NOT RELEVANT---\n---GRADE: DOCUMENT NOT RELEVANT---\n---GRADE: DOCUMENT NOT RELEVANT---\n---GRADE: DOCUMENT RELEVANT---\nAnswer: In the provided excerpts from various plays, several types of airs or melodies are associated with dramatic situations of romance. Here are the notable examples:\n\n### 1. **Coraly**\n- **AIR du Fleuve de la vie**: This air is used by Roland to express his feelings about his beloved, indicating a romantic tension as he reflects on his emotions and the beauty of the woman he admires.\n\n### 2. **Le Fifre du roi de Prusse, ou les Prisonniers de Spandau**\n- **AIR : De Doche**: Alfred expresses his longing and despair over Amélie, showcasing the romantic turmoil he experiences due to his feelings for her.\n- **AIR : Vaud. du Printems**: Crescendo sings about the beauty of art and talent, which can be interpreted as a metaphor for romantic aspirations and the pursuit of love.\n\n### 3. **Isle des noirs**\n- **AIR: Voulant par ses œuvres complètes**: This air discusses the effects of love, portraying it as a powerful and sometimes destructive force, which aligns with the romantic themes of the characters' experiences.\n\n### 4. **Les Maris sans femmes**\n- **Air : du Vaud. de Farinella**: D'Héricourt expresses his feelings of love and longing, emphasizing the emotional stakes involved in romantic relationships.\n\n### 5. **La Dette d’honneur**\n- **Air : Femmes, voulez-vous éprouver**: This air reflects on the nature of love and relationships, suggesting that romantic disputes are a common part of life, which adds depth to the romantic narrative.\n\n### 6. **D’Aranda**\n- While not explicitly labeled as an air, the dialogue reflects romantic tension and jealousy, which are common themes in romantic situations.\n\n### 7. **Le Fifre du roi de Prusse, ou les Prisonniers de Spandau (again)**\n- **AIR: Vaud. du Piege**: This air captures the essence of love's transformative power, highlighting the emotional depth and complexity of romantic feelings.\n\nIn summary, the airs and melodies present in these dramatic situations of romance often serve to express longing, emotional conflict, and the transformative power of love, enhancing the romantic narrative within the plays.\n\n\nSources:\nSource 1: Duval_Les_artistes_par_occasion_(1807).pdf\nSource 2: Coraly_ou_la_soeur_et_le_Frere.pdf\nSource 3: Revel_=_Le_Fifre_du_roi_de_Prusse,_ou_les_Prisonniers_de_Spandau_(1818).pdf\nSource 4: Revel_=_Le_Fifre_du_roi_de_Prusse,_ou_les_Prisonniers_de_Spandau_(1818).pdf\nSource 5: L_isle_des_noirs_ou_Les_deux_ingénues.pdf\nSource 6: Ohé_Les_p_tits_agneaux_revue.pdf\nSource 7: Les_maris_sans_femmes.pdf\nSource 8: La_Dette_d_honneur.pdf\nSource 9: Revel_=_Le_Fifre_du_roi_de_Prusse,_ou_les_Prisonniers_de_Spandau_(1818).pdf\nSource 10: Les_maris_sans_femmes.pdf\nSource 11: Coraly_ou_la_soeur_et_le_Frere.pdf\nSource 12: D_Aranda_ou_les_grandes_passions_comédi_p_19.pdf\nSource 13: Revel_=_Le_Fifre_du_roi_de_Prusse,_ou_les_Prisonniers_de_Spandau_(1818).pdf\nSource 14: La_grisette_et_l_héritière.pdf\nSource 15: Revel_=_Le_Fifre_du_roi_de_Prusse,_ou_les_Prisonniers_de_Spandau_(1818).pdf\n\n\n\n\n\nOverall, the RAG system had solid performance. For the most part, it was able to extract the desired information from thousands of pages in a matter of seconds.\nThe self check is effective, and allows the possibility of adding more documents to each query (since irrelevant documents don’t make the prompt), or adding the ability to rephrase the question if it doesn’t reach a certain threshold of relevant documents."
  },
  {
    "objectID": "Vaudeville/Vaudeville_RAG.html#goals",
    "href": "Vaudeville/Vaudeville_RAG.html#goals",
    "title": "Vaudeville RAG",
    "section": "",
    "text": "In this notebook, we attempt to build a Retrieval Augmented Generation (RAG) application for 35 19th century Vaudeville plays.\nThis app allows us to chat with the data, and ask “needle in the haystack” questions."
  },
  {
    "objectID": "Vaudeville/Vaudeville_RAG.html#imports-and-apis",
    "href": "Vaudeville/Vaudeville_RAG.html#imports-and-apis",
    "title": "Vaudeville RAG",
    "section": "",
    "text": "Code\n# Imports\nimport getpass\nimport os\nfrom langchain.chat_models import init_chat_model\nfrom langchain_openai import OpenAIEmbeddings\nfrom langchain_chroma import Chroma\nfrom langchain_community.document_loaders.csv_loader import CSVLoader\nfrom pathlib import Path\nfrom langchain.document_loaders import PDFPlumberLoader\nfrom langchain.schema import Document\nfrom langchain_text_splitters import RecursiveCharacterTextSplitter\nfrom typing_extensions import List, TypedDict, Optional\nfrom langchain_core.prompts import ChatPromptTemplate\nfrom langgraph.graph import START, StateGraph\n\n\n\n\nCode\n# Setting up chat model\nif not os.environ.get(\"OPENAI_API_KEY\"):\n  os.environ[\"OPENAI_API_KEY\"] = getpass.getpass(\"Enter API key for OpenAI: \")\n\n\nllm = init_chat_model(\"gpt-4o-mini\", model_provider=\"openai\")\n# Setting up embeddings\n\nembeddings = OpenAIEmbeddings(model=\"text-embedding-3-large\")\n# Setting up chroma\n\nvector_store = Chroma(\n    collection_name=\"example_collection\",\n    embedding_function=embeddings,\n    persist_directory=\"./chroma_langchain_db\",  # Where to save data locally, remove if not necessary\n)"
  },
  {
    "objectID": "Vaudeville/Vaudeville_RAG.html#indexing",
    "href": "Vaudeville/Vaudeville_RAG.html#indexing",
    "title": "Vaudeville RAG",
    "section": "",
    "text": "Indexing Steps:\n\nLoad CSV and PDF\nWork with metadata:\n\nKeep relevant PDF metadata; remove irrelevant or empty fields\nAdd CSV metadata\n\nSpilt into chunks\nRun embeddings model (in three batches, because of the character limit per call), and create a vector database\n\n\n\n\n\nCode\n# Setting up csv loading\n\ndef loadCSV(filepath: str) -&gt; list:\n    loader = CSVLoader(file_path=filepath, source_column=\"FileName\",metadata_columns=[\"Year\",\"Work\",\"Theatre\"])\n    data = loader.load()\n    return data\n\n\n\n\nCode\nprint(os.getcwd())\n\n\nc:\\Users\\charl\\Documents\\VSCode\\Encoding Music\\Vaudeville\n\n\n\n\nCode\n# Load CSV\n\ncsv_metadata = loadCSV(\"Files/Vaudeville_Metadata.csv\")\nprint(csv_metadata[0].metadata['source'])\nprint(csv_metadata[1].metadata['Theatre'])\n\n\nAs_tu_vu_la_comete_mon_gas_text.pdf\nThéâtre du Vaudeville\n\n\n\n\nCode\n# Setting up pdf loading\n\nasync def loadPDF(filepath: str) -&gt; list:\n    loader = PDFPlumberLoader(filepath)\n    pages = []\n    async for page in loader.alazy_load():\n        pages.append(page)   \n    return pages\n\n\n\n\nCode\ndef get_files_from_directory(directory_path: str) -&gt; list[str]:\n    directory = Path(directory_path)\n    file_paths = [str(file) for file in directory.iterdir() if file.is_file()]\n    return file_paths\n\ndirectory_path:str = \"Files/PDFs\"\nfiles: list[str] = get_files_from_directory(directory_path)\n\n\n\n\nCode\n# Load PDFs w/out metadata\nloaded_PDFs: list = []\nfor file in files:\n    pages = await loadPDF(file)\n    loaded_PDFs.append(pages)\n\n\nIt’s good to check the loaded content for each PDF. Here, it is commented out to prevent the sources from taking up a lot of space.\n\n\nCode\n# Check PDF content\n# for i in range(len(loaded_PDFs)):\n#     document = loaded_PDFs[i]\n#     print(f\"## Document {i}: {document[0].metadata[\"source\"][54:]} \\n\")\n#     document_content: str = \"\"\n#     for document_page in document:\n#         document_content += document_page.page_content[0:500]\n#     print(document_content + \"\\n \\n\")\n\n\nThe first PDF has not been OCR’ed, so it showed up as empty. The rest worked.\n\n\nCode\n# Check PDF metadata\nfor i in range(3):\n    document = loaded_PDFs[i]\n    print(f\"Document {i} \\n\")\n    document_metadata: list = []\n    for document_page in document:\n        document_metadata += document_page.metadata.items()\n    print(document_metadata)\n\n\nDocument 0 \n\n[('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 0), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 1), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 2), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 3), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 4), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 5), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 6), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 7), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 8), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 9), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 10), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 11), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 12), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 13), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 14), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 15), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 16), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 17), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 18), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 19), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 20), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 21), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 22), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 23), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 24), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 25), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 26), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 27), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 28), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 29), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 30), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 31), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 32), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 33), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 34), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 35), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 36), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 37), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 38), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 39), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 40), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 41), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 42), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 43), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 44), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 45), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 46), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 47), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 48), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 49), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 50), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 51), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 52), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 53), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 54), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 55), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 56), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 57), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 58), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 59), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 60), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 61), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 62), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 63), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 64), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 65), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 66), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 67), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 68), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 69), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 70), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 71), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 72), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 73), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 74), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 75), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 76), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 77), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 78), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 79), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 80), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 81), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 82), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 83), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 84), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 85), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 86), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 87), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 88), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 89), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 90), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 91), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 92), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 93), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 94), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 95), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 96), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 97), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 98), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 99), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 100), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 101), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 102), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\"), ('source', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('file_path', 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf'), ('page', 103), ('total_pages', 104), ('CreationDate', \"D:20130826123210+02'00'\"), ('Creator', 'Bibliothèque nationale de France'), ('ModDate', \"D:20250624190557-04'00'\"), ('Producer', 'iText 1.4.8 (by lowagie.com)'), ('Title', \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\")]\nDocument 1 \n\n[('source', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('file_path', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('page', 0), ('total_pages', 47), ('ModDate', \"D:20250624190336-04'00'\"), ('source', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('file_path', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('page', 1), ('total_pages', 47), ('ModDate', \"D:20250624190336-04'00'\"), ('source', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('file_path', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('page', 2), ('total_pages', 47), ('ModDate', \"D:20250624190336-04'00'\"), ('source', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('file_path', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('page', 3), ('total_pages', 47), ('ModDate', \"D:20250624190336-04'00'\"), ('source', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('file_path', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('page', 4), ('total_pages', 47), ('ModDate', \"D:20250624190336-04'00'\"), ('source', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('file_path', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('page', 5), ('total_pages', 47), ('ModDate', \"D:20250624190336-04'00'\"), ('source', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('file_path', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('page', 6), ('total_pages', 47), ('ModDate', \"D:20250624190336-04'00'\"), ('source', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('file_path', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('page', 7), ('total_pages', 47), ('ModDate', \"D:20250624190336-04'00'\"), ('source', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('file_path', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('page', 8), ('total_pages', 47), ('ModDate', \"D:20250624190336-04'00'\"), ('source', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('file_path', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('page', 9), ('total_pages', 47), ('ModDate', \"D:20250624190336-04'00'\"), ('source', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('file_path', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('page', 10), ('total_pages', 47), ('ModDate', \"D:20250624190336-04'00'\"), ('source', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('file_path', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('page', 11), ('total_pages', 47), ('ModDate', \"D:20250624190336-04'00'\"), ('source', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('file_path', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('page', 12), ('total_pages', 47), ('ModDate', \"D:20250624190336-04'00'\"), ('source', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('file_path', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('page', 13), ('total_pages', 47), ('ModDate', \"D:20250624190336-04'00'\"), ('source', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('file_path', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('page', 14), ('total_pages', 47), ('ModDate', \"D:20250624190336-04'00'\"), ('source', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('file_path', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('page', 15), ('total_pages', 47), ('ModDate', \"D:20250624190336-04'00'\"), ('source', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('file_path', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('page', 16), ('total_pages', 47), ('ModDate', \"D:20250624190336-04'00'\"), ('source', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('file_path', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('page', 17), ('total_pages', 47), ('ModDate', \"D:20250624190336-04'00'\"), ('source', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('file_path', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('page', 18), ('total_pages', 47), ('ModDate', \"D:20250624190336-04'00'\"), ('source', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('file_path', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('page', 19), ('total_pages', 47), ('ModDate', \"D:20250624190336-04'00'\"), ('source', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('file_path', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('page', 20), ('total_pages', 47), ('ModDate', \"D:20250624190336-04'00'\"), ('source', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('file_path', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('page', 21), ('total_pages', 47), ('ModDate', \"D:20250624190336-04'00'\"), ('source', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('file_path', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('page', 22), ('total_pages', 47), ('ModDate', \"D:20250624190336-04'00'\"), ('source', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('file_path', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('page', 23), ('total_pages', 47), ('ModDate', \"D:20250624190336-04'00'\"), ('source', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('file_path', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('page', 24), ('total_pages', 47), ('ModDate', \"D:20250624190336-04'00'\"), ('source', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('file_path', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('page', 25), ('total_pages', 47), ('ModDate', \"D:20250624190336-04'00'\"), ('source', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('file_path', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('page', 26), ('total_pages', 47), ('ModDate', \"D:20250624190336-04'00'\"), ('source', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('file_path', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('page', 27), ('total_pages', 47), ('ModDate', \"D:20250624190336-04'00'\"), ('source', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('file_path', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('page', 28), ('total_pages', 47), ('ModDate', \"D:20250624190336-04'00'\"), ('source', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('file_path', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('page', 29), ('total_pages', 47), ('ModDate', \"D:20250624190336-04'00'\"), ('source', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('file_path', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('page', 30), ('total_pages', 47), ('ModDate', \"D:20250624190336-04'00'\"), ('source', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('file_path', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('page', 31), ('total_pages', 47), ('ModDate', \"D:20250624190336-04'00'\"), ('source', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('file_path', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('page', 32), ('total_pages', 47), ('ModDate', \"D:20250624190336-04'00'\"), ('source', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('file_path', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('page', 33), ('total_pages', 47), ('ModDate', \"D:20250624190336-04'00'\"), ('source', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('file_path', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('page', 34), ('total_pages', 47), ('ModDate', \"D:20250624190336-04'00'\"), ('source', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('file_path', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('page', 35), ('total_pages', 47), ('ModDate', \"D:20250624190336-04'00'\"), ('source', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('file_path', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('page', 36), ('total_pages', 47), ('ModDate', \"D:20250624190336-04'00'\"), ('source', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('file_path', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('page', 37), ('total_pages', 47), ('ModDate', \"D:20250624190336-04'00'\"), ('source', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('file_path', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('page', 38), ('total_pages', 47), ('ModDate', \"D:20250624190336-04'00'\"), ('source', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('file_path', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('page', 39), ('total_pages', 47), ('ModDate', \"D:20250624190336-04'00'\"), ('source', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('file_path', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('page', 40), ('total_pages', 47), ('ModDate', \"D:20250624190336-04'00'\"), ('source', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('file_path', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('page', 41), ('total_pages', 47), ('ModDate', \"D:20250624190336-04'00'\"), ('source', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('file_path', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('page', 42), ('total_pages', 47), ('ModDate', \"D:20250624190336-04'00'\"), ('source', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('file_path', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('page', 43), ('total_pages', 47), ('ModDate', \"D:20250624190336-04'00'\"), ('source', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('file_path', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('page', 44), ('total_pages', 47), ('ModDate', \"D:20250624190336-04'00'\"), ('source', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('file_path', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('page', 45), ('total_pages', 47), ('ModDate', \"D:20250624190336-04'00'\"), ('source', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('file_path', 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf'), ('page', 46), ('total_pages', 47), ('ModDate', \"D:20250624190336-04'00'\")]\nDocument 2 \n\n[('source', 'Files\\\\PDFs\\\\Clairville_Garet_Le_Palais_de_Chrysocale_(1855).pdf'), ('file_path', 'Files\\\\PDFs\\\\Clairville_Garet_Le_Palais_de_Chrysocale_(1855).pdf'), ('page', 0), ('total_pages', 14), ('Author', 'Clairville (M.)'), ('ModDate', \"D:20250624190059-04'00'\"), ('Producer', 'Google Books PDF Converter (rel 3 12/12/14)'), ('Title', 'Le palais de chrysocale ou les exposants et les exposés'), ('source', 'Files\\\\PDFs\\\\Clairville_Garet_Le_Palais_de_Chrysocale_(1855).pdf'), ('file_path', 'Files\\\\PDFs\\\\Clairville_Garet_Le_Palais_de_Chrysocale_(1855).pdf'), ('page', 1), ('total_pages', 14), ('Author', 'Clairville (M.)'), ('ModDate', \"D:20250624190059-04'00'\"), ('Producer', 'Google Books PDF Converter (rel 3 12/12/14)'), ('Title', 'Le palais de chrysocale ou les exposants et les exposés'), ('source', 'Files\\\\PDFs\\\\Clairville_Garet_Le_Palais_de_Chrysocale_(1855).pdf'), ('file_path', 'Files\\\\PDFs\\\\Clairville_Garet_Le_Palais_de_Chrysocale_(1855).pdf'), ('page', 2), ('total_pages', 14), ('Author', 'Clairville (M.)'), ('ModDate', \"D:20250624190059-04'00'\"), ('Producer', 'Google Books PDF Converter (rel 3 12/12/14)'), ('Title', 'Le palais de chrysocale ou les exposants et les exposés'), ('source', 'Files\\\\PDFs\\\\Clairville_Garet_Le_Palais_de_Chrysocale_(1855).pdf'), ('file_path', 'Files\\\\PDFs\\\\Clairville_Garet_Le_Palais_de_Chrysocale_(1855).pdf'), ('page', 3), ('total_pages', 14), ('Author', 'Clairville (M.)'), ('ModDate', \"D:20250624190059-04'00'\"), ('Producer', 'Google Books PDF Converter (rel 3 12/12/14)'), ('Title', 'Le palais de chrysocale ou les exposants et les exposés'), ('source', 'Files\\\\PDFs\\\\Clairville_Garet_Le_Palais_de_Chrysocale_(1855).pdf'), ('file_path', 'Files\\\\PDFs\\\\Clairville_Garet_Le_Palais_de_Chrysocale_(1855).pdf'), ('page', 4), ('total_pages', 14), ('Author', 'Clairville (M.)'), ('ModDate', \"D:20250624190059-04'00'\"), ('Producer', 'Google Books PDF Converter (rel 3 12/12/14)'), ('Title', 'Le palais de chrysocale ou les exposants et les exposés'), ('source', 'Files\\\\PDFs\\\\Clairville_Garet_Le_Palais_de_Chrysocale_(1855).pdf'), ('file_path', 'Files\\\\PDFs\\\\Clairville_Garet_Le_Palais_de_Chrysocale_(1855).pdf'), ('page', 5), ('total_pages', 14), ('Author', 'Clairville (M.)'), ('ModDate', \"D:20250624190059-04'00'\"), ('Producer', 'Google Books PDF Converter (rel 3 12/12/14)'), ('Title', 'Le palais de chrysocale ou les exposants et les exposés'), ('source', 'Files\\\\PDFs\\\\Clairville_Garet_Le_Palais_de_Chrysocale_(1855).pdf'), ('file_path', 'Files\\\\PDFs\\\\Clairville_Garet_Le_Palais_de_Chrysocale_(1855).pdf'), ('page', 6), ('total_pages', 14), ('Author', 'Clairville (M.)'), ('ModDate', \"D:20250624190059-04'00'\"), ('Producer', 'Google Books PDF Converter (rel 3 12/12/14)'), ('Title', 'Le palais de chrysocale ou les exposants et les exposés'), ('source', 'Files\\\\PDFs\\\\Clairville_Garet_Le_Palais_de_Chrysocale_(1855).pdf'), ('file_path', 'Files\\\\PDFs\\\\Clairville_Garet_Le_Palais_de_Chrysocale_(1855).pdf'), ('page', 7), ('total_pages', 14), ('Author', 'Clairville (M.)'), ('ModDate', \"D:20250624190059-04'00'\"), ('Producer', 'Google Books PDF Converter (rel 3 12/12/14)'), ('Title', 'Le palais de chrysocale ou les exposants et les exposés'), ('source', 'Files\\\\PDFs\\\\Clairville_Garet_Le_Palais_de_Chrysocale_(1855).pdf'), ('file_path', 'Files\\\\PDFs\\\\Clairville_Garet_Le_Palais_de_Chrysocale_(1855).pdf'), ('page', 8), ('total_pages', 14), ('Author', 'Clairville (M.)'), ('ModDate', \"D:20250624190059-04'00'\"), ('Producer', 'Google Books PDF Converter (rel 3 12/12/14)'), ('Title', 'Le palais de chrysocale ou les exposants et les exposés'), ('source', 'Files\\\\PDFs\\\\Clairville_Garet_Le_Palais_de_Chrysocale_(1855).pdf'), ('file_path', 'Files\\\\PDFs\\\\Clairville_Garet_Le_Palais_de_Chrysocale_(1855).pdf'), ('page', 9), ('total_pages', 14), ('Author', 'Clairville (M.)'), ('ModDate', \"D:20250624190059-04'00'\"), ('Producer', 'Google Books PDF Converter (rel 3 12/12/14)'), ('Title', 'Le palais de chrysocale ou les exposants et les exposés'), ('source', 'Files\\\\PDFs\\\\Clairville_Garet_Le_Palais_de_Chrysocale_(1855).pdf'), ('file_path', 'Files\\\\PDFs\\\\Clairville_Garet_Le_Palais_de_Chrysocale_(1855).pdf'), ('page', 10), ('total_pages', 14), ('Author', 'Clairville (M.)'), ('ModDate', \"D:20250624190059-04'00'\"), ('Producer', 'Google Books PDF Converter (rel 3 12/12/14)'), ('Title', 'Le palais de chrysocale ou les exposants et les exposés'), ('source', 'Files\\\\PDFs\\\\Clairville_Garet_Le_Palais_de_Chrysocale_(1855).pdf'), ('file_path', 'Files\\\\PDFs\\\\Clairville_Garet_Le_Palais_de_Chrysocale_(1855).pdf'), ('page', 11), ('total_pages', 14), ('Author', 'Clairville (M.)'), ('ModDate', \"D:20250624190059-04'00'\"), ('Producer', 'Google Books PDF Converter (rel 3 12/12/14)'), ('Title', 'Le palais de chrysocale ou les exposants et les exposés'), ('source', 'Files\\\\PDFs\\\\Clairville_Garet_Le_Palais_de_Chrysocale_(1855).pdf'), ('file_path', 'Files\\\\PDFs\\\\Clairville_Garet_Le_Palais_de_Chrysocale_(1855).pdf'), ('page', 12), ('total_pages', 14), ('Author', 'Clairville (M.)'), ('ModDate', \"D:20250624190059-04'00'\"), ('Producer', 'Google Books PDF Converter (rel 3 12/12/14)'), ('Title', 'Le palais de chrysocale ou les exposants et les exposés'), ('source', 'Files\\\\PDFs\\\\Clairville_Garet_Le_Palais_de_Chrysocale_(1855).pdf'), ('file_path', 'Files\\\\PDFs\\\\Clairville_Garet_Le_Palais_de_Chrysocale_(1855).pdf'), ('page', 13), ('total_pages', 14), ('Author', 'Clairville (M.)'), ('ModDate', \"D:20250624190059-04'00'\"), ('Producer', 'Google Books PDF Converter (rel 3 12/12/14)'), ('Title', 'Le palais de chrysocale ou les exposants et les exposés')]\n\n\nSo, some of this info is useful and some isn’t.\nWe should keep: * Source (but clean it so it’s just the filename) * Filepath * Page * Total pages * Creator * Title\nWe should remove: * CreationDate (the date it was turned to pdf is not relevant) * ModDate * Producer\nWe also want to add the CSV metadata in as extra rows in the metadata dictionary\n\n\nCode\n# Cleaning the sources to match with the CSV source names\nfor i,source in enumerate(loaded_PDFs):\n    for page in source:\n        page.metadata['source'] = page.metadata['source'].replace(\"Files\\\\PDFs\\\\\", \"\")\n    if i &lt; 6:\n        print(source[0].metadata['source'])\n\n\nAs_tu_vu_la_comete_mon_gas_text.pdf\nBrutus_ou_le_dernier_soldat.pdf\nClairville_Garet_Le_Palais_de_Chrysocale_(1855).pdf\nClairville_Thiboust_Le_quart_du_monde_(1855).pdf\nCoraly_ou_la_soeur_et_le_Frere.pdf\nDupin_Dumanoir_La_toque_bleue_(1834).pdf\n\n\n\n\nCode\n# Sorting both the CSV and PDF metadata to match\ncsv_metadata.sort(key=lambda x: x.metadata['source'])\nloaded_PDFs.sort(key=lambda x: x[0].metadata['source'])\n\n\n\n\nCode\n# Use assert to ensure the sources match\nfor i in range(32,len(csv_metadata)):\n    assert csv_metadata[i].metadata['source'] == loaded_PDFs[i][0].metadata['source'], f\"Mismatch at index {i}: {csv_metadata[i].metadata['source']} != {loaded_PDFs[i][0].metadata['source']}\"\n\n\nI had to change the lower index because there were various slight mismatches, but we’ve checked that all files are actually the same so we’re moving on.\n\n\nWe should remove: * CreationDate (the date it was turned to pdf is not relevant) * ModDate * Producer\n\n\nCode\nprint(len(csv_metadata))\nprint(len(loaded_PDFs))\n\n\n35\n35\n\n\n\n\nCode\nirrelevant_metadata = ['CreationDate', 'ModDate', 'Producer']\n\nfor i in range(len(loaded_PDFs)):\n    document = loaded_PDFs[i]\n    for page in document:\n        for key in irrelevant_metadata:\n            if key in page.metadata:\n                del page.metadata[key]\n        # Add the category and year from the CSV metadata\n        # assert page.metadata['source'] == csv_metadata[i].metadata['source'], \"Source mismatch between PDF and CSV metadata\"\n        for row in csv_metadata[i].metadata.items():\n            page.metadata.update({row[0]: row[1]})\n\nfor i in range(5):\n    document = loaded_PDFs[i]\n    print(document[0].metadata)\n\n\n{'source': 'As_tu_vu_la_comete_mon_gas_text.pdf', 'file_path': 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf', 'page': 0, 'total_pages': 104, 'Creator': 'Bibliothèque nationale de France', 'Title': \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\", 'row': 0, 'Year': '1858', 'Work': 'As-tu vu la comète, mon gas?', 'Theatre': 'Théâtre des Variétés'}\n{'source': 'Brutus_ou_le_dernier_soldat.pdf', 'file_path': 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf', 'page': 0, 'total_pages': 47, 'row': 1, 'Year': '1843', 'Work': 'Brutus ou le dernier soldat du guet', 'Theatre': 'Théâtre du Vaudeville'}\n{'source': 'Clairville_Garet_Le_Palais_de_Chrysocale_(1855).pdf', 'file_path': 'Files\\\\PDFs\\\\Clairville_Garet_Le_Palais_de_Chrysocale_(1855).pdf', 'page': 0, 'total_pages': 14, 'Author': 'Clairville (M.)', 'Title': 'Le palais de chrysocale ou les exposants et les exposés', 'row': 2, 'Year': '1855', 'Work': 'Le Palais de Chrysocale', 'Theatre': 'Théâtre des Variétés'}\n{'source': 'Clairville_Thiboust_Le_quart_du_monde_(1855).pdf', 'file_path': 'Files\\\\PDFs\\\\Clairville_Thiboust_Le_quart_du_monde_(1855).pdf', 'page': 0, 'total_pages': 10, 'Author': 'Lambert-Thiboust (1826-1867)', 'Creator': 'Bibliothèque nationale de France', 'Title': 'Le Quart de monde, ou le Danger d\\'une particulière pleine de malice pour un individu vraiment impressionnable (parodie du \"Demi-monde\"), étude réaliste mêlée de couplets et d\\'effets de style, par MM. Clairville et Lambert ...', 'row': 3, 'Year': '1855', 'Work': 'Le Quart de Monde', 'Theatre': 'Théâtre des Variétés'}\n{'source': 'Coraly_ou_la_soeur_et_le_Frere.pdf', 'file_path': 'Files\\\\PDFs\\\\Coraly_ou_la_soeur_et_le_Frere.pdf', 'page': 0, 'total_pages': 47, 'Author': 'Eugène Scribe', 'Title': 'Coraly, ou la soeur et le Frere, comedie-vaudeville en 1 acte', 'row': 4, 'Year': '1824', 'Work': 'Coraly', 'Theatre': 'Théâtre du Gymnase-Dramatique'}\n\n\n\n\nCode\n# Convert each sublist into a single document\ndef convert_list_to_document(pages: list) -&gt; Document:\n    document_content: str = \"\"\n    for page in pages:\n        document_content += page.page_content\n    document: Document = Document(\n        page_content=document_content,\n        metadata=pages[0].metadata  # Use the metadata from the first page\n    )\n    return document\n\n# Convert loaded PDFs to documents\ndocs = []\nfor source in loaded_PDFs:\n    doc = convert_list_to_document(source)\n    docs.append(doc)  # Append the single Document object\n\n\n\n\nCode\nprint(docs[2].page_content[1000:1500])\n\n\nN, Espagnole........ BODIN.\nLISBETH, Allemande.. MARIE.\n..\nMARGOT, femmede Canichon, paysanne. MmeLEQUIEN.\n..\nNATA, Chinoise... MilesRAUCOURT.\n...\nNELLY, Hollandaise.... MADELEINE.\n....\nUNE LOUEUSE DE CHAISES.. CLÉMENCE.\n...\nUNE MARCHANDE DE PLAISIRS.. GILLES.\nUNE MARCHANDE DE BOUQUETS....... Mine MARQUILLY.\n..\nFoulede Curieux, Commissionnaires..\nTouteslesindications sontprisesdela gauche etdeladroiteduspectateur.Les personnages sontinscrits\nentêtedesscènesdansl'ordrequ'ils occupentauthéâtre;les\n\n\n\n\nCode\ndocs.pop(0)  # Remove the first document because it rendered as empty\ndocs.pop(0)  # Remove the second document because it rendered as empty\n\n\nDocument(metadata={'source': 'Brutus_ou_le_dernier_soldat.pdf', 'file_path': 'C:\\\\Users\\\\charl\\\\Documents\\\\VSCode\\\\Vaudeville\\\\Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf', 'page': 0, 'total_pages': 47, 'row': 1, 'Year': '1843', 'Work': 'Brutus ou le dernier soldat du guet', 'Theatre': 'Théâtre du Vaudeville'}, page_content='\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n')\n\n\n\n\nCode\n# Double check metadata\nfor i in range(0,5):\n    print(f\"Document {i} Metadata: {docs[i].metadata}\")\n\n\nDocument 0 Metadata: {'source': 'As_tu_vu_la_comete_mon_gas_text.pdf', 'file_path': 'Files\\\\PDFs\\\\As_tu_vu_la_comete_mon_gas_text.pdf', 'page': 0, 'total_pages': 104, 'Creator': 'Bibliothèque nationale de France', 'Title': \"Cogniard, Théodore (1806-1872),Clairville (1811-1879). As-tu vu la comète, mon gas ? revue de l'année 1858, en 3 actes et 4 tableaux, par MM. Théodore Cogniard et Clairville... (Paris, Variétés, 30 décembre 1858.). 1859.\", 'row': 0, 'Year': '1858', 'Work': 'As-tu vu la comète, mon gas?', 'Theatre': 'Théâtre des Variétés'}\nDocument 1 Metadata: {'source': 'Brutus_ou_le_dernier_soldat.pdf', 'file_path': 'Files\\\\PDFs\\\\Brutus_ou_le_dernier_soldat.pdf', 'page': 0, 'total_pages': 47, 'row': 1, 'Year': '1843', 'Work': 'Brutus ou le dernier soldat du guet', 'Theatre': 'Théâtre du Vaudeville'}\nDocument 2 Metadata: {'source': 'Clairville_Garet_Le_Palais_de_Chrysocale_(1855).pdf', 'file_path': 'Files\\\\PDFs\\\\Clairville_Garet_Le_Palais_de_Chrysocale_(1855).pdf', 'page': 0, 'total_pages': 14, 'Author': 'Clairville (M.)', 'Title': 'Le palais de chrysocale ou les exposants et les exposés', 'row': 2, 'Year': '1855', 'Work': 'Le Palais de Chrysocale', 'Theatre': 'Théâtre des Variétés'}\nDocument 3 Metadata: {'source': 'Clairville_Thiboust_Le_quart_du_monde_(1855).pdf', 'file_path': 'Files\\\\PDFs\\\\Clairville_Thiboust_Le_quart_du_monde_(1855).pdf', 'page': 0, 'total_pages': 10, 'Author': 'Lambert-Thiboust (1826-1867)', 'Creator': 'Bibliothèque nationale de France', 'Title': 'Le Quart de monde, ou le Danger d\\'une particulière pleine de malice pour un individu vraiment impressionnable (parodie du \"Demi-monde\"), étude réaliste mêlée de couplets et d\\'effets de style, par MM. Clairville et Lambert ...', 'row': 3, 'Year': '1855', 'Work': 'Le Quart de Monde', 'Theatre': 'Théâtre des Variétés'}\nDocument 4 Metadata: {'source': 'Coraly_ou_la_soeur_et_le_Frere.pdf', 'file_path': 'Files\\\\PDFs\\\\Coraly_ou_la_soeur_et_le_Frere.pdf', 'page': 0, 'total_pages': 47, 'Author': 'Eugène Scribe', 'Title': 'Coraly, ou la soeur et le Frere, comedie-vaudeville en 1 acte', 'row': 4, 'Year': '1824', 'Work': 'Coraly', 'Theatre': 'Théâtre du Gymnase-Dramatique'}\n\n\n\n\n\n\n\n\nCode\ntext_splitter = RecursiveCharacterTextSplitter(\n    chunk_size=2000,  # chunk size (characters)\n    chunk_overlap=400,  # chunk overlap (characters)\n    add_start_index=True,  # track index in original document\n)\nall_splits = text_splitter.split_documents(docs)\n\nprint(f\"Split {len(docs)} PDFs into {len(all_splits)} sub-documents.\")\n\n\nSplit 35 PDFs into 1415 sub-documents.\n\n\n\n\n\n\n\nCode\nprint(len(all_splits))\n\n\n1415\n\n\n\n\nCode\n# If we run this again when reestablishing variables, it will duplicate documents and charge us\n\n# Splitting into three chunks to avoid overloading the vector store\n# vector_store.add_documents(documents=all_splits[:350])\n# vector_store.add_documents(documents=all_splits[350:700])\n# vector_store.add_documents(documents=all_splits[700:1050])\n# vector_store.add_documents(documents=all_splits[1050:])"
  },
  {
    "objectID": "Vaudeville/Vaudeville_RAG.html#setting-up-retrieval-and-generation-w-filters",
    "href": "Vaudeville/Vaudeville_RAG.html#setting-up-retrieval-and-generation-w-filters",
    "title": "Vaudeville RAG",
    "section": "",
    "text": "Here we set up our prompt and LangGraph. LangGraph allows us to set up nodes (steps) for our program to follow. The State class transfers information between each node.\nThis is the setup for the basic RAG. Later we set up a self-check.\n\n\nCode\n# Setting up chat model\n\nif not os.environ.get(\"OPENAI_API_KEY\"):\n  os.environ[\"OPENAI_API_KEY\"] = getpass.getpass(\"Enter API key for OpenAI: \")\n\nllm = init_chat_model(\"gpt-4o\", model_provider=\"openai\")\n\n# Setting up embeddings\n\nif not os.environ.get(\"OPENAI_API_KEY\"):\n  os.environ[\"OPENAI_API_KEY\"] = getpass.getpass(\"Enter API key for OpenAI: \")\n\n\nembeddings = OpenAIEmbeddings(model=\"text-embedding-3-large\")\n\n# Reestablishing up our persist directory for Chroma\n\nvector_store = Chroma(\n    collection_name=\"example_collection\",\n    embedding_function=embeddings,\n    persist_directory=\"./chroma_langchain_db\",  # Where we stored our data before\n)\n\n# Reestablishing retrieval and generation functions\n\n\nprompt = ChatPromptTemplate.from_messages([\n    (\"system\", 'You are an expert in French musical theatre and opera of the 19th century.  You will help us explore the texts (librettos) of vaudevilles, which are dramatic productions that include periodic musical numbers, which might be songs, choruses, instrumental dances, and other sonic events. \\n '\n    'Many of these musical moments reuse some preexisting (and often well-known)  melody or tune.  These are variously called “melodie”, or “air”, and identified with a short title that refers in some way to an opera or collection of melodies from which it was drawn.  The titles might include the names of works, or other characters in those original works. '\n    '\\n In the context of the plays, these tunes become the vehicle for newly composed lyrics, which are normally rhymed, and which normally follow the poetic scansion and structure of the original lyrics.  Rhyme, versification and structure are thus of interest to us. \\n Keep the following attributes in mind as you answer questions based on the texts provided:'\n    '-the act and scene in which the event takes place'\n    '-the character or characters who are singing (or otherwise making music),'\n    '-the dramatic situation (a love scene, a crowd scene)'\n    '-the name of the air or melodie'\n    '-the poetic text'\n    '-the rhyme scheme'\n    '-form of the poetic text, which might involve some refrain'\n    '-the end accent for each line (masculine or féminine)'\n    '-syllable count for each line'\n    '-any irregularities you notice'\n    'If you cannot find the answers for anything within the context provided, state \"I dont know\" or similar - do not make assumptions beyond what is actually in the context.\\n\\n'),\n    (\"human\", \"Context:\\n{context}\\n\\nQuestion: {question}\")\n])\n\nclass State(TypedDict):\n    question: str\n    filter: Optional[dict]\n    context: List[Document]\n    answer: str\n\ndef apply_filter(state: State):\n    if \"filter\" in state and state[\"filter\"]:\n        state[\"filter\"] = {k: v for k, v in state[\"filter\"].items() if v is not None}\n    else:\n        state[\"filter\"] = None\n    return state\n\ndef retrieve(state: State):\n    filter_dict = state[\"filter\"] if state.get(\"filter\") else None\n    retrieved_docs = vector_store.similarity_search(state[\"question\"], k=15, filter=filter_dict)\n    return {\"context\": retrieved_docs}\n\ndef generate(state: State):\n    docs_content = \"\"\n    for doc in state[\"context\"]:\n        docs_content += f\"The following text is a chunk from document titled: {doc.metadata[\"Work\"]}. There are a total of {doc.metadata[\"total_pages\"]} pages in this play. \\n\"\n        docs_content += doc.page_content + \"\\n\\n\"\n    message = prompt.invoke({\"question\": state[\"question\"], \"context\": docs_content})\n    response = llm.invoke(message)\n    return {\"answer\": response.content}\n\n# Reestablishing langgraph\n\ngraph_builder = StateGraph(State).add_sequence([apply_filter, retrieve, generate])\ngraph_builder.add_edge(START, \"retrieve\")\ngraph = graph_builder.compile()\n\n\n\n\nCode\ndef analyze_play(i: int):\n\n    if i &lt; 0 or i &gt;= len(docs):\n        raise ValueError(\"Index out of range for the documents list.\")\n    \n    # Apply the graph to the state\n    message = prompt.invoke({\"question\": \"Analyze this play according to the system prompt.\", \"context\": docs[i].page_content})\n    return llm.invoke(message).content"
  },
  {
    "objectID": "Vaudeville/Vaudeville_RAG.html#basic-rag-queries",
    "href": "Vaudeville/Vaudeville_RAG.html#basic-rag-queries",
    "title": "Vaudeville RAG",
    "section": "",
    "text": "Now we have the basics set up. Here, we see how it performs. Later, we add a self-check step.\n\n\nCode\nresult = graph.invoke({\"question\": \"Tell me about the elements of Un Docteur en Herbe\"})\n\nprint(f'Answer: {result[\"answer\"]}')\nprint(\"\\n\\nSources:\")\nfor i, source in enumerate(result[\"context\"]):\n    print(f'Source {i+1}: {source.metadata[\"source\"]}')\n\n\nAnswer: Based on the provided text from \"Un Docteur en herbe,\" here is a structured summary of the musical moments and other relevant details:\n\n### Act I\n\n**Scene I**\n- **Characters**: Derbigny, Isidore, Lambert\n- **Dramatic Situation**: Preparations for an exam; father is urging his son to wake up.\n- **Musical Element**: None noted in this scene.\n\n**Scene II**\n- **Characters**: Isidore, Derbigny, Lambert\n- **Dramatic Situation**: Conversation about Isidore's preparation and attire.\n- **Musical Element**: None noted in this scene.\n\n**Scene III**\n- **Characters**: Isidore, Lambert\n- **Dramatic Situation**: Discussion about Isidore's lack of interest in law and preference for painting.\n- **Musical Element**: None noted in this scene.\n\n---\n\n### Act II\n\n**Scene I**\n- **Characters**: Isidore, Lambert, Delapierre Meulière\n- **Dramatic Situation**: Isidore elated about developments with Pauline.\n- **Musical Element**:\n  - **Name of the Air**: \"Ne vois-tu pas, jeune imprudent\"\n  - **Poetic Text**: \n    ```\n    Son âge l'excuse, je crois; \n    Auprès de vous qu'il rentre en grâce,\n    Car en n'est jeune qu'une fois:\n    Il faut que jeunesse se passe.\n    La folie, hélas! n'a qu'un temps,\n    Et nous avons beau nous débattre,\n    On n'a pas deux fois vingt-deux ans,\n    ```\n  - **Rhyme Scheme**: AABB CCDD\n  - **Form of the Poetic Text**: Eight lines with a couplet structure.\n  - **End Accent**: Masculine for all lines.\n  - **Syllable Count**: 10 for each line.\n  - **Irregularities**: None noted.\n\n---\n\n**Scene II**\n- **Characters**: Isidore, Delapierre Meulière, Derbigny\n- **Dramatic Situation**: Discussion of Isidore’s behavior and the expectations surrounding him.\n- **Musical Element**:\n  - **Name of the Air**: \"Ociel! quelle aventure!\"\n  - **Poetic Text**: \n    ```\n    Quel avenir superbe! \n    Le sort protègera \n    Notre docteur en herbe, \n    Qui bientôt fleurira.\n    \n    Sur ce terrain de la goguette, \n    On met d'côté la question d'art, \n    Et si la pièce n'est pas chouette, \n    Fait's quel'succès soit chic en art.\n    ```\n  - **Rhyme Scheme**: ABAB CDCD\n  - **Form of the Poetic Text**: A refrain followed by verses.\n  - **End Accent**: Masculine for the first and third lines; feminine for the second and fourth lines.\n  - **Syllable Count**: 8 for each line.\n  - **Irregularities**: None noted.\n\n### Additional Observations\n- Musical elements in the form of ancient or well-known melodies are both adapted and reused throughout the play.\n- The structure of the vaudeville allows for the interspersion of dialogue with songs that advance the plot or characterize the figures, maintaining a light-hearted comedic atmosphere typical of the genre.\n\nIf additional analyses of specific scenes or frameworks of other acts are needed, please let me know!\n\n\nSources:\nSource 1: Un_docteur_en_herbe.pdf\nSource 2: Un_docteur_en_herbe.pdf\nSource 3: Ohé_Les_p_tits_agneaux_revue.pdf\nSource 4: Ohé_Les_p_tits_agneaux_revue.pdf\nSource 5: Un_docteur_en_herbe.pdf\nSource 6: Un_docteur_en_herbe.pdf\nSource 7: Ohé_Les_p_tits_agneaux_revue.pdf\nSource 8: Un_docteur_en_herbe.pdf\nSource 9: Un_docteur_en_herbe.pdf\nSource 10: Un_docteur_en_herbe.pdf\n\n\n\n\nCode\nresult = graph.invoke({\"question\": \"Tell me about the elements of Un Docteur en Herbe\",\n                       \"filter\": {\"Work\": \"Un Docteur en herbe\"}})\n\nprint(f'Answer: {result[\"answer\"]}')\nprint(\"\\n\\nSources:\")\nfor i, source in enumerate(result[\"context\"]):\n    print(f'Source {i+1}: {source.metadata[\"source\"]}')\n\n\nAnswer: \"Un Docteur en Herbe\" is a 19th-century French vaudeville in two acts. Here are the elements based on the text provided:\n\n**Act and Scene**: The play consists of two acts. Specific scenes mentioned in the provided text include Act I Scenes 1, 2, 3, 12, 13, and Act II Scene 15.\n\n**Characters/Singing**:\n1. **Derbigny** - Portrayed as an older character (50 years old) interacting with Isidore and Lambert.\n2. **Isidore** - Derbigny's son, a law student, who is portrayed as naive and somewhat scatterbrained.\n3. **Lambert** - A young doctor, involved in conversation with Derbigny and Isidore, and is characterized by a focus on balance between work and pleasure.\n4. **Delapierre Meulière** - Refers to Lambert as a friend; there's some dramatic tension with Isidore involving his daughter.\n5. **Pauline** - Derbigny’s daughter, appears in interactions with Isidore and Delapierre Meulière.\n6. **Paméla** - A grisette, involved in scenes with Isidore and Lambert.\n\n**Dramatic Situation**: \n- The play seems to revolve around personal dynamics and misunderstandings, involving themes of naiveté, societal roles, and familial obligations. \n- A specific dramatic situation includes a potential duel scenario between Isidore and Delapierre Meulière.\n- There's an element of Isidore preparing for a law exam under his father and Lambert's guidance.\n\n**Musical Elements**:\n- There are references to airs (musical pieces) like \"Ne vois-tu pas, jeune imprudent\" and \"Ociel! quelle aventure!\" which are part of vaudeville tradition using preexisting popular tunes with new lyrics.\n\n**Poetic Text**:\n- The language is rhymed and in a playful, comical style fitting vaudeville, often reflecting on the absurdity of situations.\n\n**Rhyme Scheme, Form, and Structure**:\n- Typical for the period's vaudeville, likely using couplets or quatrains, with rhymes that could be masculine or feminine.\n- Number of syllables per line and specific rhyme schemes aren't directly given in the provided text.\n\n**End Accent and Syllable Count**: \n- Not explicitly outlined, but likely varies as is common in vaudeville for comedic or dramatic effect.\n\n**Irregularities**:\n- Characters frequently switch between prose and verse, with humorous misunderstandings and comically exaggerated threats or situations.\n\nOverall, \"Un Docteur en Herbe\" showcases typical vaudeville elements with humorous dialogue, character-driven plots, and intermittent musical numbers using well-known tunes. Its themes revolve around youthful indiscretions, societal obligations, and family tensions, presented in a light-hearted manner.\n\n\nSources:\nSource 1: Un_docteur_en_herbe.pdf\nSource 2: Un_docteur_en_herbe.pdf\nSource 3: Un_docteur_en_herbe.pdf\nSource 4: Un_docteur_en_herbe.pdf\nSource 5: Un_docteur_en_herbe.pdf\nSource 6: Un_docteur_en_herbe.pdf\nSource 7: Un_docteur_en_herbe.pdf\nSource 8: Un_docteur_en_herbe.pdf\nSource 9: Un_docteur_en_herbe.pdf\nSource 10: Un_docteur_en_herbe.pdf\nSource 11: Un_docteur_en_herbe.pdf\nSource 12: Un_docteur_en_herbe.pdf\nSource 13: Un_docteur_en_herbe.pdf\nSource 14: Un_docteur_en_herbe.pdf\nSource 15: Un_docteur_en_herbe.pdf\n\n\n\n\nCode\nresult = graph.invoke({\"question\": \"Compare Un Docteur en Herbe to Les Artistes par occasion.\",\n                       \"filter\": {\"$or\": [{\"Work\": \"Un Docteur en herbe\"},{\"Work\": \"Les Artistes par occasion\"}]}})\n\nprint(f'Answer: {result[\"answer\"]}')\nprint(\"\\n\\nSources:\")\nfor i, source in enumerate(result[\"context\"]):\n    print(f'Source {i+1}: {source.metadata[\"source\"]}')\n\n\nAnswer: The two plays, \"Un Docteur en Herbe\" by Duvert et Lausanne and \"Les Artistes par Occasion\" by Alexandre Duval, offer an insightful glimpse into 19th-century French vaudeville. Below is a comparative analysis based on the available text excerpts.\n\n**Act and Scene Structure:**\n- \"Un Docteur en Herbe\" is structured in at least two acts with multiple scenes, involving a diverse set of characters within different locations like a hotel in Paris and a house in Briare. The excerpts suggest a rich narrative with tight interactions among characters in different settings.\n- \"Les Artistes par Occasion\" is a single-act play set in a garden in Tivoli, near Rome, offering a continuous flow without the segmentation into multiple acts as seen in \"Un Docteur en Herbe.\"\n\n**Characters and Roles:**\n- \"Un Docteur en Herbe\" features characters such as Derbigny, Isidore, Lambert, Pauline, Pamela, and others, engaging in multi-layered relationships, often revolving around family dynamics, profession, and social standings.\n- \"Les Artistes par Occasion\" involves characters like Fomboni, Delmonte, Eléonore, Zerbine, and Pedro in a more direct plot centered around artistic endeavors and social interactions.\n\n**Dramatic Situation:**\n- The dramatic situation in \"Un Docteur en Herbe\" includes themes of social expectations, familial pressures, youthful folly, and examinations. Scenes often juxtapose personal desires with duties and societal pressure.\n- In contrast, \"Les Artistes par Occasion\" focuses on the anticipation of renowned artists visiting coinciding with preparations for a celebration, prominently involving elements of romance and artistic appreciation.\n\n**Musical Elements:**\n- \"Un Docteur en Herbe\" is infused with musical interludes enhancing the comedic and dramatic situations. The presence of airs such as \"Ne vois-tu pas, jeune imprudent\" showcases the integration of recognizable tunes with new lyrics for theatrical effect.\n- In \"Les Artistes par Occasion,\" music is also integral, with songs like romance and duet being part of the narrative, aligning with the theme of being an artist or art enthusiast.\n\n**Textual Form and Style:**\n- Both plays employ a blend of prose and rhymed verse, especially in songs, and exhibit a typical vaudeville style by integrating humor, exaggeration, and societal critique.\n- \"Un Docteur en Herbe\" often utilizes humor rooted in misunderstandings and societal norms, presenting dialogues that reveal character follies or ignorance comically.\n- The text of \"Les Artistes par Occasion\" indicates an emphasis on the romantic and artistic expressions and lite societal satire.\n\nIn summary, while both plays belong to the vaudeville genre, they differ in structure, themes, and settings but share certain elements like musical integration and humor. \"Un Docteur en Herbe\" presents a more intricate plot with diverse characters and settings, whereas \"Les Artistes par Occasion\" revolves around an artistic and romantic theme within a singular setting. Both works highlight the cultural inclinations of 19th-century French theatre through their unique but complementary lenses.\n\n\nSources:\nSource 1: Un_docteur_en_herbe.pdf\nSource 2: Un_docteur_en_herbe.pdf\nSource 3: Un_docteur_en_herbe.pdf\nSource 4: Un_docteur_en_herbe.pdf\nSource 5: Un_docteur_en_herbe.pdf\nSource 6: Duval_Les_artistes_par_occasion_(1807).pdf\nSource 7: Un_docteur_en_herbe.pdf\nSource 8: Duval_Les_artistes_par_occasion_(1807).pdf\nSource 9: Un_docteur_en_herbe.pdf\nSource 10: Un_docteur_en_herbe.pdf\nSource 11: Un_docteur_en_herbe.pdf\nSource 12: Un_docteur_en_herbe.pdf\nSource 13: Un_docteur_en_herbe.pdf\nSource 14: Un_docteur_en_herbe.pdf\nSource 15: Un_docteur_en_herbe.pdf\n\n\n\n\nCode\nresult = graph.invoke({\"question\": \"Compare the elements of Un Docteur en Herbe to Les Artistes par occasion.\",\n                       \"filter\": {\"$or\": [{\"Work\": \"Un Docteur en herbe\"},{\"Work\": \"Les Artistes par occasion\"}]}})\n\nprint(f'Answer: {result[\"answer\"]}')\nprint(\"\\n\\nSources:\")\nfor i, source in enumerate(result[\"context\"]):\n    print(f'Source {i+1}: {source.metadata[\"source\"]}')\n\n\nAnswer: When comparing the elements of \"Un Docteur en Herbe\" to \"Les Artistes par occasion,\" several aspects are noticeable:\n\n1. **Dramatic Structure:**\n   - **Un Docteur en Herbe**: Structured as a comedy-vaudeville in two acts, involving multiple characters and detailed scenes with numerous interactions.\n   - **Les Artistes par occasion**: A comedy with elements of ariettes (singing parts), presented in one act, typically showing a lighter and straightforward storyline.\n\n2. **Setting:**\n   - **Un Docteur en Herbe**: Its setting transitions from an inn in Paris to the house of Derbigny in Briare, focusing on indoor, familial, and academic environments. \n   - **Les Artistes par occasion**: Set in a picturesque garden in Tivoli, near Rome, offering an outdoor setting associated with art and leisure.\n\n3. **Characters:**\n   - **Un Docteur en Herbe**: Features characters like Derbigny, Isidore, Lambert, and Pauline, focusing on familial relationships and professional futures with a comedic undertone.\n   - **Les Artistes par occasion**: Includes characters like Fomboni, Pedro, and Eléonore, focusing on themes related to arts and performance, accompanied by humor and impersonations.\n\n4. **Dramatic Situation:**\n   - **Un Docteur en Herbe**: Predominantly revolves around Isidore's academic challenges and humorous interactions regarding his future and marriage proposals.\n   - **Les Artistes par occasion**: Centers on the comedic interactions of mistaken identities and artist impersonations leading to amusing situations.\n\n5. **Musical Elements:**\n   - **Un Docteur en Herbe**: Includes vaudeville numbers with integrated songs like \"AIR Ne vois-tu pas, jeune imprudent\" which show dramatic interaction through lyrics.\n   - **Les Artistes par occasion**: Involves ariettes where characters express emotions and storytelling, evidencing the influence of Italian opera style in the dialogue.\n\n6. **Comedy Style:**\n   - **Un Docteur en Herbe**: The comedy emerges from familial situations, personal relationships, and Isidore's endearing naiveté.\n   - **Les Artistes par occasion**: The humor is embedded in cultural misunderstandings and the satirical take on the life of artists.\n\nConclusively, both plays exhibit a variétal approach to humor and musical integration within dramatic narratives, yet they take distinct thematic paths—academic and familial foibles in \"Un Docteur en Herbe\" versus artistic pretensions and romance in \"Les Artistes par occasion.\"\n\n\nSources:\nSource 1: Un_docteur_en_herbe.pdf\nSource 2: Un_docteur_en_herbe.pdf\nSource 3: Un_docteur_en_herbe.pdf\nSource 4: Un_docteur_en_herbe.pdf\nSource 5: Un_docteur_en_herbe.pdf\nSource 6: Duval_Les_artistes_par_occasion_(1807).pdf\nSource 7: Un_docteur_en_herbe.pdf\nSource 8: Un_docteur_en_herbe.pdf\nSource 9: Un_docteur_en_herbe.pdf\nSource 10: Un_docteur_en_herbe.pdf\nSource 11: Un_docteur_en_herbe.pdf\nSource 12: Un_docteur_en_herbe.pdf\nSource 13: Duval_Les_artistes_par_occasion_(1807).pdf\nSource 14: Duval_Les_artistes_par_occasion_(1807).pdf\nSource 15: Un_docteur_en_herbe.pdf\n\n\n\n\nCode\nresult = graph.invoke({\"question\": \"How do the poetic elements of Un Docteur en Herbe compare to other works?\"})\n\nprint(f'Answer: {result[\"answer\"]}')\nprint(\"\\n\\nSources:\")\nfor i, source in enumerate(result[\"context\"]):\n    print(f'Source {i+1}: {source.metadata[\"source\"]}')\n\n\nAnswer: The poetic elements of \"Un Docteur en Herbe\" can be compared to other 19th-century French vaudevilles and operettas in various ways, particularly in terms of rhyme scheme, versification, structure, and thematic elements. Here are some points of comparison:\n\n1. **Rhyme Scheme and Meter:**\n   - In \"Un Docteur en Herbe,\" the use of regular rhyme schemes (often alternating) is typical of the genre, which emphasizes musicality and the ease of memorization for the audience. For example, the song \"Moifumer?paslemoinsdumonde\" often follows an ABAB rhyme scheme.\n   - This approach mirrors that of other contemporaneous works such as Jacques Offenbach’s operettas, which also employed accessible and catchy verse structures, enhancing their appeal to a wide audience.\n\n2. **Syllable Count and Scansion:**\n   - The texts in \"Un Docteur en Herbe\" typically feature octo-syllabic or decasyllabic lines, creating a rhythmic flow that suits the comedic and often lighthearted nature of the narrative. This is similar to operatic arias from the same period, where the lyrical quality must complement expressive melodies.\n   - Compared to works like \"La Belle Hélène,\" Offenbach often used varied syllable counts to increase dramatic tension or comedic effect, which can sometimes diverge from the more uniform counts in \"Un Docteur en Herbe.\"\n\n3. **Form and Structure:**\n   - The inclusion of refrains and repeated phrases in songs from \"Un Docteur en Herbe\" reinforces the communal aspect of performance, similar to the structure found in many folk songs and popular operettas of the time.\n   - Conversely, while many vaudevilles adhered closely to simple verse forms, some pieces from composers like Charles Gounod explore more complex forms to convey deeper emotion, which might be less prevalent in the more straightforward approach of \"Un Docteur en Herbe.\"\n\n4. **Thematic Elements:**\n   - Thematic exploration in \"Un Docteur en Herbe\" reflects societal norms and humorous takes on medical practices and romantic entanglements, which are common in many vaudevilles. This is reminiscent of similar themes in other works like \"La Périchole,\" where social satire and romantic comedy intersect.\n   - In comparison, works like Victor Hugo’s \"Ruy Blas,\" while not an operetta, often utilize poetic elements that are richer in existential themes, contrasting with the lighter, comedic tones evident in \"Un Docteur en Herbe.\"\n\n5. **Characterization through Song:**\n   - The musical moments in \"Un Docteur en Herbe\" often serve to develop character traits and enhance dramatic situations (e.g., Isidore's self-deprecating humor about smoking). This technique is also prevalent in other works where songs deliver crucial insight into character motivations, as seen in the operettas of Gilbert and Sullivan.\n   - However, in more serious operatic compositions, musical moments may serve to express deep emotional states, focusing more on lyrical poetry and less on comedy.\n\nIn conclusion, while \"Un Docteur en Herbe\" shares many characteristics with other 19th-century works in terms of rhyme and structure, it maintains a lighthearted approach toward themes of love and societal norms through its lyrical form. Its comedic elements align it more closely with the vaudeville tradition, contrasting with the dramatic narratives of more serious operatic works.\n\n\nSources:\nSource 1: Un_docteur_en_herbe.pdf\nSource 2: Un_docteur_en_herbe.pdf\nSource 3: Ohé_Les_p_tits_agneaux_revue.pdf\nSource 4: Ohé_Les_p_tits_agneaux_revue.pdf\nSource 5: Un_docteur_en_herbe.pdf\nSource 6: Labiche_Rue_de_l'Homme_armé_(1849).pdf\nSource 7: Un_docteur_en_herbe.pdf\nSource 8: Un_docteur_en_herbe.pdf\nSource 9: Ohé_Les_p_tits_agneaux_revue.pdf\nSource 10: La_Dette_d_honneur.pdf\n\n\n\n\nCode\nresult = graph.invoke({\"question\": \"What airs / melodies are present in Les Modistes?\", \"filter\": {\"Work\": \"Les Modistes\"}})\n\nprint(f'Answer: {result[\"answer\"]}')\nprint(\"\\n\\nSources:\")\nfor i, source in enumerate(result[\"context\"]):\n    print(f'Source {i+1}: {source.metadata[\"source\"]}')\n\n\nAnswer: \"Les Modistes\" is a comical operetta by Hervé, which premiered in 1872. It tells the story of a group of fashionable milliners and the romantic entanglements surrounding them. In examining the musical moments in \"Les Modistes,\" here's a breakdown of the relevant details regarding the airs/mélodies present in the piece:\n\n### Act 1\n\n#### Scene 1\n- **Character(s)**: Léon, a wealthy suitor, and the milliners\n- **Dramatic Situation**: A lively introduction as Léon meets the milliners and admires their work\n- **Name of the Air or Mélodie**: \"Les petits mousses\" (a well-known air from \"Les Huguenots\" by Meyerbeer)\n- **Poetic Text**: Celebratory lyrics about fashion and beauty\n- **Rhyme Scheme**: AABB\n- **Form of the Poetic Text**: Strophic with a refrain\n- **End Accent for Each Line**: Alternating feminine and masculine accents\n- **Syllable Count**: Lines typically range from 8 to 12 syllables\n- **Irregularities**: Some lines may extend beyond typical syllable patterns for added emphasis.\n\n#### Scene 2\n- **Character(s)**: Primarily the milliners (Désirée, Rosine, and others)\n- **Dramatic Situation**: Discussing romantic interests and their aspirations\n- **Name of the Air or Mélodie**: \"Ah! vous dirai-je, Maman\" (a popular tune)\n- **Poetic Text**: Light-hearted lyrics about love and attraction\n- **Rhyme Scheme**: ABAB\n- **Form of the Poetic Text**: Quatrains, no refrain\n- **End Accent for Each Line**: Mainly masculine\n- **Syllable Count**: Consistent 8 syllables per line\n- **Irregularities**: Minor variations in some lines to maintain flow.\n\n### Act 2\n\n#### Scene 1\n- **Character(s)**: Léon and Doublon (another suitor)\n- **Dramatic Situation**: Confrontation between the suitors\n- **Name of the Air or Mélodie**: \"Non, je ne regrette rien\" (popularized by Édith Piaf, but with older associations)\n- **Poetic Text**: Competitive lyrics about their affection for the milliners\n- **Rhyme Scheme**: AABB again\n- **Form of the Poetic Text**: Verses without catchy refrain\n- **End Accent for Each Line**: Mixed accents\n- **Syllable Count**: Varied, typically leaning toward 10\n- **Irregularities**: Some comedic interjections within the flow.\n\n### Act 3\n\n#### Scene 1\n- **Character(s)**: Milliners, Léon, Doublon, ensemble\n- **Dramatic Situation**: The climax, where love choices are revealed\n- **Name of the Air or Mélodie**: \"Carmen's Habanera\" (from Bizet's \"Carmen\")\n- **Poetic Text**: A blend of humor and dramatic revelation about love's complexities\n- **Rhyme Scheme**: ABAB\n- **Form of the Poetic Text**: Free verse sections interspersed with repeated refrains\n- **End Accent for Each Line**: Primarily masculine\n- **Syllable Count**: Mixing lines of 6 to 11 syllables\n- **Irregularities**: Some lines vary rhythmically for dramatic effect.\n\nIn summary, \"Les Modistes\" features various musical moments that draw from popular tunes of the time while embedding new lyrics that reflect the light-hearted and comedic nature of the story. The arrangements and lyrics serve to enhance the characters' personalities and the overall narrative.\n\n\nSources:\n\n\n\n\nCode\nresult = graph.invoke({\"question\": \"What types of airs / melodies are present in dramatic situations of romance?\"})\n\nprint(f'Answer: {result[\"answer\"]}')\nprint(\"\\n\\nSources:\")\nfor i, source in enumerate(result[\"context\"]):\n    print(f'Source {i+1}: {source.metadata[\"source\"]}')\n\n\nAnswer: In the context of the 19th-century French vaudeville and opera, various types of airs or melodies are present in dramatic situations of romance. Below are some examples identified from the provided texts, detailing the specific dramatic situations where romance plays a crucial role. \n\n### Examples of Musical Situations in Romantic Contexts\n\n1. **Title:** Air du Fleuve de la vie  \n   - **Act & Scene:** Not specified in the excerpt (likely a romantic exchange).  \n   - **Characters Singing:** Roland.  \n   - **Dramatic Situation:** Expression of romantic feelings, addressing a love interest.  \n   - **Melodie:** \"Air du Fleuve de la vie.\"  \n   - **Poetic Text:** \n     ```\n     Saisis d'une frayeur nouvelle,  \n     Je tremble, et ne lui parle point;  \n     Qu'elle est belle!... et pourtant sur elle  \n     Tu l'emportes en un seul point.  \n     ```\n   - **Rhyme Scheme:** AABB  \n   - **Form:** Quatrains (4 lines).  \n   - **End Accent:** 1 feminine, 3 masculine.  \n   - **Syllable Count:** 10, 10, 10, 10 (consistent).  \n   - **Irregularities:** None noted.\n\n2. **Title:** Air : Femmes, voulez-vous éprouver.  \n   - **Act & Scene:** Not specified (likely involves romantic advice).  \n   - **Characters Singing:** Madame Delaunay.  \n   - **Dramatic Situation:** Advising a young woman on romance.  \n   - **Melodie:** \"Air : Femmes, voulez-vous éprouver.\"  \n   - **Poetic Text:** \n     ```\n     Quoi, se fâcher pour les amours;  \n     Ah! ton sort est digne d'envie,  \n     On ne se fâche pas toujours,  \n     Quand on avance dans la vie.  \n     ```\n   - **Rhyme Scheme:** AABB  \n   - **Form:** Quatrains (4 lines).  \n   - **End Accent:** 2 masculine, 2 feminine.  \n   - **Syllable Count:** 10, 10, 10, 10 (consistent).  \n   - **Irregularities:** None noted.\n\n3. **Title:** Air de Poncede Léon  \n   - **Act & Scene:** Not specified (revealing feelings of betrayal in romantic context).  \n   - **Characters Singing:** Clara.  \n   - **Dramatic Situation:** Expressing feelings of betrayal and love.  \n   - **Melodie:** \"Air de Poncede Léon.\"  \n   - **Poetic Text:** \n     ```\n     Si j'en avais cru le menteur,  \n     Dans cet instant, sur ma sœur,  \n     Il me donnait l'avantage,  \n     Seule je possédais son cœur.  \n     ```\n   - **Rhyme Scheme:** AABB  \n   - **Form:** Quatrains (4 lines).  \n   - **End Accent:** 2 feminine, 2 masculine.  \n   - **Syllable Count:** 10, 10, 10, 10 (consistent).  \n   - **Irregularities:** None noted.\n\n4. **Title:** Air : De Doche  \n   - **Act & Scene:** Scene XIII (romantic reflection).  \n   - **Characters Singing:** Amélie.  \n   - **Dramatic Situation:** Expressing love through dance and melody.  \n   - **Melodie:** \"De Doche.\"  \n   - **Poetic Text:** \n     ```\n     Quel charme heureux! quelle grâce légère  \n     Semble animer ses yeux déjà si doux!  \n     ```\n   - **Rhyme Scheme:** AAB  \n   - **Form:** Couplets.  \n   - **End Accent:** 1 feminine, 2 masculine.  \n   - **Syllable Count:** 10, 10 (consistent).  \n   - **Irregularities:** None noted.\n\n### Summary\nIn summary, the various airs or melodies distinguished in the romantic contexts often reflect feelings of love, betrayal, or advice regarding romantic relationships. The structures typically follow consistent rhyme schemes with predictable syllable counts, aiding in the emotional delivery of the text. The songs often feature a blend of masculine and feminine endings, contributing to the lyrical quality inherent to French musical theatre and opera of the 19th century.\n\n\nSources:\nSource 1: Duval_Les_artistes_par_occasion_(1807).pdf\nSource 2: Revel_=_Le_Fifre_du_roi_de_Prusse,_ou_les_Prisonniers_de_Spandau_(1818).pdf\nSource 3: Coraly_ou_la_soeur_et_le_Frere.pdf\nSource 4: Revel_=_Le_Fifre_du_roi_de_Prusse,_ou_les_Prisonniers_de_Spandau_(1818).pdf\nSource 5: Ohé_Les_p_tits_agneaux_revue.pdf\nSource 6: L_isle_des_noirs_ou_Les_deux_ingénues.pdf\nSource 7: Les_maris_sans_femmes.pdf\nSource 8: La_Dette_d_honneur.pdf\nSource 9: Revel_=_Le_Fifre_du_roi_de_Prusse,_ou_les_Prisonniers_de_Spandau_(1818).pdf\nSource 10: Les_maris_sans_femmes.pdf"
  },
  {
    "objectID": "Vaudeville/Vaudeville_RAG.html#setting-up-a-self-check-for-document-relevancy",
    "href": "Vaudeville/Vaudeville_RAG.html#setting-up-a-self-check-for-document-relevancy",
    "title": "Vaudeville RAG",
    "section": "",
    "text": "Here, we are setting up a self-check for document relevancy. If a document is relevant, it is passed as context. If not, it is left out.\n\n\nCode\n# Imports for establishing the RAG from the cell below\nimport getpass\nimport os\nfrom langchain.chat_models import init_chat_model\nfrom langchain_openai import OpenAIEmbeddings\nfrom langchain_chroma import Chroma\nfrom langchain.schema import Document\nfrom typing_extensions import List, TypedDict, Optional\nfrom langchain_core.prompts import ChatPromptTemplate\nfrom langgraph.graph import START, StateGraph\n\n\n\n\nCode\n# Setting up chat model\nif not os.environ.get(\"OPENAI_API_KEY\"):\n  os.environ[\"OPENAI_API_KEY\"] = getpass.getpass(\"Enter API key for OpenAI: \")\n\n\nllm = init_chat_model(\"gpt-4o\", model_provider=\"openai\")\n\n# Setting up embeddings\nembeddings = OpenAIEmbeddings(model=\"text-embedding-3-large\")\n\n# Reestablishing up our persist directory for Chroma\nvector_store = Chroma(\n    collection_name=\"example_collection\",\n    embedding_function=embeddings,\n    persist_directory=\"./chroma_langchain_db\",  # Where we stored our data before\n)\n\n# Reestablishing retrieval and generation functions\nprompt = ChatPromptTemplate.from_messages([\n    (\"system\", 'You are an expert in French musical theatre and opera of the 19th century.  You will help us explore the texts (librettos) of vaudevilles, which are dramatic productions that include periodic musical numbers, which might be songs, choruses, instrumental dances, and other sonic events. \\n '\n    'Many of these musical moments reuse some preexisting (and often well-known)  melody or tune.  These are variously called \"melodie\", or \"air\", and identified with a short title that refers in some way to an opera or collection of melodies from which it was drawn.  The titles might include the names of works, or other characters in those original works. '\n    '\\n In the context of the plays, these tunes become the vehicle for newly composed lyrics, which are normally rhymed, and which normally follow the poetic scansion and structure of the original lyrics.  Rhyme, versification and structure are thus of interest to us. If there is a mention of \"air\" or \"melodie\", look for the tune that the section is sung to, which will be labeled as \"air\" or \"melodie\" within the text.\\n'\n    'If you cannot find the answers for anything within the context provided, state \"I dont know\" or similar - do not make assumptions beyond what is in the context. Please always mention which play you are referencing in each section of your response, if multiple. The plays are labeled at the top of each source. If you can tell what act / scene and/or page a source is from, cite it too.\\n\\n'),\n    (\"human\", \"Context:\\n{context}\\n\\nQuestion: {question}\")\n])\n\nclass State(TypedDict):\n    question: str\n    filter: Optional[dict]\n    context: List[Document]\n    answer: str\n\ndef apply_filter(state: State):\n    if \"filter\" in state and state[\"filter\"]:\n        state[\"filter\"] = {k: v for k, v in state[\"filter\"].items() if v is not None}\n    else:\n        state[\"filter\"] = None\n    return state\n\ndef retrieve(state: State):\n    filter_dict = state[\"filter\"] if state.get(\"filter\") else None\n    retrieved_docs = vector_store.similarity_search(state[\"question\"], k=15, filter=filter_dict)\n    return {\"context\": retrieved_docs}\n\n\nretriever = vector_store.as_retriever()\n\n### Retrieval Grader\n# Data model\nclass GradeDocuments(BaseModel):\n    \"\"\"Binary score for relevance check on retrieved documents.\"\"\"\n\n    binary_score: str = Field(\n        description=\"Documents are relevant to the question, 'yes' or 'no'\"\n    )\n\n\n# LLM with function call\nllm = ChatOpenAI(model=\"gpt-4o-mini\", temperature=0)\nstructured_llm_grader = llm.with_structured_output(GradeDocuments)\n\n# Prompt\nsystem = \"\"\"You are a grader assessing relevance of a retrieved document to a user question. \\n \n    It does not need to be a stringent test. The goal is to filter out erroneous retrievals. \\n\n    If the document contains keyword(s) or semantic meaning related to the user question, grade it as relevant. \\n\n    Give a binary score 'yes' or 'no' score to indicate whether the document is relevant to the question.\"\"\"\ngrade_prompt = ChatPromptTemplate.from_messages(\n    [\n        (\"system\", system),\n        (\"human\", \"Retrieved document: \\n\\n {document} \\n\\n User question: {question}\"),\n    ]\n)\n\nretrieval_grader = grade_prompt | structured_llm_grader\n\ndef grade_documents(state):\n    \"\"\"\n    Determines whether the retrieved documents are relevant to the question.\n\n    Args:\n        state (dict): The current graph state\n\n    Returns:\n        state (dict): Updates documents key with only filtered relevant documents\n    \"\"\"\n\n    print(\"---CHECK DOCUMENT RELEVANCE TO QUESTION---\")\n    question = state[\"question\"]\n    documents = state[\"context\"]\n\n    # Score each doc\n    filtered_docs = []\n    for i,d in enumerate(documents):\n        score = retrieval_grader.invoke(\n            {\"question\": question, \"document\": d.page_content}\n        )\n        grade = score.binary_score\n        if grade == \"yes\":\n            print(f\"---GRADE {i}: DOCUMENT RELEVANT---\")\n            filtered_docs.append(d)\n        else:\n            print(f\"---GRADE {i}: DOCUMENT NOT RELEVANT---\")\n            continue\n    return {\"documents\": filtered_docs, \"question\": question}\n\ndef decide_to_generate(state):\n    \"\"\"\n    Determines whether to generate an answer, or re-generate a question.\n\n    Args:\n        state (dict): The current graph state\n\n    Returns:\n        str: Binary decision for next node to call\n    \"\"\"\n\n    print(\"---ASSESS GRADED DOCUMENTS---\")\n    state[\"question\"]\n    filtered_documents = state[\"documents\"]\n\n    if not filtered_documents:\n        # All documents have been filtered check_relevance\n        # We will re-generate a new query\n        print(\n            \"---DECISION: ALL DOCUMENTS ARE NOT RELEVANT TO QUESTION, TRANSFORM QUERY---\"\n        )\n        return \"transform_query\"\n    else:\n        # We have relevant documents, so generate answer\n        print(\"---DECISION: GENERATE---\")\n        return \"generate\"\ndef generate(state: State):\n    docs_content = \"\"\n    for doc in state[\"context\"]:\n        docs_content += f\"The following text is a chunk from document titled: {doc.metadata[\"Work\"]}. There are a total of {doc.metadata[\"total_pages\"]} pages in this play. \\n\"\n        docs_content += doc.page_content + \"\\n\\n\"\n    message = prompt.invoke({\"question\": state[\"question\"], \"context\": docs_content})\n    response = llm.invoke(message)\n    return {\"answer\": response.content}\n\n# Reestablishing langgraph\n\nworkflow = StateGraph(State)\n\n# Define the nodes\nworkflow.add_node(\"retrieve\", retrieve)  # retrieve\nworkflow.add_node(\"grade_documents\", grade_documents)  # grade documents\nworkflow.add_node(\"generate\", generate)  # generate\n\n# Build graph\nworkflow.add_edge(START, \"retrieve\")\nworkflow.add_edge(\"retrieve\", \"grade_documents\")\nworkflow.add_conditional_edges(\n    \"grade_documents\",\n    decide_to_generate\n)\nworkflow.add_edge(\"generate\", END)\n\n# Compile\napp = workflow.compile()"
  },
  {
    "objectID": "Vaudeville/Vaudeville_RAG.html#functioning-rag-with-self-check",
    "href": "Vaudeville/Vaudeville_RAG.html#functioning-rag-with-self-check",
    "title": "Vaudeville RAG",
    "section": "",
    "text": "Code\nresult = graph.invoke({\"question\": \"What types of airs / melodies are present in dramatic situations of romance?\"})\n\nprint(f'Answer: {result[\"answer\"]}')\nprint(\"\\n\\nSources:\")\nfor i, source in enumerate(result[\"context\"]):\n    print(f'Source {i+1}: {source.metadata[\"source\"]}')\n\n\n---CHECK DOCUMENT RELEVANCE TO QUESTION---\n---GRADE: DOCUMENT NOT RELEVANT---\n---GRADE: DOCUMENT RELEVANT---\n---GRADE: DOCUMENT RELEVANT---\n---GRADE: DOCUMENT NOT RELEVANT---\n---GRADE: DOCUMENT RELEVANT---\n---GRADE: DOCUMENT RELEVANT---\n---GRADE: DOCUMENT NOT RELEVANT---\n---GRADE: DOCUMENT RELEVANT---\n---GRADE: DOCUMENT NOT RELEVANT---\n---GRADE: DOCUMENT NOT RELEVANT---\n---GRADE: DOCUMENT RELEVANT---\n---GRADE: DOCUMENT NOT RELEVANT---\n---GRADE: DOCUMENT NOT RELEVANT---\n---GRADE: DOCUMENT NOT RELEVANT---\n---GRADE: DOCUMENT RELEVANT---\nAnswer: In the provided excerpts from various plays, several types of airs or melodies are associated with dramatic situations of romance. Here are the notable examples:\n\n### 1. **Coraly**\n- **AIR du Fleuve de la vie**: This air is used by Roland to express his feelings about his beloved, indicating a romantic tension as he reflects on his emotions and the beauty of the woman he admires.\n\n### 2. **Le Fifre du roi de Prusse, ou les Prisonniers de Spandau**\n- **AIR : De Doche**: Alfred expresses his longing and despair over Amélie, showcasing the romantic turmoil he experiences due to his feelings for her.\n- **AIR : Vaud. du Printems**: Crescendo sings about the beauty of art and talent, which can be interpreted as a metaphor for romantic aspirations and the pursuit of love.\n\n### 3. **Isle des noirs**\n- **AIR: Voulant par ses œuvres complètes**: This air discusses the effects of love, portraying it as a powerful and sometimes destructive force, which aligns with the romantic themes of the characters' experiences.\n\n### 4. **Les Maris sans femmes**\n- **Air : du Vaud. de Farinella**: D'Héricourt expresses his feelings of love and longing, emphasizing the emotional stakes involved in romantic relationships.\n\n### 5. **La Dette d’honneur**\n- **Air : Femmes, voulez-vous éprouver**: This air reflects on the nature of love and relationships, suggesting that romantic disputes are a common part of life, which adds depth to the romantic narrative.\n\n### 6. **D’Aranda**\n- While not explicitly labeled as an air, the dialogue reflects romantic tension and jealousy, which are common themes in romantic situations.\n\n### 7. **Le Fifre du roi de Prusse, ou les Prisonniers de Spandau (again)**\n- **AIR: Vaud. du Piege**: This air captures the essence of love's transformative power, highlighting the emotional depth and complexity of romantic feelings.\n\nIn summary, the airs and melodies present in these dramatic situations of romance often serve to express longing, emotional conflict, and the transformative power of love, enhancing the romantic narrative within the plays.\n\n\nSources:\nSource 1: Duval_Les_artistes_par_occasion_(1807).pdf\nSource 2: Coraly_ou_la_soeur_et_le_Frere.pdf\nSource 3: Revel_=_Le_Fifre_du_roi_de_Prusse,_ou_les_Prisonniers_de_Spandau_(1818).pdf\nSource 4: Revel_=_Le_Fifre_du_roi_de_Prusse,_ou_les_Prisonniers_de_Spandau_(1818).pdf\nSource 5: L_isle_des_noirs_ou_Les_deux_ingénues.pdf\nSource 6: Ohé_Les_p_tits_agneaux_revue.pdf\nSource 7: Les_maris_sans_femmes.pdf\nSource 8: La_Dette_d_honneur.pdf\nSource 9: Revel_=_Le_Fifre_du_roi_de_Prusse,_ou_les_Prisonniers_de_Spandau_(1818).pdf\nSource 10: Les_maris_sans_femmes.pdf\nSource 11: Coraly_ou_la_soeur_et_le_Frere.pdf\nSource 12: D_Aranda_ou_les_grandes_passions_comédi_p_19.pdf\nSource 13: Revel_=_Le_Fifre_du_roi_de_Prusse,_ou_les_Prisonniers_de_Spandau_(1818).pdf\nSource 14: La_grisette_et_l_héritière.pdf\nSource 15: Revel_=_Le_Fifre_du_roi_de_Prusse,_ou_les_Prisonniers_de_Spandau_(1818).pdf"
  },
  {
    "objectID": "Vaudeville/Vaudeville_RAG.html#conclusions",
    "href": "Vaudeville/Vaudeville_RAG.html#conclusions",
    "title": "Vaudeville RAG",
    "section": "",
    "text": "Overall, the RAG system had solid performance. For the most part, it was able to extract the desired information from thousands of pages in a matter of seconds.\nThe self check is effective, and allows the possibility of adding more documents to each query (since irrelevant documents don’t make the prompt), or adding the ability to rephrase the question if it doesn’t reach a certain threshold of relevant documents."
  }
]